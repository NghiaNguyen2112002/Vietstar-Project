

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 12 08:40:35 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text27,local,class=CODE,merge=1,delta=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2
    61                           	psect	text30,local,class=CODE,merge=1,delta=2
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    82                           	dabs	1,0x7E,2
    83     0000                     
    84                           ; Version 2.40
    85                           ; Generated 17/11/2021 GMT
    86                           ; 
    87                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F1829 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     000E                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0095                     	;# 
   157     0096                     	;# 
   158     0097                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009A                     	;# 
   162     009B                     	;# 
   163     009B                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     0111                     	;# 
   171     0112                     	;# 
   172     0113                     	;# 
   173     0114                     	;# 
   174     0115                     	;# 
   175     0116                     	;# 
   176     0117                     	;# 
   177     0118                     	;# 
   178     0119                     	;# 
   179     011A                     	;# 
   180     011B                     	;# 
   181     011D                     	;# 
   182     011E                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     018E                     	;# 
   186     0191                     	;# 
   187     0191                     	;# 
   188     0192                     	;# 
   189     0193                     	;# 
   190     0193                     	;# 
   191     0193                     	;# 
   192     0194                     	;# 
   193     0195                     	;# 
   194     0196                     	;# 
   195     0199                     	;# 
   196     019A                     	;# 
   197     019B                     	;# 
   198     019B                     	;# 
   199     019C                     	;# 
   200     019D                     	;# 
   201     019E                     	;# 
   202     019F                     	;# 
   203     020C                     	;# 
   204     020D                     	;# 
   205     020E                     	;# 
   206     0211                     	;# 
   207     0211                     	;# 
   208     0212                     	;# 
   209     0212                     	;# 
   210     0213                     	;# 
   211     0213                     	;# 
   212     0214                     	;# 
   213     0214                     	;# 
   214     0215                     	;# 
   215     0215                     	;# 
   216     0215                     	;# 
   217     0216                     	;# 
   218     0216                     	;# 
   219     0217                     	;# 
   220     0217                     	;# 
   221     0219                     	;# 
   222     021A                     	;# 
   223     021B                     	;# 
   224     021C                     	;# 
   225     021D                     	;# 
   226     021E                     	;# 
   227     021F                     	;# 
   228     0291                     	;# 
   229     0291                     	;# 
   230     0292                     	;# 
   231     0293                     	;# 
   232     0294                     	;# 
   233     0295                     	;# 
   234     0295                     	;# 
   235     0296                     	;# 
   236     0298                     	;# 
   237     0298                     	;# 
   238     0299                     	;# 
   239     029A                     	;# 
   240     029B                     	;# 
   241     029C                     	;# 
   242     029D                     	;# 
   243     029E                     	;# 
   244     0311                     	;# 
   245     0311                     	;# 
   246     0312                     	;# 
   247     0313                     	;# 
   248     0318                     	;# 
   249     0318                     	;# 
   250     0319                     	;# 
   251     031A                     	;# 
   252     038C                     	;# 
   253     038D                     	;# 
   254     038E                     	;# 
   255     0391                     	;# 
   256     0392                     	;# 
   257     0393                     	;# 
   258     0394                     	;# 
   259     0395                     	;# 
   260     0396                     	;# 
   261     039A                     	;# 
   262     039C                     	;# 
   263     039D                     	;# 
   264     039E                     	;# 
   265     039F                     	;# 
   266     0415                     	;# 
   267     0416                     	;# 
   268     0417                     	;# 
   269     041C                     	;# 
   270     041D                     	;# 
   271     041E                     	;# 
   272     0FE4                     	;# 
   273     0FE5                     	;# 
   274     0FE6                     	;# 
   275     0FE7                     	;# 
   276     0FE8                     	;# 
   277     0FE9                     	;# 
   278     0FEA                     	;# 
   279     0FEB                     	;# 
   280     0FED                     	;# 
   281     0FEE                     	;# 
   282     0FEF                     	;# 
   283     0000                     	;# 
   284     0001                     	;# 
   285     0002                     	;# 
   286     0003                     	;# 
   287     0004                     	;# 
   288     0005                     	;# 
   289     0006                     	;# 
   290     0007                     	;# 
   291     0008                     	;# 
   292     0009                     	;# 
   293     000A                     	;# 
   294     000B                     	;# 
   295     000C                     	;# 
   296     000D                     	;# 
   297     000E                     	;# 
   298     0011                     	;# 
   299     0012                     	;# 
   300     0013                     	;# 
   301     0014                     	;# 
   302     0015                     	;# 
   303     0016                     	;# 
   304     0016                     	;# 
   305     0017                     	;# 
   306     0018                     	;# 
   307     0019                     	;# 
   308     001A                     	;# 
   309     001B                     	;# 
   310     001C                     	;# 
   311     001E                     	;# 
   312     001F                     	;# 
   313     008C                     	;# 
   314     008D                     	;# 
   315     008E                     	;# 
   316     0091                     	;# 
   317     0092                     	;# 
   318     0093                     	;# 
   319     0094                     	;# 
   320     0095                     	;# 
   321     0096                     	;# 
   322     0097                     	;# 
   323     0098                     	;# 
   324     0099                     	;# 
   325     009A                     	;# 
   326     009B                     	;# 
   327     009B                     	;# 
   328     009C                     	;# 
   329     009D                     	;# 
   330     009E                     	;# 
   331     010C                     	;# 
   332     010D                     	;# 
   333     010E                     	;# 
   334     0111                     	;# 
   335     0112                     	;# 
   336     0113                     	;# 
   337     0114                     	;# 
   338     0115                     	;# 
   339     0116                     	;# 
   340     0117                     	;# 
   341     0118                     	;# 
   342     0119                     	;# 
   343     011A                     	;# 
   344     011B                     	;# 
   345     011D                     	;# 
   346     011E                     	;# 
   347     018C                     	;# 
   348     018D                     	;# 
   349     018E                     	;# 
   350     0191                     	;# 
   351     0191                     	;# 
   352     0192                     	;# 
   353     0193                     	;# 
   354     0193                     	;# 
   355     0193                     	;# 
   356     0194                     	;# 
   357     0195                     	;# 
   358     0196                     	;# 
   359     0199                     	;# 
   360     019A                     	;# 
   361     019B                     	;# 
   362     019B                     	;# 
   363     019C                     	;# 
   364     019D                     	;# 
   365     019E                     	;# 
   366     019F                     	;# 
   367     020C                     	;# 
   368     020D                     	;# 
   369     020E                     	;# 
   370     0211                     	;# 
   371     0211                     	;# 
   372     0212                     	;# 
   373     0212                     	;# 
   374     0213                     	;# 
   375     0213                     	;# 
   376     0214                     	;# 
   377     0214                     	;# 
   378     0215                     	;# 
   379     0215                     	;# 
   380     0215                     	;# 
   381     0216                     	;# 
   382     0216                     	;# 
   383     0217                     	;# 
   384     0217                     	;# 
   385     0219                     	;# 
   386     021A                     	;# 
   387     021B                     	;# 
   388     021C                     	;# 
   389     021D                     	;# 
   390     021E                     	;# 
   391     021F                     	;# 
   392     0291                     	;# 
   393     0291                     	;# 
   394     0292                     	;# 
   395     0293                     	;# 
   396     0294                     	;# 
   397     0295                     	;# 
   398     0295                     	;# 
   399     0296                     	;# 
   400     0298                     	;# 
   401     0298                     	;# 
   402     0299                     	;# 
   403     029A                     	;# 
   404     029B                     	;# 
   405     029C                     	;# 
   406     029D                     	;# 
   407     029E                     	;# 
   408     0311                     	;# 
   409     0311                     	;# 
   410     0312                     	;# 
   411     0313                     	;# 
   412     0318                     	;# 
   413     0318                     	;# 
   414     0319                     	;# 
   415     031A                     	;# 
   416     038C                     	;# 
   417     038D                     	;# 
   418     038E                     	;# 
   419     0391                     	;# 
   420     0392                     	;# 
   421     0393                     	;# 
   422     0394                     	;# 
   423     0395                     	;# 
   424     0396                     	;# 
   425     039A                     	;# 
   426     039C                     	;# 
   427     039D                     	;# 
   428     039E                     	;# 
   429     039F                     	;# 
   430     0415                     	;# 
   431     0416                     	;# 
   432     0417                     	;# 
   433     041C                     	;# 
   434     041D                     	;# 
   435     041E                     	;# 
   436     0FE4                     	;# 
   437     0FE5                     	;# 
   438     0FE6                     	;# 
   439     0FE7                     	;# 
   440     0FE8                     	;# 
   441     0FE9                     	;# 
   442     0FEA                     	;# 
   443     0FEB                     	;# 
   444     0FED                     	;# 
   445     0FEE                     	;# 
   446     0FEF                     	;# 
   447     0000                     	;# 
   448     0001                     	;# 
   449     0002                     	;# 
   450     0003                     	;# 
   451     0004                     	;# 
   452     0005                     	;# 
   453     0006                     	;# 
   454     0007                     	;# 
   455     0008                     	;# 
   456     0009                     	;# 
   457     000A                     	;# 
   458     000B                     	;# 
   459     000C                     	;# 
   460     000D                     	;# 
   461     000E                     	;# 
   462     0011                     	;# 
   463     0012                     	;# 
   464     0013                     	;# 
   465     0014                     	;# 
   466     0015                     	;# 
   467     0016                     	;# 
   468     0016                     	;# 
   469     0017                     	;# 
   470     0018                     	;# 
   471     0019                     	;# 
   472     001A                     	;# 
   473     001B                     	;# 
   474     001C                     	;# 
   475     001E                     	;# 
   476     001F                     	;# 
   477     008C                     	;# 
   478     008D                     	;# 
   479     008E                     	;# 
   480     0091                     	;# 
   481     0092                     	;# 
   482     0093                     	;# 
   483     0094                     	;# 
   484     0095                     	;# 
   485     0096                     	;# 
   486     0097                     	;# 
   487     0098                     	;# 
   488     0099                     	;# 
   489     009A                     	;# 
   490     009B                     	;# 
   491     009B                     	;# 
   492     009C                     	;# 
   493     009D                     	;# 
   494     009E                     	;# 
   495     010C                     	;# 
   496     010D                     	;# 
   497     010E                     	;# 
   498     0111                     	;# 
   499     0112                     	;# 
   500     0113                     	;# 
   501     0114                     	;# 
   502     0115                     	;# 
   503     0116                     	;# 
   504     0117                     	;# 
   505     0118                     	;# 
   506     0119                     	;# 
   507     011A                     	;# 
   508     011B                     	;# 
   509     011D                     	;# 
   510     011E                     	;# 
   511     018C                     	;# 
   512     018D                     	;# 
   513     018E                     	;# 
   514     0191                     	;# 
   515     0191                     	;# 
   516     0192                     	;# 
   517     0193                     	;# 
   518     0193                     	;# 
   519     0193                     	;# 
   520     0194                     	;# 
   521     0195                     	;# 
   522     0196                     	;# 
   523     0199                     	;# 
   524     019A                     	;# 
   525     019B                     	;# 
   526     019B                     	;# 
   527     019C                     	;# 
   528     019D                     	;# 
   529     019E                     	;# 
   530     019F                     	;# 
   531     020C                     	;# 
   532     020D                     	;# 
   533     020E                     	;# 
   534     0211                     	;# 
   535     0211                     	;# 
   536     0212                     	;# 
   537     0212                     	;# 
   538     0213                     	;# 
   539     0213                     	;# 
   540     0214                     	;# 
   541     0214                     	;# 
   542     0215                     	;# 
   543     0215                     	;# 
   544     0215                     	;# 
   545     0216                     	;# 
   546     0216                     	;# 
   547     0217                     	;# 
   548     0217                     	;# 
   549     0219                     	;# 
   550     021A                     	;# 
   551     021B                     	;# 
   552     021C                     	;# 
   553     021D                     	;# 
   554     021E                     	;# 
   555     021F                     	;# 
   556     0291                     	;# 
   557     0291                     	;# 
   558     0292                     	;# 
   559     0293                     	;# 
   560     0294                     	;# 
   561     0295                     	;# 
   562     0295                     	;# 
   563     0296                     	;# 
   564     0298                     	;# 
   565     0298                     	;# 
   566     0299                     	;# 
   567     029A                     	;# 
   568     029B                     	;# 
   569     029C                     	;# 
   570     029D                     	;# 
   571     029E                     	;# 
   572     0311                     	;# 
   573     0311                     	;# 
   574     0312                     	;# 
   575     0313                     	;# 
   576     0318                     	;# 
   577     0318                     	;# 
   578     0319                     	;# 
   579     031A                     	;# 
   580     038C                     	;# 
   581     038D                     	;# 
   582     038E                     	;# 
   583     0391                     	;# 
   584     0392                     	;# 
   585     0393                     	;# 
   586     0394                     	;# 
   587     0395                     	;# 
   588     0396                     	;# 
   589     039A                     	;# 
   590     039C                     	;# 
   591     039D                     	;# 
   592     039E                     	;# 
   593     039F                     	;# 
   594     0415                     	;# 
   595     0416                     	;# 
   596     0417                     	;# 
   597     041C                     	;# 
   598     041D                     	;# 
   599     041E                     	;# 
   600     0FE4                     	;# 
   601     0FE5                     	;# 
   602     0FE6                     	;# 
   603     0FE7                     	;# 
   604     0FE8                     	;# 
   605     0FE9                     	;# 
   606     0FEA                     	;# 
   607     0FEB                     	;# 
   608     0FED                     	;# 
   609     0FEE                     	;# 
   610     0FEF                     	;# 
   611     0000                     	;# 
   612     0001                     	;# 
   613     0002                     	;# 
   614     0003                     	;# 
   615     0004                     	;# 
   616     0005                     	;# 
   617     0006                     	;# 
   618     0007                     	;# 
   619     0008                     	;# 
   620     0009                     	;# 
   621     000A                     	;# 
   622     000B                     	;# 
   623     000C                     	;# 
   624     000D                     	;# 
   625     000E                     	;# 
   626     0011                     	;# 
   627     0012                     	;# 
   628     0013                     	;# 
   629     0014                     	;# 
   630     0015                     	;# 
   631     0016                     	;# 
   632     0016                     	;# 
   633     0017                     	;# 
   634     0018                     	;# 
   635     0019                     	;# 
   636     001A                     	;# 
   637     001B                     	;# 
   638     001C                     	;# 
   639     001E                     	;# 
   640     001F                     	;# 
   641     008C                     	;# 
   642     008D                     	;# 
   643     008E                     	;# 
   644     0091                     	;# 
   645     0092                     	;# 
   646     0093                     	;# 
   647     0094                     	;# 
   648     0095                     	;# 
   649     0096                     	;# 
   650     0097                     	;# 
   651     0098                     	;# 
   652     0099                     	;# 
   653     009A                     	;# 
   654     009B                     	;# 
   655     009B                     	;# 
   656     009C                     	;# 
   657     009D                     	;# 
   658     009E                     	;# 
   659     010C                     	;# 
   660     010D                     	;# 
   661     010E                     	;# 
   662     0111                     	;# 
   663     0112                     	;# 
   664     0113                     	;# 
   665     0114                     	;# 
   666     0115                     	;# 
   667     0116                     	;# 
   668     0117                     	;# 
   669     0118                     	;# 
   670     0119                     	;# 
   671     011A                     	;# 
   672     011B                     	;# 
   673     011D                     	;# 
   674     011E                     	;# 
   675     018C                     	;# 
   676     018D                     	;# 
   677     018E                     	;# 
   678     0191                     	;# 
   679     0191                     	;# 
   680     0192                     	;# 
   681     0193                     	;# 
   682     0193                     	;# 
   683     0193                     	;# 
   684     0194                     	;# 
   685     0195                     	;# 
   686     0196                     	;# 
   687     0199                     	;# 
   688     019A                     	;# 
   689     019B                     	;# 
   690     019B                     	;# 
   691     019C                     	;# 
   692     019D                     	;# 
   693     019E                     	;# 
   694     019F                     	;# 
   695     020C                     	;# 
   696     020D                     	;# 
   697     020E                     	;# 
   698     0211                     	;# 
   699     0211                     	;# 
   700     0212                     	;# 
   701     0212                     	;# 
   702     0213                     	;# 
   703     0213                     	;# 
   704     0214                     	;# 
   705     0214                     	;# 
   706     0215                     	;# 
   707     0215                     	;# 
   708     0215                     	;# 
   709     0216                     	;# 
   710     0216                     	;# 
   711     0217                     	;# 
   712     0217                     	;# 
   713     0219                     	;# 
   714     021A                     	;# 
   715     021B                     	;# 
   716     021C                     	;# 
   717     021D                     	;# 
   718     021E                     	;# 
   719     021F                     	;# 
   720     0291                     	;# 
   721     0291                     	;# 
   722     0292                     	;# 
   723     0293                     	;# 
   724     0294                     	;# 
   725     0295                     	;# 
   726     0295                     	;# 
   727     0296                     	;# 
   728     0298                     	;# 
   729     0298                     	;# 
   730     0299                     	;# 
   731     029A                     	;# 
   732     029B                     	;# 
   733     029C                     	;# 
   734     029D                     	;# 
   735     029E                     	;# 
   736     0311                     	;# 
   737     0311                     	;# 
   738     0312                     	;# 
   739     0313                     	;# 
   740     0318                     	;# 
   741     0318                     	;# 
   742     0319                     	;# 
   743     031A                     	;# 
   744     038C                     	;# 
   745     038D                     	;# 
   746     038E                     	;# 
   747     0391                     	;# 
   748     0392                     	;# 
   749     0393                     	;# 
   750     0394                     	;# 
   751     0395                     	;# 
   752     0396                     	;# 
   753     039A                     	;# 
   754     039C                     	;# 
   755     039D                     	;# 
   756     039E                     	;# 
   757     039F                     	;# 
   758     0415                     	;# 
   759     0416                     	;# 
   760     0417                     	;# 
   761     041C                     	;# 
   762     041D                     	;# 
   763     041E                     	;# 
   764     0FE4                     	;# 
   765     0FE5                     	;# 
   766     0FE6                     	;# 
   767     0FE7                     	;# 
   768     0FE8                     	;# 
   769     0FE9                     	;# 
   770     0FEA                     	;# 
   771     0FEB                     	;# 
   772     0FED                     	;# 
   773     0FEE                     	;# 
   774     0FEF                     	;# 
   775     0000                     	;# 
   776     0001                     	;# 
   777     0002                     	;# 
   778     0003                     	;# 
   779     0004                     	;# 
   780     0005                     	;# 
   781     0006                     	;# 
   782     0007                     	;# 
   783     0008                     	;# 
   784     0009                     	;# 
   785     000A                     	;# 
   786     000B                     	;# 
   787     000C                     	;# 
   788     000D                     	;# 
   789     000E                     	;# 
   790     0011                     	;# 
   791     0012                     	;# 
   792     0013                     	;# 
   793     0014                     	;# 
   794     0015                     	;# 
   795     0016                     	;# 
   796     0016                     	;# 
   797     0017                     	;# 
   798     0018                     	;# 
   799     0019                     	;# 
   800     001A                     	;# 
   801     001B                     	;# 
   802     001C                     	;# 
   803     001E                     	;# 
   804     001F                     	;# 
   805     008C                     	;# 
   806     008D                     	;# 
   807     008E                     	;# 
   808     0091                     	;# 
   809     0092                     	;# 
   810     0093                     	;# 
   811     0094                     	;# 
   812     0095                     	;# 
   813     0096                     	;# 
   814     0097                     	;# 
   815     0098                     	;# 
   816     0099                     	;# 
   817     009A                     	;# 
   818     009B                     	;# 
   819     009B                     	;# 
   820     009C                     	;# 
   821     009D                     	;# 
   822     009E                     	;# 
   823     010C                     	;# 
   824     010D                     	;# 
   825     010E                     	;# 
   826     0111                     	;# 
   827     0112                     	;# 
   828     0113                     	;# 
   829     0114                     	;# 
   830     0115                     	;# 
   831     0116                     	;# 
   832     0117                     	;# 
   833     0118                     	;# 
   834     0119                     	;# 
   835     011A                     	;# 
   836     011B                     	;# 
   837     011D                     	;# 
   838     011E                     	;# 
   839     018C                     	;# 
   840     018D                     	;# 
   841     018E                     	;# 
   842     0191                     	;# 
   843     0191                     	;# 
   844     0192                     	;# 
   845     0193                     	;# 
   846     0193                     	;# 
   847     0193                     	;# 
   848     0194                     	;# 
   849     0195                     	;# 
   850     0196                     	;# 
   851     0199                     	;# 
   852     019A                     	;# 
   853     019B                     	;# 
   854     019B                     	;# 
   855     019C                     	;# 
   856     019D                     	;# 
   857     019E                     	;# 
   858     019F                     	;# 
   859     020C                     	;# 
   860     020D                     	;# 
   861     020E                     	;# 
   862     0211                     	;# 
   863     0211                     	;# 
   864     0212                     	;# 
   865     0212                     	;# 
   866     0213                     	;# 
   867     0213                     	;# 
   868     0214                     	;# 
   869     0214                     	;# 
   870     0215                     	;# 
   871     0215                     	;# 
   872     0215                     	;# 
   873     0216                     	;# 
   874     0216                     	;# 
   875     0217                     	;# 
   876     0217                     	;# 
   877     0219                     	;# 
   878     021A                     	;# 
   879     021B                     	;# 
   880     021C                     	;# 
   881     021D                     	;# 
   882     021E                     	;# 
   883     021F                     	;# 
   884     0291                     	;# 
   885     0291                     	;# 
   886     0292                     	;# 
   887     0293                     	;# 
   888     0294                     	;# 
   889     0295                     	;# 
   890     0295                     	;# 
   891     0296                     	;# 
   892     0298                     	;# 
   893     0298                     	;# 
   894     0299                     	;# 
   895     029A                     	;# 
   896     029B                     	;# 
   897     029C                     	;# 
   898     029D                     	;# 
   899     029E                     	;# 
   900     0311                     	;# 
   901     0311                     	;# 
   902     0312                     	;# 
   903     0313                     	;# 
   904     0318                     	;# 
   905     0318                     	;# 
   906     0319                     	;# 
   907     031A                     	;# 
   908     038C                     	;# 
   909     038D                     	;# 
   910     038E                     	;# 
   911     0391                     	;# 
   912     0392                     	;# 
   913     0393                     	;# 
   914     0394                     	;# 
   915     0395                     	;# 
   916     0396                     	;# 
   917     039A                     	;# 
   918     039C                     	;# 
   919     039D                     	;# 
   920     039E                     	;# 
   921     039F                     	;# 
   922     0415                     	;# 
   923     0416                     	;# 
   924     0417                     	;# 
   925     041C                     	;# 
   926     041D                     	;# 
   927     041E                     	;# 
   928     0FE4                     	;# 
   929     0FE5                     	;# 
   930     0FE6                     	;# 
   931     0FE7                     	;# 
   932     0FE8                     	;# 
   933     0FE9                     	;# 
   934     0FEA                     	;# 
   935     0FEB                     	;# 
   936     0FED                     	;# 
   937     0FEE                     	;# 
   938     0FEF                     	;# 
   939     0000                     	;# 
   940     0001                     	;# 
   941     0002                     	;# 
   942     0003                     	;# 
   943     0004                     	;# 
   944     0005                     	;# 
   945     0006                     	;# 
   946     0007                     	;# 
   947     0008                     	;# 
   948     0009                     	;# 
   949     000A                     	;# 
   950     000B                     	;# 
   951     000C                     	;# 
   952     000D                     	;# 
   953     000E                     	;# 
   954     0011                     	;# 
   955     0012                     	;# 
   956     0013                     	;# 
   957     0014                     	;# 
   958     0015                     	;# 
   959     0016                     	;# 
   960     0016                     	;# 
   961     0017                     	;# 
   962     0018                     	;# 
   963     0019                     	;# 
   964     001A                     	;# 
   965     001B                     	;# 
   966     001C                     	;# 
   967     001E                     	;# 
   968     001F                     	;# 
   969     008C                     	;# 
   970     008D                     	;# 
   971     008E                     	;# 
   972     0091                     	;# 
   973     0092                     	;# 
   974     0093                     	;# 
   975     0094                     	;# 
   976     0095                     	;# 
   977     0096                     	;# 
   978     0097                     	;# 
   979     0098                     	;# 
   980     0099                     	;# 
   981     009A                     	;# 
   982     009B                     	;# 
   983     009B                     	;# 
   984     009C                     	;# 
   985     009D                     	;# 
   986     009E                     	;# 
   987     010C                     	;# 
   988     010D                     	;# 
   989     010E                     	;# 
   990     0111                     	;# 
   991     0112                     	;# 
   992     0113                     	;# 
   993     0114                     	;# 
   994     0115                     	;# 
   995     0116                     	;# 
   996     0117                     	;# 
   997     0118                     	;# 
   998     0119                     	;# 
   999     011A                     	;# 
  1000     011B                     	;# 
  1001     011D                     	;# 
  1002     011E                     	;# 
  1003     018C                     	;# 
  1004     018D                     	;# 
  1005     018E                     	;# 
  1006     0191                     	;# 
  1007     0191                     	;# 
  1008     0192                     	;# 
  1009     0193                     	;# 
  1010     0193                     	;# 
  1011     0193                     	;# 
  1012     0194                     	;# 
  1013     0195                     	;# 
  1014     0196                     	;# 
  1015     0199                     	;# 
  1016     019A                     	;# 
  1017     019B                     	;# 
  1018     019B                     	;# 
  1019     019C                     	;# 
  1020     019D                     	;# 
  1021     019E                     	;# 
  1022     019F                     	;# 
  1023     020C                     	;# 
  1024     020D                     	;# 
  1025     020E                     	;# 
  1026     0211                     	;# 
  1027     0211                     	;# 
  1028     0212                     	;# 
  1029     0212                     	;# 
  1030     0213                     	;# 
  1031     0213                     	;# 
  1032     0214                     	;# 
  1033     0214                     	;# 
  1034     0215                     	;# 
  1035     0215                     	;# 
  1036     0215                     	;# 
  1037     0216                     	;# 
  1038     0216                     	;# 
  1039     0217                     	;# 
  1040     0217                     	;# 
  1041     0219                     	;# 
  1042     021A                     	;# 
  1043     021B                     	;# 
  1044     021C                     	;# 
  1045     021D                     	;# 
  1046     021E                     	;# 
  1047     021F                     	;# 
  1048     0291                     	;# 
  1049     0291                     	;# 
  1050     0292                     	;# 
  1051     0293                     	;# 
  1052     0294                     	;# 
  1053     0295                     	;# 
  1054     0295                     	;# 
  1055     0296                     	;# 
  1056     0298                     	;# 
  1057     0298                     	;# 
  1058     0299                     	;# 
  1059     029A                     	;# 
  1060     029B                     	;# 
  1061     029C                     	;# 
  1062     029D                     	;# 
  1063     029E                     	;# 
  1064     0311                     	;# 
  1065     0311                     	;# 
  1066     0312                     	;# 
  1067     0313                     	;# 
  1068     0318                     	;# 
  1069     0318                     	;# 
  1070     0319                     	;# 
  1071     031A                     	;# 
  1072     038C                     	;# 
  1073     038D                     	;# 
  1074     038E                     	;# 
  1075     0391                     	;# 
  1076     0392                     	;# 
  1077     0393                     	;# 
  1078     0394                     	;# 
  1079     0395                     	;# 
  1080     0396                     	;# 
  1081     039A                     	;# 
  1082     039C                     	;# 
  1083     039D                     	;# 
  1084     039E                     	;# 
  1085     039F                     	;# 
  1086     0415                     	;# 
  1087     0416                     	;# 
  1088     0417                     	;# 
  1089     041C                     	;# 
  1090     041D                     	;# 
  1091     041E                     	;# 
  1092     0FE4                     	;# 
  1093     0FE5                     	;# 
  1094     0FE6                     	;# 
  1095     0FE7                     	;# 
  1096     0FE8                     	;# 
  1097     0FE9                     	;# 
  1098     0FEA                     	;# 
  1099     0FEB                     	;# 
  1100     0FED                     	;# 
  1101     0FEE                     	;# 
  1102     0FEF                     	;# 
  1103     0000                     	;# 
  1104     0001                     	;# 
  1105     0002                     	;# 
  1106     0003                     	;# 
  1107     0004                     	;# 
  1108     0005                     	;# 
  1109     0006                     	;# 
  1110     0007                     	;# 
  1111     0008                     	;# 
  1112     0009                     	;# 
  1113     000A                     	;# 
  1114     000B                     	;# 
  1115     000C                     	;# 
  1116     000D                     	;# 
  1117     000E                     	;# 
  1118     0011                     	;# 
  1119     0012                     	;# 
  1120     0013                     	;# 
  1121     0014                     	;# 
  1122     0015                     	;# 
  1123     0016                     	;# 
  1124     0016                     	;# 
  1125     0017                     	;# 
  1126     0018                     	;# 
  1127     0019                     	;# 
  1128     001A                     	;# 
  1129     001B                     	;# 
  1130     001C                     	;# 
  1131     001E                     	;# 
  1132     001F                     	;# 
  1133     008C                     	;# 
  1134     008D                     	;# 
  1135     008E                     	;# 
  1136     0091                     	;# 
  1137     0092                     	;# 
  1138     0093                     	;# 
  1139     0094                     	;# 
  1140     0095                     	;# 
  1141     0096                     	;# 
  1142     0097                     	;# 
  1143     0098                     	;# 
  1144     0099                     	;# 
  1145     009A                     	;# 
  1146     009B                     	;# 
  1147     009B                     	;# 
  1148     009C                     	;# 
  1149     009D                     	;# 
  1150     009E                     	;# 
  1151     010C                     	;# 
  1152     010D                     	;# 
  1153     010E                     	;# 
  1154     0111                     	;# 
  1155     0112                     	;# 
  1156     0113                     	;# 
  1157     0114                     	;# 
  1158     0115                     	;# 
  1159     0116                     	;# 
  1160     0117                     	;# 
  1161     0118                     	;# 
  1162     0119                     	;# 
  1163     011A                     	;# 
  1164     011B                     	;# 
  1165     011D                     	;# 
  1166     011E                     	;# 
  1167     018C                     	;# 
  1168     018D                     	;# 
  1169     018E                     	;# 
  1170     0191                     	;# 
  1171     0191                     	;# 
  1172     0192                     	;# 
  1173     0193                     	;# 
  1174     0193                     	;# 
  1175     0193                     	;# 
  1176     0194                     	;# 
  1177     0195                     	;# 
  1178     0196                     	;# 
  1179     0199                     	;# 
  1180     019A                     	;# 
  1181     019B                     	;# 
  1182     019B                     	;# 
  1183     019C                     	;# 
  1184     019D                     	;# 
  1185     019E                     	;# 
  1186     019F                     	;# 
  1187     020C                     	;# 
  1188     020D                     	;# 
  1189     020E                     	;# 
  1190     0211                     	;# 
  1191     0211                     	;# 
  1192     0212                     	;# 
  1193     0212                     	;# 
  1194     0213                     	;# 
  1195     0213                     	;# 
  1196     0214                     	;# 
  1197     0214                     	;# 
  1198     0215                     	;# 
  1199     0215                     	;# 
  1200     0215                     	;# 
  1201     0216                     	;# 
  1202     0216                     	;# 
  1203     0217                     	;# 
  1204     0217                     	;# 
  1205     0219                     	;# 
  1206     021A                     	;# 
  1207     021B                     	;# 
  1208     021C                     	;# 
  1209     021D                     	;# 
  1210     021E                     	;# 
  1211     021F                     	;# 
  1212     0291                     	;# 
  1213     0291                     	;# 
  1214     0292                     	;# 
  1215     0293                     	;# 
  1216     0294                     	;# 
  1217     0295                     	;# 
  1218     0295                     	;# 
  1219     0296                     	;# 
  1220     0298                     	;# 
  1221     0298                     	;# 
  1222     0299                     	;# 
  1223     029A                     	;# 
  1224     029B                     	;# 
  1225     029C                     	;# 
  1226     029D                     	;# 
  1227     029E                     	;# 
  1228     0311                     	;# 
  1229     0311                     	;# 
  1230     0312                     	;# 
  1231     0313                     	;# 
  1232     0318                     	;# 
  1233     0318                     	;# 
  1234     0319                     	;# 
  1235     031A                     	;# 
  1236     038C                     	;# 
  1237     038D                     	;# 
  1238     038E                     	;# 
  1239     0391                     	;# 
  1240     0392                     	;# 
  1241     0393                     	;# 
  1242     0394                     	;# 
  1243     0395                     	;# 
  1244     0396                     	;# 
  1245     039A                     	;# 
  1246     039C                     	;# 
  1247     039D                     	;# 
  1248     039E                     	;# 
  1249     039F                     	;# 
  1250     0415                     	;# 
  1251     0416                     	;# 
  1252     0417                     	;# 
  1253     041C                     	;# 
  1254     041D                     	;# 
  1255     041E                     	;# 
  1256     0FE4                     	;# 
  1257     0FE5                     	;# 
  1258     0FE6                     	;# 
  1259     0FE7                     	;# 
  1260     0FE8                     	;# 
  1261     0FE9                     	;# 
  1262     0FEA                     	;# 
  1263     0FEB                     	;# 
  1264     0FED                     	;# 
  1265     0FEE                     	;# 
  1266     0FEF                     	;# 
  1267     0000                     	;# 
  1268     0001                     	;# 
  1269     0002                     	;# 
  1270     0003                     	;# 
  1271     0004                     	;# 
  1272     0005                     	;# 
  1273     0006                     	;# 
  1274     0007                     	;# 
  1275     0008                     	;# 
  1276     0009                     	;# 
  1277     000A                     	;# 
  1278     000B                     	;# 
  1279     000C                     	;# 
  1280     000D                     	;# 
  1281     000E                     	;# 
  1282     0011                     	;# 
  1283     0012                     	;# 
  1284     0013                     	;# 
  1285     0014                     	;# 
  1286     0015                     	;# 
  1287     0016                     	;# 
  1288     0016                     	;# 
  1289     0017                     	;# 
  1290     0018                     	;# 
  1291     0019                     	;# 
  1292     001A                     	;# 
  1293     001B                     	;# 
  1294     001C                     	;# 
  1295     001E                     	;# 
  1296     001F                     	;# 
  1297     008C                     	;# 
  1298     008D                     	;# 
  1299     008E                     	;# 
  1300     0091                     	;# 
  1301     0092                     	;# 
  1302     0093                     	;# 
  1303     0094                     	;# 
  1304     0095                     	;# 
  1305     0096                     	;# 
  1306     0097                     	;# 
  1307     0098                     	;# 
  1308     0099                     	;# 
  1309     009A                     	;# 
  1310     009B                     	;# 
  1311     009B                     	;# 
  1312     009C                     	;# 
  1313     009D                     	;# 
  1314     009E                     	;# 
  1315     010C                     	;# 
  1316     010D                     	;# 
  1317     010E                     	;# 
  1318     0111                     	;# 
  1319     0112                     	;# 
  1320     0113                     	;# 
  1321     0114                     	;# 
  1322     0115                     	;# 
  1323     0116                     	;# 
  1324     0117                     	;# 
  1325     0118                     	;# 
  1326     0119                     	;# 
  1327     011A                     	;# 
  1328     011B                     	;# 
  1329     011D                     	;# 
  1330     011E                     	;# 
  1331     018C                     	;# 
  1332     018D                     	;# 
  1333     018E                     	;# 
  1334     0191                     	;# 
  1335     0191                     	;# 
  1336     0192                     	;# 
  1337     0193                     	;# 
  1338     0193                     	;# 
  1339     0193                     	;# 
  1340     0194                     	;# 
  1341     0195                     	;# 
  1342     0196                     	;# 
  1343     0199                     	;# 
  1344     019A                     	;# 
  1345     019B                     	;# 
  1346     019B                     	;# 
  1347     019C                     	;# 
  1348     019D                     	;# 
  1349     019E                     	;# 
  1350     019F                     	;# 
  1351     020C                     	;# 
  1352     020D                     	;# 
  1353     020E                     	;# 
  1354     0211                     	;# 
  1355     0211                     	;# 
  1356     0212                     	;# 
  1357     0212                     	;# 
  1358     0213                     	;# 
  1359     0213                     	;# 
  1360     0214                     	;# 
  1361     0214                     	;# 
  1362     0215                     	;# 
  1363     0215                     	;# 
  1364     0215                     	;# 
  1365     0216                     	;# 
  1366     0216                     	;# 
  1367     0217                     	;# 
  1368     0217                     	;# 
  1369     0219                     	;# 
  1370     021A                     	;# 
  1371     021B                     	;# 
  1372     021C                     	;# 
  1373     021D                     	;# 
  1374     021E                     	;# 
  1375     021F                     	;# 
  1376     0291                     	;# 
  1377     0291                     	;# 
  1378     0292                     	;# 
  1379     0293                     	;# 
  1380     0294                     	;# 
  1381     0295                     	;# 
  1382     0295                     	;# 
  1383     0296                     	;# 
  1384     0298                     	;# 
  1385     0298                     	;# 
  1386     0299                     	;# 
  1387     029A                     	;# 
  1388     029B                     	;# 
  1389     029C                     	;# 
  1390     029D                     	;# 
  1391     029E                     	;# 
  1392     0311                     	;# 
  1393     0311                     	;# 
  1394     0312                     	;# 
  1395     0313                     	;# 
  1396     0318                     	;# 
  1397     0318                     	;# 
  1398     0319                     	;# 
  1399     031A                     	;# 
  1400     038C                     	;# 
  1401     038D                     	;# 
  1402     038E                     	;# 
  1403     0391                     	;# 
  1404     0392                     	;# 
  1405     0393                     	;# 
  1406     0394                     	;# 
  1407     0395                     	;# 
  1408     0396                     	;# 
  1409     039A                     	;# 
  1410     039C                     	;# 
  1411     039D                     	;# 
  1412     039E                     	;# 
  1413     039F                     	;# 
  1414     0415                     	;# 
  1415     0416                     	;# 
  1416     0417                     	;# 
  1417     041C                     	;# 
  1418     041D                     	;# 
  1419     041E                     	;# 
  1420     0FE4                     	;# 
  1421     0FE5                     	;# 
  1422     0FE6                     	;# 
  1423     0FE7                     	;# 
  1424     0FE8                     	;# 
  1425     0FE9                     	;# 
  1426     0FEA                     	;# 
  1427     0FEB                     	;# 
  1428     0FED                     	;# 
  1429     0FEE                     	;# 
  1430     0FEF                     	;# 
  1431     0000                     	;# 
  1432     0001                     	;# 
  1433     0002                     	;# 
  1434     0003                     	;# 
  1435     0004                     	;# 
  1436     0005                     	;# 
  1437     0006                     	;# 
  1438     0007                     	;# 
  1439     0008                     	;# 
  1440     0009                     	;# 
  1441     000A                     	;# 
  1442     000B                     	;# 
  1443     000C                     	;# 
  1444     000D                     	;# 
  1445     000E                     	;# 
  1446     0011                     	;# 
  1447     0012                     	;# 
  1448     0013                     	;# 
  1449     0014                     	;# 
  1450     0015                     	;# 
  1451     0016                     	;# 
  1452     0016                     	;# 
  1453     0017                     	;# 
  1454     0018                     	;# 
  1455     0019                     	;# 
  1456     001A                     	;# 
  1457     001B                     	;# 
  1458     001C                     	;# 
  1459     001E                     	;# 
  1460     001F                     	;# 
  1461     008C                     	;# 
  1462     008D                     	;# 
  1463     008E                     	;# 
  1464     0091                     	;# 
  1465     0092                     	;# 
  1466     0093                     	;# 
  1467     0094                     	;# 
  1468     0095                     	;# 
  1469     0096                     	;# 
  1470     0097                     	;# 
  1471     0098                     	;# 
  1472     0099                     	;# 
  1473     009A                     	;# 
  1474     009B                     	;# 
  1475     009B                     	;# 
  1476     009C                     	;# 
  1477     009D                     	;# 
  1478     009E                     	;# 
  1479     010C                     	;# 
  1480     010D                     	;# 
  1481     010E                     	;# 
  1482     0111                     	;# 
  1483     0112                     	;# 
  1484     0113                     	;# 
  1485     0114                     	;# 
  1486     0115                     	;# 
  1487     0116                     	;# 
  1488     0117                     	;# 
  1489     0118                     	;# 
  1490     0119                     	;# 
  1491     011A                     	;# 
  1492     011B                     	;# 
  1493     011D                     	;# 
  1494     011E                     	;# 
  1495     018C                     	;# 
  1496     018D                     	;# 
  1497     018E                     	;# 
  1498     0191                     	;# 
  1499     0191                     	;# 
  1500     0192                     	;# 
  1501     0193                     	;# 
  1502     0193                     	;# 
  1503     0193                     	;# 
  1504     0194                     	;# 
  1505     0195                     	;# 
  1506     0196                     	;# 
  1507     0199                     	;# 
  1508     019A                     	;# 
  1509     019B                     	;# 
  1510     019B                     	;# 
  1511     019C                     	;# 
  1512     019D                     	;# 
  1513     019E                     	;# 
  1514     019F                     	;# 
  1515     020C                     	;# 
  1516     020D                     	;# 
  1517     020E                     	;# 
  1518     0211                     	;# 
  1519     0211                     	;# 
  1520     0212                     	;# 
  1521     0212                     	;# 
  1522     0213                     	;# 
  1523     0213                     	;# 
  1524     0214                     	;# 
  1525     0214                     	;# 
  1526     0215                     	;# 
  1527     0215                     	;# 
  1528     0215                     	;# 
  1529     0216                     	;# 
  1530     0216                     	;# 
  1531     0217                     	;# 
  1532     0217                     	;# 
  1533     0219                     	;# 
  1534     021A                     	;# 
  1535     021B                     	;# 
  1536     021C                     	;# 
  1537     021D                     	;# 
  1538     021E                     	;# 
  1539     021F                     	;# 
  1540     0291                     	;# 
  1541     0291                     	;# 
  1542     0292                     	;# 
  1543     0293                     	;# 
  1544     0294                     	;# 
  1545     0295                     	;# 
  1546     0295                     	;# 
  1547     0296                     	;# 
  1548     0298                     	;# 
  1549     0298                     	;# 
  1550     0299                     	;# 
  1551     029A                     	;# 
  1552     029B                     	;# 
  1553     029C                     	;# 
  1554     029D                     	;# 
  1555     029E                     	;# 
  1556     0311                     	;# 
  1557     0311                     	;# 
  1558     0312                     	;# 
  1559     0313                     	;# 
  1560     0318                     	;# 
  1561     0318                     	;# 
  1562     0319                     	;# 
  1563     031A                     	;# 
  1564     038C                     	;# 
  1565     038D                     	;# 
  1566     038E                     	;# 
  1567     0391                     	;# 
  1568     0392                     	;# 
  1569     0393                     	;# 
  1570     0394                     	;# 
  1571     0395                     	;# 
  1572     0396                     	;# 
  1573     039A                     	;# 
  1574     039C                     	;# 
  1575     039D                     	;# 
  1576     039E                     	;# 
  1577     039F                     	;# 
  1578     0415                     	;# 
  1579     0416                     	;# 
  1580     0417                     	;# 
  1581     041C                     	;# 
  1582     041D                     	;# 
  1583     041E                     	;# 
  1584     0FE4                     	;# 
  1585     0FE5                     	;# 
  1586     0FE6                     	;# 
  1587     0FE7                     	;# 
  1588     0FE8                     	;# 
  1589     0FE9                     	;# 
  1590     0FEA                     	;# 
  1591     0FEB                     	;# 
  1592     0FED                     	;# 
  1593     0FEE                     	;# 
  1594     0FEF                     	;# 
  1595     0000                     	;# 
  1596     0001                     	;# 
  1597     0002                     	;# 
  1598     0003                     	;# 
  1599     0004                     	;# 
  1600     0005                     	;# 
  1601     0006                     	;# 
  1602     0007                     	;# 
  1603     0008                     	;# 
  1604     0009                     	;# 
  1605     000A                     	;# 
  1606     000B                     	;# 
  1607     000C                     	;# 
  1608     000D                     	;# 
  1609     000E                     	;# 
  1610     0011                     	;# 
  1611     0012                     	;# 
  1612     0013                     	;# 
  1613     0014                     	;# 
  1614     0015                     	;# 
  1615     0016                     	;# 
  1616     0016                     	;# 
  1617     0017                     	;# 
  1618     0018                     	;# 
  1619     0019                     	;# 
  1620     001A                     	;# 
  1621     001B                     	;# 
  1622     001C                     	;# 
  1623     001E                     	;# 
  1624     001F                     	;# 
  1625     008C                     	;# 
  1626     008D                     	;# 
  1627     008E                     	;# 
  1628     0091                     	;# 
  1629     0092                     	;# 
  1630     0093                     	;# 
  1631     0094                     	;# 
  1632     0095                     	;# 
  1633     0096                     	;# 
  1634     0097                     	;# 
  1635     0098                     	;# 
  1636     0099                     	;# 
  1637     009A                     	;# 
  1638     009B                     	;# 
  1639     009B                     	;# 
  1640     009C                     	;# 
  1641     009D                     	;# 
  1642     009E                     	;# 
  1643     010C                     	;# 
  1644     010D                     	;# 
  1645     010E                     	;# 
  1646     0111                     	;# 
  1647     0112                     	;# 
  1648     0113                     	;# 
  1649     0114                     	;# 
  1650     0115                     	;# 
  1651     0116                     	;# 
  1652     0117                     	;# 
  1653     0118                     	;# 
  1654     0119                     	;# 
  1655     011A                     	;# 
  1656     011B                     	;# 
  1657     011D                     	;# 
  1658     011E                     	;# 
  1659     018C                     	;# 
  1660     018D                     	;# 
  1661     018E                     	;# 
  1662     0191                     	;# 
  1663     0191                     	;# 
  1664     0192                     	;# 
  1665     0193                     	;# 
  1666     0193                     	;# 
  1667     0193                     	;# 
  1668     0194                     	;# 
  1669     0195                     	;# 
  1670     0196                     	;# 
  1671     0199                     	;# 
  1672     019A                     	;# 
  1673     019B                     	;# 
  1674     019B                     	;# 
  1675     019C                     	;# 
  1676     019D                     	;# 
  1677     019E                     	;# 
  1678     019F                     	;# 
  1679     020C                     	;# 
  1680     020D                     	;# 
  1681     020E                     	;# 
  1682     0211                     	;# 
  1683     0211                     	;# 
  1684     0212                     	;# 
  1685     0212                     	;# 
  1686     0213                     	;# 
  1687     0213                     	;# 
  1688     0214                     	;# 
  1689     0214                     	;# 
  1690     0215                     	;# 
  1691     0215                     	;# 
  1692     0215                     	;# 
  1693     0216                     	;# 
  1694     0216                     	;# 
  1695     0217                     	;# 
  1696     0217                     	;# 
  1697     0219                     	;# 
  1698     021A                     	;# 
  1699     021B                     	;# 
  1700     021C                     	;# 
  1701     021D                     	;# 
  1702     021E                     	;# 
  1703     021F                     	;# 
  1704     0291                     	;# 
  1705     0291                     	;# 
  1706     0292                     	;# 
  1707     0293                     	;# 
  1708     0294                     	;# 
  1709     0295                     	;# 
  1710     0295                     	;# 
  1711     0296                     	;# 
  1712     0298                     	;# 
  1713     0298                     	;# 
  1714     0299                     	;# 
  1715     029A                     	;# 
  1716     029B                     	;# 
  1717     029C                     	;# 
  1718     029D                     	;# 
  1719     029E                     	;# 
  1720     0311                     	;# 
  1721     0311                     	;# 
  1722     0312                     	;# 
  1723     0313                     	;# 
  1724     0318                     	;# 
  1725     0318                     	;# 
  1726     0319                     	;# 
  1727     031A                     	;# 
  1728     038C                     	;# 
  1729     038D                     	;# 
  1730     038E                     	;# 
  1731     0391                     	;# 
  1732     0392                     	;# 
  1733     0393                     	;# 
  1734     0394                     	;# 
  1735     0395                     	;# 
  1736     0396                     	;# 
  1737     039A                     	;# 
  1738     039C                     	;# 
  1739     039D                     	;# 
  1740     039E                     	;# 
  1741     039F                     	;# 
  1742     0415                     	;# 
  1743     0416                     	;# 
  1744     0417                     	;# 
  1745     041C                     	;# 
  1746     041D                     	;# 
  1747     041E                     	;# 
  1748     0FE4                     	;# 
  1749     0FE5                     	;# 
  1750     0FE6                     	;# 
  1751     0FE7                     	;# 
  1752     0FE8                     	;# 
  1753     0FE9                     	;# 
  1754     0FEA                     	;# 
  1755     0FEB                     	;# 
  1756     0FED                     	;# 
  1757     0FEE                     	;# 
  1758     0FEF                     	;# 
  1759     0000                     	;# 
  1760     0001                     	;# 
  1761     0002                     	;# 
  1762     0003                     	;# 
  1763     0004                     	;# 
  1764     0005                     	;# 
  1765     0006                     	;# 
  1766     0007                     	;# 
  1767     0008                     	;# 
  1768     0009                     	;# 
  1769     000A                     	;# 
  1770     000B                     	;# 
  1771     000C                     	;# 
  1772     000D                     	;# 
  1773     000E                     	;# 
  1774     0011                     	;# 
  1775     0012                     	;# 
  1776     0013                     	;# 
  1777     0014                     	;# 
  1778     0015                     	;# 
  1779     0016                     	;# 
  1780     0016                     	;# 
  1781     0017                     	;# 
  1782     0018                     	;# 
  1783     0019                     	;# 
  1784     001A                     	;# 
  1785     001B                     	;# 
  1786     001C                     	;# 
  1787     001E                     	;# 
  1788     001F                     	;# 
  1789     008C                     	;# 
  1790     008D                     	;# 
  1791     008E                     	;# 
  1792     0091                     	;# 
  1793     0092                     	;# 
  1794     0093                     	;# 
  1795     0094                     	;# 
  1796     0095                     	;# 
  1797     0096                     	;# 
  1798     0097                     	;# 
  1799     0098                     	;# 
  1800     0099                     	;# 
  1801     009A                     	;# 
  1802     009B                     	;# 
  1803     009B                     	;# 
  1804     009C                     	;# 
  1805     009D                     	;# 
  1806     009E                     	;# 
  1807     010C                     	;# 
  1808     010D                     	;# 
  1809     010E                     	;# 
  1810     0111                     	;# 
  1811     0112                     	;# 
  1812     0113                     	;# 
  1813     0114                     	;# 
  1814     0115                     	;# 
  1815     0116                     	;# 
  1816     0117                     	;# 
  1817     0118                     	;# 
  1818     0119                     	;# 
  1819     011A                     	;# 
  1820     011B                     	;# 
  1821     011D                     	;# 
  1822     011E                     	;# 
  1823     018C                     	;# 
  1824     018D                     	;# 
  1825     018E                     	;# 
  1826     0191                     	;# 
  1827     0191                     	;# 
  1828     0192                     	;# 
  1829     0193                     	;# 
  1830     0193                     	;# 
  1831     0193                     	;# 
  1832     0194                     	;# 
  1833     0195                     	;# 
  1834     0196                     	;# 
  1835     0199                     	;# 
  1836     019A                     	;# 
  1837     019B                     	;# 
  1838     019B                     	;# 
  1839     019C                     	;# 
  1840     019D                     	;# 
  1841     019E                     	;# 
  1842     019F                     	;# 
  1843     020C                     	;# 
  1844     020D                     	;# 
  1845     020E                     	;# 
  1846     0211                     	;# 
  1847     0211                     	;# 
  1848     0212                     	;# 
  1849     0212                     	;# 
  1850     0213                     	;# 
  1851     0213                     	;# 
  1852     0214                     	;# 
  1853     0214                     	;# 
  1854     0215                     	;# 
  1855     0215                     	;# 
  1856     0215                     	;# 
  1857     0216                     	;# 
  1858     0216                     	;# 
  1859     0217                     	;# 
  1860     0217                     	;# 
  1861     0219                     	;# 
  1862     021A                     	;# 
  1863     021B                     	;# 
  1864     021C                     	;# 
  1865     021D                     	;# 
  1866     021E                     	;# 
  1867     021F                     	;# 
  1868     0291                     	;# 
  1869     0291                     	;# 
  1870     0292                     	;# 
  1871     0293                     	;# 
  1872     0294                     	;# 
  1873     0295                     	;# 
  1874     0295                     	;# 
  1875     0296                     	;# 
  1876     0298                     	;# 
  1877     0298                     	;# 
  1878     0299                     	;# 
  1879     029A                     	;# 
  1880     029B                     	;# 
  1881     029C                     	;# 
  1882     029D                     	;# 
  1883     029E                     	;# 
  1884     0311                     	;# 
  1885     0311                     	;# 
  1886     0312                     	;# 
  1887     0313                     	;# 
  1888     0318                     	;# 
  1889     0318                     	;# 
  1890     0319                     	;# 
  1891     031A                     	;# 
  1892     038C                     	;# 
  1893     038D                     	;# 
  1894     038E                     	;# 
  1895     0391                     	;# 
  1896     0392                     	;# 
  1897     0393                     	;# 
  1898     0394                     	;# 
  1899     0395                     	;# 
  1900     0396                     	;# 
  1901     039A                     	;# 
  1902     039C                     	;# 
  1903     039D                     	;# 
  1904     039E                     	;# 
  1905     039F                     	;# 
  1906     0415                     	;# 
  1907     0416                     	;# 
  1908     0417                     	;# 
  1909     041C                     	;# 
  1910     041D                     	;# 
  1911     041E                     	;# 
  1912     0FE4                     	;# 
  1913     0FE5                     	;# 
  1914     0FE6                     	;# 
  1915     0FE7                     	;# 
  1916     0FE8                     	;# 
  1917     0FE9                     	;# 
  1918     0FEA                     	;# 
  1919     0FEB                     	;# 
  1920     0FED                     	;# 
  1921     0FEE                     	;# 
  1922     0FEF                     	;# 
  1923     0000                     	;# 
  1924     0001                     	;# 
  1925     0002                     	;# 
  1926     0003                     	;# 
  1927     0004                     	;# 
  1928     0005                     	;# 
  1929     0006                     	;# 
  1930     0007                     	;# 
  1931     0008                     	;# 
  1932     0009                     	;# 
  1933     000A                     	;# 
  1934     000B                     	;# 
  1935     000C                     	;# 
  1936     000D                     	;# 
  1937     000E                     	;# 
  1938     0011                     	;# 
  1939     0012                     	;# 
  1940     0013                     	;# 
  1941     0014                     	;# 
  1942     0015                     	;# 
  1943     0016                     	;# 
  1944     0016                     	;# 
  1945     0017                     	;# 
  1946     0018                     	;# 
  1947     0019                     	;# 
  1948     001A                     	;# 
  1949     001B                     	;# 
  1950     001C                     	;# 
  1951     001E                     	;# 
  1952     001F                     	;# 
  1953     008C                     	;# 
  1954     008D                     	;# 
  1955     008E                     	;# 
  1956     0091                     	;# 
  1957     0092                     	;# 
  1958     0093                     	;# 
  1959     0094                     	;# 
  1960     0095                     	;# 
  1961     0096                     	;# 
  1962     0097                     	;# 
  1963     0098                     	;# 
  1964     0099                     	;# 
  1965     009A                     	;# 
  1966     009B                     	;# 
  1967     009B                     	;# 
  1968     009C                     	;# 
  1969     009D                     	;# 
  1970     009E                     	;# 
  1971     010C                     	;# 
  1972     010D                     	;# 
  1973     010E                     	;# 
  1974     0111                     	;# 
  1975     0112                     	;# 
  1976     0113                     	;# 
  1977     0114                     	;# 
  1978     0115                     	;# 
  1979     0116                     	;# 
  1980     0117                     	;# 
  1981     0118                     	;# 
  1982     0119                     	;# 
  1983     011A                     	;# 
  1984     011B                     	;# 
  1985     011D                     	;# 
  1986     011E                     	;# 
  1987     018C                     	;# 
  1988     018D                     	;# 
  1989     018E                     	;# 
  1990     0191                     	;# 
  1991     0191                     	;# 
  1992     0192                     	;# 
  1993     0193                     	;# 
  1994     0193                     	;# 
  1995     0193                     	;# 
  1996     0194                     	;# 
  1997     0195                     	;# 
  1998     0196                     	;# 
  1999     0199                     	;# 
  2000     019A                     	;# 
  2001     019B                     	;# 
  2002     019B                     	;# 
  2003     019C                     	;# 
  2004     019D                     	;# 
  2005     019E                     	;# 
  2006     019F                     	;# 
  2007     020C                     	;# 
  2008     020D                     	;# 
  2009     020E                     	;# 
  2010     0211                     	;# 
  2011     0211                     	;# 
  2012     0212                     	;# 
  2013     0212                     	;# 
  2014     0213                     	;# 
  2015     0213                     	;# 
  2016     0214                     	;# 
  2017     0214                     	;# 
  2018     0215                     	;# 
  2019     0215                     	;# 
  2020     0215                     	;# 
  2021     0216                     	;# 
  2022     0216                     	;# 
  2023     0217                     	;# 
  2024     0217                     	;# 
  2025     0219                     	;# 
  2026     021A                     	;# 
  2027     021B                     	;# 
  2028     021C                     	;# 
  2029     021D                     	;# 
  2030     021E                     	;# 
  2031     021F                     	;# 
  2032     0291                     	;# 
  2033     0291                     	;# 
  2034     0292                     	;# 
  2035     0293                     	;# 
  2036     0294                     	;# 
  2037     0295                     	;# 
  2038     0295                     	;# 
  2039     0296                     	;# 
  2040     0298                     	;# 
  2041     0298                     	;# 
  2042     0299                     	;# 
  2043     029A                     	;# 
  2044     029B                     	;# 
  2045     029C                     	;# 
  2046     029D                     	;# 
  2047     029E                     	;# 
  2048     0311                     	;# 
  2049     0311                     	;# 
  2050     0312                     	;# 
  2051     0313                     	;# 
  2052     0318                     	;# 
  2053     0318                     	;# 
  2054     0319                     	;# 
  2055     031A                     	;# 
  2056     038C                     	;# 
  2057     038D                     	;# 
  2058     038E                     	;# 
  2059     0391                     	;# 
  2060     0392                     	;# 
  2061     0393                     	;# 
  2062     0394                     	;# 
  2063     0395                     	;# 
  2064     0396                     	;# 
  2065     039A                     	;# 
  2066     039C                     	;# 
  2067     039D                     	;# 
  2068     039E                     	;# 
  2069     039F                     	;# 
  2070     0415                     	;# 
  2071     0416                     	;# 
  2072     0417                     	;# 
  2073     041C                     	;# 
  2074     041D                     	;# 
  2075     041E                     	;# 
  2076     0FE4                     	;# 
  2077     0FE5                     	;# 
  2078     0FE6                     	;# 
  2079     0FE7                     	;# 
  2080     0FE8                     	;# 
  2081     0FE9                     	;# 
  2082     0FEA                     	;# 
  2083     0FEB                     	;# 
  2084     0FED                     	;# 
  2085     0FEE                     	;# 
  2086     0FEF                     	;# 
  2087                           
  2088                           	psect	idataCOMMON
  2089     0002                     __pidataCOMMON:
  2090                           
  2091                           ;initializer for __timeAuto
  2092     0002  34E8               	retlw	232
  2093     0003  3403               	retlw	3
  2094                           
  2095                           	psect	idataBANK0
  2096     0BE9                     __pidataBANK0:
  2097                           
  2098                           ;initializer for _timer1_MUL
  2099     0BE9  3401               	retlw	1
  2100     0BEA  3400               	retlw	0
  2101                           
  2102                           	psect	idataBANK1
  2103     0DE2                     __pidataBANK1:
  2104                           
  2105                           ;initializer for _LcdScreen
  2106     0DE2  3420               	retlw	32
  2107     0DE3  3420               	retlw	32
  2108     0DE4  3420               	retlw	32
  2109     0DE5  3420               	retlw	32
  2110     0DE6  3420               	retlw	32
  2111     0DE7  3420               	retlw	32
  2112     0DE8  3420               	retlw	32
  2113     0DE9  3420               	retlw	32
  2114     0DEA  3420               	retlw	32
  2115     0DEB  3420               	retlw	32
  2116     0DEC  3420               	retlw	32
  2117     0DED  3420               	retlw	32
  2118     0DEE  3420               	retlw	32
  2119     0DEF  3420               	retlw	32
  2120     0DF0  3420               	retlw	32
  2121     0DF1  3420               	retlw	32
  2122     0DF2  3420               	retlw	32
  2123     0DF3  3420               	retlw	32
  2124     0DF4  3420               	retlw	32
  2125     0DF5  3420               	retlw	32
  2126     0DF6  3420               	retlw	32
  2127     0DF7  3420               	retlw	32
  2128     0DF8  3420               	retlw	32
  2129     0DF9  3420               	retlw	32
  2130     0DFA  3420               	retlw	32
  2131     0DFB  3420               	retlw	32
  2132     0DFC  3420               	retlw	32
  2133     0DFD  3420               	retlw	32
  2134     0DFE  3420               	retlw	32
  2135     0DFF  3420               	retlw	32
  2136     0E00  3420               	retlw	32
  2137     0E01  3420               	retlw	32
  2138                           
  2139                           ;initializer for _buttonBuffer
  2140     0E02  3401               	retlw	1
  2141     0E03  3401               	retlw	1
  2142     0E04  3401               	retlw	1
  2143     0E05  3401               	retlw	1
  2144                           
  2145                           ;initializer for _buttonInputMask
  2146     0E06  3401               	retlw	1
  2147     0E07  3402               	retlw	2
  2148     0E08  3404               	retlw	4
  2149     0E09  3408               	retlw	8
  2150                           
  2151                           	psect	nvBANK0
  2152     006B                     __pnvBANK0:
  2153     006B                     _timer1_value:
  2154     006B                     	ds	2
  2155     0016                     _TMR1	set	22
  2156     0003                     _STATUSbits	set	3
  2157     000B                     _INTCONbits	set	11
  2158     000E                     _PORTC	set	14
  2159     000C                     _PORTAbits	set	12
  2160     0018                     _T1CONbits	set	24
  2161     000C                     _PORTA	set	12
  2162     0088                     _TMR1IF	set	136
  2163     008E                     _TRISC	set	142
  2164     0099                     _OSCCONbits	set	153
  2165     008C                     _TRISA	set	140
  2166     0488                     _TMR1IE	set	1160
  2167     0191                     _EEADR	set	401
  2168     0196                     _EECON2	set	406
  2169     0193                     _EEDATA	set	403
  2170     0195                     _EECON1	set	405
  2171     0195                     _EECON1bits	set	405
  2172     0C77                     _ANSC7	set	3191
  2173     0C76                     _ANSC6	set	3190
  2174     0C73                     _ANSC3	set	3187
  2175     0C72                     _ANSC2	set	3186
  2176     0C71                     _ANSC1	set	3185
  2177     0C70                     _ANSC0	set	3184
  2178     0C62                     _ANSA2	set	3170
  2179     0C61                     _ANSA1	set	3169
  2180     0C60                     _ANSA0	set	3168
  2181                           
  2182                           	psect	stringtext1
  2183     1000                     __pstringtext1:
  2184     1000                     STR_4:
  2185     1000  3443               	retlw	67	;'C'
  2186     1001  3455               	retlw	85	;'U'
  2187     1002  3450               	retlw	80	;'P'
  2188     1003  3420               	retlw	32	;' '
  2189     1004  3420               	retlw	32	;' '
  2190     1005  343A               	retlw	58	;':'
  2191     1006  3420               	retlw	32	;' '
  2192     1007  3420               	retlw	32	;' '
  2193     1008  3420               	retlw	32	;' '
  2194     1009  3420               	retlw	32	;' '
  2195     100A  3420               	retlw	32	;' '
  2196     100B  3420               	retlw	32	;' '
  2197     100C  3420               	retlw	32	;' '
  2198     100D  3420               	retlw	32	;' '
  2199     100E  3420               	retlw	32	;' '
  2200     100F  3420               	retlw	32	;' '
  2201     1010  3400               	retlw	0
  2202                           
  2203                           	psect	stringtext2
  2204     1011                     __pstringtext2:
  2205     1011                     STR_6:
  2206     1011  3420               	retlw	32	;' '
  2207     1012  3420               	retlw	32	;' '
  2208     1013  3420               	retlw	32	;' '
  2209     1014  3420               	retlw	32	;' '
  2210     1015  3420               	retlw	32	;' '
  2211     1016  345B               	retlw	91	;'['
  2212     1017  3453               	retlw	83	;'S'
  2213     1018  3454               	retlw	84	;'T'
  2214     1019  344F               	retlw	79	;'O'
  2215     101A  3450               	retlw	80	;'P'
  2216     101B  345D               	retlw	93	;']'
  2217     101C  3420               	retlw	32	;' '
  2218     101D  3420               	retlw	32	;' '
  2219     101E  3420               	retlw	32	;' '
  2220     101F  3420               	retlw	32	;' '
  2221     1020  3420               	retlw	32	;' '
  2222     1021  3400               	retlw	0
  2223                           
  2224                           	psect	stringtext3
  2225     1022                     __pstringtext3:
  2226     1022                     STR_11:
  2227     1022  3420               	retlw	32	;' '
  2228     1023  3444               	retlw	68	;'D'
  2229     1024  3465               	retlw	101	;'e'
  2230     1025  346C               	retlw	108	;'l'
  2231     1026  3465               	retlw	101	;'e'
  2232     1027  3474               	retlw	116	;'t'
  2233     1028  3465               	retlw	101	;'e'
  2234     1029  3420               	retlw	32	;' '
  2235     102A  3441               	retlw	65	;'A'
  2236     102B  346C               	retlw	108	;'l'
  2237     102C  346C               	retlw	108	;'l'
  2238     102D  3420               	retlw	32	;' '
  2239     102E  343F               	retlw	63	;'?'
  2240     102F  3420               	retlw	32	;' '
  2241     1030  3420               	retlw	32	;' '
  2242     1031  3420               	retlw	32	;' '
  2243     1032  3400               	retlw	0
  2244                           
  2245                           	psect	stringtext4
  2246     1033                     __pstringtext4:
  2247     1033                     STR_2:
  2248     1033  3420               	retlw	32	;' '
  2249     1034  3420               	retlw	32	;' '
  2250     1035  3420               	retlw	32	;' '
  2251     1036  3420               	retlw	32	;' '
  2252     1037  345F               	retlw	95	;'_'
  2253     1038  3420               	retlw	32	;' '
  2254     1039  344D               	retlw	77	;'M'
  2255     103A  3441               	retlw	65	;'A'
  2256     103B  344E               	retlw	78	;'N'
  2257     103C  3455               	retlw	85	;'U'
  2258     103D  3441               	retlw	65	;'A'
  2259     103E  344C               	retlw	76	;'L'
  2260     103F  3420               	retlw	32	;' '
  2261     1040  345F               	retlw	95	;'_'
  2262     1041  3420               	retlw	32	;' '
  2263     1042  3420               	retlw	32	;' '
  2264     1043  3400               	retlw	0
  2265                           
  2266                           	psect	stringtext5
  2267     1044                     __pstringtext5:
  2268     1044                     STR_5:
  2269     1044  3420               	retlw	32	;' '
  2270     1045  347C               	retlw	124	;'|'
  2271     1046  3420               	retlw	32	;' '
  2272     1047  3420               	retlw	32	;' '
  2273     1048  3420               	retlw	32	;' '
  2274     1049  3420               	retlw	32	;' '
  2275     104A  3420               	retlw	32	;' '
  2276     104B  3420               	retlw	32	;' '
  2277     104C  3420               	retlw	32	;' '
  2278     104D  3420               	retlw	32	;' '
  2279     104E  3420               	retlw	32	;' '
  2280     104F  3420               	retlw	32	;' '
  2281     1050  3420               	retlw	32	;' '
  2282     1051  3420               	retlw	32	;' '
  2283     1052  347C               	retlw	124	;'|'
  2284     1053  3420               	retlw	32	;' '
  2285     1054  3400               	retlw	0
  2286                           
  2287                           	psect	stringtext6
  2288     1055                     __pstringtext6:
  2289     1055                     STR_10:
  2290     1055  345B               	retlw	91	;'['
  2291     1056  342B               	retlw	43	;'+'
  2292     1057  345D               	retlw	93	;']'
  2293     1058  3420               	retlw	32	;' '
  2294     1059  3420               	retlw	32	;' '
  2295     105A  3420               	retlw	32	;' '
  2296     105B  345B               	retlw	91	;'['
  2297     105C  344F               	retlw	79	;'O'
  2298     105D  344B               	retlw	75	;'K'
  2299     105E  345D               	retlw	93	;']'
  2300     105F  3420               	retlw	32	;' '
  2301     1060  3420               	retlw	32	;' '
  2302     1061  3420               	retlw	32	;' '
  2303     1062  345B               	retlw	91	;'['
  2304     1063  342D               	retlw	45	;'-'
  2305     1064  345D               	retlw	93	;']'
  2306     1065  3400               	retlw	0
  2307                           
  2308                           	psect	stringtext7
  2309     1066                     __pstringtext7:
  2310     1066                     STR_12:
  2311     1066  345B               	retlw	91	;'['
  2312     1067  344E               	retlw	78	;'N'
  2313     1068  345D               	retlw	93	;']'
  2314     1069  3420               	retlw	32	;' '
  2315     106A  3420               	retlw	32	;' '
  2316     106B  3420               	retlw	32	;' '
  2317     106C  345B               	retlw	91	;'['
  2318     106D  344F               	retlw	79	;'O'
  2319     106E  344B               	retlw	75	;'K'
  2320     106F  345D               	retlw	93	;']'
  2321     1070  3420               	retlw	32	;' '
  2322     1071  3420               	retlw	32	;' '
  2323     1072  3420               	retlw	32	;' '
  2324     1073  345B               	retlw	91	;'['
  2325     1074  344E               	retlw	78	;'N'
  2326     1075  345D               	retlw	93	;']'
  2327     1076  3400               	retlw	0
  2328                           
  2329                           	psect	stringtext8
  2330     1077                     __pstringtext8:
  2331     1077                     STR_1:
  2332     1077  3456               	retlw	86	;'V'
  2333     1078  3469               	retlw	105	;'i'
  2334     1079  3465               	retlw	101	;'e'
  2335     107A  3474               	retlw	116	;'t'
  2336     107B  3473               	retlw	115	;'s'
  2337     107C  3474               	retlw	116	;'t'
  2338     107D  3461               	retlw	97	;'a'
  2339     107E  3472               	retlw	114	;'r'
  2340     107F  3420               	retlw	32	;' '
  2341     1080  3420               	retlw	32	;' '
  2342     1081  3443               	retlw	67	;'C'
  2343     1082  346F               	retlw	111	;'o'
  2344     1083  3466               	retlw	102	;'f'
  2345     1084  3466               	retlw	102	;'f'
  2346     1085  3465               	retlw	101	;'e'
  2347     1086  3465               	retlw	101	;'e'
  2348     1087  3400               	retlw	0
  2349                           
  2350                           	psect	stringtext9
  2351     1088                     __pstringtext9:
  2352     1088                     STR_9:
  2353     1088  3420               	retlw	32	;' '
  2354     1089  3420               	retlw	32	;' '
  2355     108A  3420               	retlw	32	;' '
  2356     108B  3420               	retlw	32	;' '
  2357     108C  3420               	retlw	32	;' '
  2358     108D  3420               	retlw	32	;' '
  2359     108E  3420               	retlw	32	;' '
  2360     108F  3420               	retlw	32	;' '
  2361     1090  3420               	retlw	32	;' '
  2362     1091  3420               	retlw	32	;' '
  2363     1092  3420               	retlw	32	;' '
  2364     1093  3420               	retlw	32	;' '
  2365     1094  3420               	retlw	32	;' '
  2366     1095  3420               	retlw	32	;' '
  2367     1096  3420               	retlw	32	;' '
  2368     1097  3473               	retlw	115	;'s'
  2369     1098  3400               	retlw	0
  2370                           
  2371                           	psect	stringtext10
  2372     1099                     __pstringtext10:
  2373     1099                     STR_3:
  2374     1099  3441               	retlw	65	;'A'
  2375     109A  3455               	retlw	85	;'U'
  2376     109B  3454               	retlw	84	;'T'
  2377     109C  344F               	retlw	79	;'O'
  2378     109D  3420               	retlw	32	;' '
  2379     109E  343A               	retlw	58	;':'
  2380     109F  3420               	retlw	32	;' '
  2381     10A0  3420               	retlw	32	;' '
  2382     10A1  3420               	retlw	32	;' '
  2383     10A2  3420               	retlw	32	;' '
  2384     10A3  3420               	retlw	32	;' '
  2385     10A4  3420               	retlw	32	;' '
  2386     10A5  3420               	retlw	32	;' '
  2387     10A6  3420               	retlw	32	;' '
  2388     10A7  3420               	retlw	32	;' '
  2389     10A8  3473               	retlw	115	;'s'
  2390     10A9  3400               	retlw	0
  2391                           
  2392                           	psect	stringtext11
  2393     0000                     __pstringtext11:
  2394     1000                     
  2395                           	psect	cinit
  2396     001F                     start_initialization:	
  2397                           ; #config settings
  2398                           
  2399     001F                     __initialization:
  2400                           
  2401                           ; Initialize objects allocated to COMMON
  2402     001F  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
  2403     0022  00F8               	movwf	__pdataCOMMON& (0+127)
  2404     0023  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2405     0026  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  2406                           
  2407                           ; Initialize objects allocated to BANK0
  2408     0027  318B  23E9  3180   	fcall	__pidataBANK0	;fetch initializer
  2409     002A  00ED               	movwf	__pdataBANK0& (0+127)
  2410     002B  318B  23EA  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2411     002E  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  2412                           
  2413                           ; Initialize objects allocated to BANK1
  2414     002F  30E2               	movlw	low __pidataBANK1
  2415     0030  0084               	movwf	4
  2416     0031  308D               	movlw	(high __pidataBANK1)| (0+128)
  2417     0032  0085               	movwf	5
  2418     0033  30A0               	movlw	low __pdataBANK1
  2419     0034  0086               	movwf	6
  2420     0035  3000               	movlw	high __pdataBANK1
  2421     0036  0087               	movwf	7
  2422     0037  3028               	movlw	40
  2423     0038  318B  23FC  3180   	fcall	init_ram
  2424                           
  2425                           ; Clear objects allocated to COMMON
  2426     003B  01F6               	clrf	__pbssCOMMON& (0+127)
  2427     003C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2428                           
  2429                           ; Clear objects allocated to BANK0
  2430     003D  304A               	movlw	low __pbssBANK0
  2431     003E  0084               	movwf	4
  2432     003F  3000               	movlw	high __pbssBANK0
  2433     0040  0085               	movwf	5
  2434     0041  3021               	movlw	33
  2435     0042  318B  23F6  3180   	fcall	clear_ram0
  2436                           
  2437                           ; Clear objects allocated to BANK1
  2438     0045  0021               	movlb	1	; select bank1
  2439     0046  01C8               	clrf	__pbssBANK1& (0+127)
  2440     0047  01C9               	clrf	(__pbssBANK1+1)& (0+127)
  2441     0048  01CA               	clrf	(__pbssBANK1+2)& (0+127)
  2442     0049  01CB               	clrf	(__pbssBANK1+3)& (0+127)
  2443     004A                     end_of_initialization:	
  2444                           ;End of C runtime variable initialization code
  2445                           
  2446     004A                     __end_of__initialization:
  2447     004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2448     004B  0020               	movlb	0
  2449     004C  318F  2FC7         	ljmp	_main	;jump to C main() function
  2450                           
  2451                           	psect	bssCOMMON
  2452     0076                     __pbssCOMMON:
  2453     0076                     _flagPressAdjust:
  2454     0076                     	ds	1
  2455     0077                     __counterDelay:
  2456     0077                     	ds	1
  2457                           
  2458                           	psect	dataCOMMON
  2459     0078                     __pdataCOMMON:
  2460     0078                     __timeAuto:
  2461     0078                     	ds	2
  2462                           
  2463                           	psect	bssBANK0
  2464     004A                     __pbssBANK0:
  2465     004A                     _counterForButtonPress:
  2466     004A                     	ds	8
  2467     0052                     _flagForButtonPress_s:
  2468     0052                     	ds	4
  2469     0056                     _flagForButtonPress:
  2470     0056                     	ds	4
  2471     005A                     _debounceButtonBuffer1:
  2472     005A                     	ds	4
  2473     005E                     _current_col:
  2474     005E                     	ds	2
  2475     0060                     _current_row:
  2476     0060                     	ds	2
  2477     0062                     _timer1_cnt:
  2478     0062                     	ds	2
  2479     0064                     __countAuto:
  2480     0064                     	ds	2
  2481     0066                     __cupTotal:
  2482     0066                     	ds	2
  2483     0068                     _flag_timer1:
  2484     0068                     	ds	1
  2485     0069                     _mode:
  2486     0069                     	ds	1
  2487     006A                     _index_lcd:
  2488     006A                     	ds	1
  2489                           
  2490                           	psect	dataBANK0
  2491     006D                     __pdataBANK0:
  2492     006D                     _timer1_MUL:
  2493     006D                     	ds	2
  2494                           
  2495                           	psect	bssBANK1
  2496     00C8                     __pbssBANK1:
  2497     00C8                     _debounceButtonBuffer2:
  2498     00C8                     	ds	4
  2499                           
  2500                           	psect	dataBANK1
  2501     00A0                     __pdataBANK1:
  2502     00A0                     _LcdScreen:
  2503     00A0                     	ds	32
  2504     00C0                     _buttonBuffer:
  2505     00C0                     	ds	4
  2506     00C4                     _buttonInputMask:
  2507     00C4                     	ds	4
  2508                           
  2509                           	psect	inittext
  2510     0BFC                     init_ram:
  2511     0BFC  00FE               	movwf	btemp
  2512     0BFD                     initloop:
  2513     0BFD  0012               	moviw fsr0++
  2514     0BFE  001E               	movwi fsr1++
  2515     0BFF  0BFE               	decfsz	btemp,f
  2516     0C00  2BFD               	goto	initloop
  2517     0C01  3400               	retlw	0
  2518                           
  2519                           	psect	clrtext
  2520     0BF6                     clear_ram0:	
  2521                           ;	Called with FSR0 containing the base address, and
  2522                           ;	WREG with the size to clear
  2523                           
  2524     0BF6  0064               	clrwdt	;clear the watchdog before getting into this loop
  2525     0BF7                     clrloop0:
  2526     0BF7  0180               	clrf	0	;clear RAM location pointed to by FSR
  2527     0BF8  3101               	addfsr 0,1
  2528     0BF9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2529     0BFA  2BF7               	goto	clrloop0	;have we reached the end yet?
  2530     0BFB  3400               	retlw	0	;all done for this memory range, return
  2531                           
  2532                           	psect	cstackBANK1
  2533     00CC                     __pcstackBANK1:
  2534     00CC                     ??_FSM_ModeControl:
  2535                           
  2536                           ; 1 bytes @ 0x0
  2537     00CC                     	ds	2
  2538                           
  2539                           	psect	cstackCOMMON
  2540     0070                     __pcstackCOMMON:
  2541     0070                     ?_MTR_Set:
  2542     0070                     ?_EEP_SaveAutoTime:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545     0070                     ?_EEP_SaveCupTotal:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548     0070                     ?_SYS_Init:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551     0070                     ?_DisplayLcdScreen:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554     0070                     ?_Delay_ms:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557     0070                     ?_INT_Init:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560     0070                     ?_init_lcd:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563     0070                     ?_EEP_ReadAutoTime:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566     0070                     ?_EEP_ReadCupTotal:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569     0070                     ?_eeprom_read:	
  2570                           ; 1 bytes @ 0x0
  2571                           
  2572     0070                     ?_BTN_Init:	
  2573                           ; 1 bytes @ 0x0
  2574                           
  2575     0070                     ?_BTN_Reading:	
  2576                           ; 1 bytes @ 0x0
  2577                           
  2578     0070                     ??_BTN_Reading:	
  2579                           ; 1 bytes @ 0x0
  2580                           
  2581     0070                     ?_BTN_IsHeld:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584     0070                     ?_BTN_IsPressed:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587     0070                     ?_BTN_IsPressed_s:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590     0070                     ?_FSM_Init:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593     0070                     ?_FSM_ModeControl:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596     0070                     ?_TMR1_Start:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599     0070                     ??_TMR1_Start:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602     0070                     ?_TMR1_Stop:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605     0070                     ??_TMR1_Stop:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608     0070                     ?_TMR1_Isr:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611     0070                     ?_main:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614     0070                     ?_lcd_delay:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617     0070                     ?_lcd_send_command:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620     0070                     ?_lcd_write_4bits:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623     0070                     ?_lcd_write_cmd:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626     0070                     ?_lcd_write_data:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629     0070                     ?_lcd_print_char:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632     0070                     ?_lcd_print_charS:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635     0070                     ?_isr:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638                           
  2639                           ; 1 bytes @ 0x0
  2640     0070                     	ds	2
  2641     0072                     _BTN_Reading$37:
  2642                           
  2643                           ; 1 bytes @ 0x2
  2644     0072                     	ds	1
  2645     0073                     BTN_Reading@i:
  2646                           
  2647                           ; 1 bytes @ 0x3
  2648     0073                     	ds	1
  2649     0074                     ??_MTR_Set:
  2650     0074                     ?_LcdPrintCharS:	
  2651                           ; 1 bytes @ 0x4
  2652                           
  2653     0074                     ??_Delay_ms:	
  2654                           ; 1 bytes @ 0x4
  2655                           
  2656     0074                     ??_INT_Init:	
  2657                           ; 1 bytes @ 0x4
  2658                           
  2659     0074                     ?_eeprom_write:	
  2660                           ; 1 bytes @ 0x4
  2661                           
  2662     0074                     ??_BTN_Init:	
  2663                           ; 1 bytes @ 0x4
  2664                           
  2665     0074                     ??_BTN_IsHeld:	
  2666                           ; 1 bytes @ 0x4
  2667                           
  2668     0074                     ??_BTN_IsPressed:	
  2669                           ; 1 bytes @ 0x4
  2670                           
  2671     0074                     ??_BTN_IsPressed_s:	
  2672                           ; 1 bytes @ 0x4
  2673                           
  2674     0074                     ??_FSM_Init:	
  2675                           ; 1 bytes @ 0x4
  2676                           
  2677     0074                     ?_TMR1_Init:	
  2678                           ; 1 bytes @ 0x4
  2679                           
  2680     0074                     ??_TMR1_Isr:	
  2681                           ; 1 bytes @ 0x4
  2682                           
  2683     0074                     ??_lcd_delay:	
  2684                           ; 1 bytes @ 0x4
  2685                           
  2686     0074                     ??_lcd_power_of:	
  2687                           ; 1 bytes @ 0x4
  2688                           
  2689     0074                     ??_lcd_send_command:	
  2690                           ; 1 bytes @ 0x4
  2691                           
  2692     0074                     ??_isr:	
  2693                           ; 1 bytes @ 0x4
  2694                           
  2695     0074                     ??___wmul:	
  2696                           ; 1 bytes @ 0x4
  2697                           
  2698     0074                     ??___lmul:	
  2699                           ; 1 bytes @ 0x4
  2700                           
  2701     0074                     ??___awdiv:	
  2702                           ; 1 bytes @ 0x4
  2703                           
  2704     0074                     ??___awmod:	
  2705                           ; 1 bytes @ 0x4
  2706                           
  2707     0074                     ??___lwmod:	
  2708                           ; 1 bytes @ 0x4
  2709                           
  2710     0074                     BTN_IsPressed@result:	
  2711                           ; 1 bytes @ 0x4
  2712                           
  2713     0074                     BTN_IsPressed_s@index:	
  2714                           ; 1 bytes @ 0x4
  2715                           
  2716     0074                     MTR_Set@state:	
  2717                           ; 1 bytes @ 0x4
  2718                           
  2719     0074                     lcd_print_charS@c:	
  2720                           ; 1 bytes @ 0x4
  2721                           
  2722     0074                     LcdPrintCharS@y:	
  2723                           ; 1 bytes @ 0x4
  2724                           
  2725     0074                     eeprom_read@addr:	
  2726                           ; 1 bytes @ 0x4
  2727                           
  2728     0074                     eeprom_write@value:	
  2729                           ; 1 bytes @ 0x4
  2730                           
  2731     0074                     TMR1_Init@count:	
  2732                           ; 1 bytes @ 0x4
  2733                           
  2734     0074                     ___wmul@product:	
  2735                           ; 2 bytes @ 0x4
  2736                           
  2737                           
  2738                           ; 2 bytes @ 0x4
  2739     0074                     	ds	1
  2740     0075                     ??_lcd_write_4bits:
  2741     0075                     ??___lldiv:	
  2742                           ; 1 bytes @ 0x5
  2743                           
  2744     0075                     ??___llmod:	
  2745                           ; 1 bytes @ 0x5
  2746                           
  2747     0075                     BTN_IsPressed@index:	
  2748                           ; 1 bytes @ 0x5
  2749                           
  2750     0075                     LcdPrintCharS@c:	
  2751                           ; 1 bytes @ 0x5
  2752                           
  2753     0075                     LcdPrintStringS@x:	
  2754                           ; 1 bytes @ 0x5
  2755                           
  2756     0075                     eeprom_write@addr:	
  2757                           ; 1 bytes @ 0x5
  2758                           
  2759     0075                     ___lwmod@counter:	
  2760                           ; 1 bytes @ 0x5
  2761                           
  2762                           
  2763                           ; 1 bytes @ 0x5
  2764     0075                     	ds	1
  2765     0076                     ??_EEP_SaveAutoTime:
  2766     0076                     ??_EEP_SaveCupTotal:	
  2767                           ; 1 bytes @ 0x6
  2768                           
  2769     0076                     ??_SYS_Init:	
  2770                           ; 1 bytes @ 0x6
  2771                           
  2772     0076                     ??_TMR1_Init:	
  2773                           ; 1 bytes @ 0x6
  2774                           
  2775     0076                     ??_TMR1_SetTime_ms:	
  2776                           ; 1 bytes @ 0x6
  2777                           
  2778     0076                     ??_main:	
  2779                           ; 1 bytes @ 0x6
  2780                           
  2781     0076                     ??_lcd_print_char:	
  2782                           ; 1 bytes @ 0x6
  2783                           
  2784                           
  2785                           	psect	cstackBANK0
  2786     0020                     __pcstackBANK0:	
  2787                           ; 1 bytes @ 0x6
  2788                           
  2789     0020                     ??_LcdPrintCharS:
  2790     0020                     ??_eeprom_write:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793     0020                     ??_eeprom_read:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796     0020                     ?_v_timer0:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799     0020                     ??_lcd_print_charS:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802     0020                     ?___wmul:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805     0020                     ?___awdiv:	
  2806                           ; 2 bytes @ 0x0
  2807                           
  2808     0020                     ?___awmod:	
  2809                           ; 2 bytes @ 0x0
  2810                           
  2811     0020                     ?___lwmod:	
  2812                           ; 2 bytes @ 0x0
  2813                           
  2814     0020                     ?___lmul:	
  2815                           ; 2 bytes @ 0x0
  2816                           
  2817     0020                     BTN_IsHeld@index:	
  2818                           ; 4 bytes @ 0x0
  2819                           
  2820     0020                     Delay_ms@time:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823     0020                     lcd_delay@time:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826     0020                     ___wmul@multiplier:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829     0020                     ___awdiv@divisor:	
  2830                           ; 2 bytes @ 0x0
  2831                           
  2832     0020                     ___awmod@divisor:	
  2833                           ; 2 bytes @ 0x0
  2834                           
  2835     0020                     ___lwmod@divisor:	
  2836                           ; 2 bytes @ 0x0
  2837                           
  2838     0020                     v_timer0@time:	
  2839                           ; 2 bytes @ 0x0
  2840                           
  2841     0020                     ___lmul@multiplier:	
  2842                           ; 4 bytes @ 0x0
  2843                           
  2844                           
  2845                           ; 4 bytes @ 0x0
  2846     0020                     	ds	1
  2847     0021                     Delay_ms@i:
  2848     0021                     lcd_delay@i:	
  2849                           ; 2 bytes @ 0x1
  2850                           
  2851                           
  2852                           ; 2 bytes @ 0x1
  2853     0021                     	ds	1
  2854     0022                     ___wmul@multiplicand:
  2855     0022                     ___awdiv@dividend:	
  2856                           ; 2 bytes @ 0x2
  2857                           
  2858     0022                     ___awmod@dividend:	
  2859                           ; 2 bytes @ 0x2
  2860                           
  2861     0022                     ___lwmod@dividend:	
  2862                           ; 2 bytes @ 0x2
  2863                           
  2864                           
  2865                           ; 2 bytes @ 0x2
  2866     0022                     	ds	1
  2867     0023                     ?_LcdPrintStringS:
  2868     0023                     ??_EEP_ReadAutoTime:	
  2869                           ; 1 bytes @ 0x3
  2870                           
  2871     0023                     ??_EEP_ReadCupTotal:	
  2872                           ; 1 bytes @ 0x3
  2873                           
  2874     0023                     LcdPrintCharS@x:	
  2875                           ; 1 bytes @ 0x3
  2876                           
  2877     0023                     LcdPrintStringS@y:	
  2878                           ; 1 bytes @ 0x3
  2879                           
  2880     0023                     Delay_ms@j:	
  2881                           ; 1 bytes @ 0x3
  2882                           
  2883     0023                     lcd_delay@j:	
  2884                           ; 2 bytes @ 0x3
  2885                           
  2886                           
  2887                           ; 2 bytes @ 0x3
  2888     0023                     	ds	1
  2889     0024                     ??_v_timer0:
  2890     0024                     ?___lwdiv:	
  2891                           ; 1 bytes @ 0x4
  2892                           
  2893     0024                     ___awdiv@counter:	
  2894                           ; 2 bytes @ 0x4
  2895                           
  2896     0024                     ___awmod@counter:	
  2897                           ; 1 bytes @ 0x4
  2898                           
  2899     0024                     LcdPrintStringS@string:	
  2900                           ; 1 bytes @ 0x4
  2901                           
  2902     0024                     ___lwdiv@divisor:	
  2903                           ; 2 bytes @ 0x4
  2904                           
  2905     0024                     ___lmul@multiplicand:	
  2906                           ; 2 bytes @ 0x4
  2907                           
  2908                           
  2909                           ; 4 bytes @ 0x4
  2910     0024                     	ds	1
  2911     0025                     lcd_write_4bits@dat:
  2912     0025                     ___awdiv@sign:	
  2913                           ; 1 bytes @ 0x5
  2914                           
  2915     0025                     ___awmod@sign:	
  2916                           ; 1 bytes @ 0x5
  2917                           
  2918                           
  2919                           ; 1 bytes @ 0x5
  2920     0025                     	ds	1
  2921     0026                     ??_LcdPrintStringS:
  2922     0026                     ??_lcd_write_cmd:	
  2923                           ; 1 bytes @ 0x6
  2924                           
  2925     0026                     ??_lcd_write_data:	
  2926                           ; 1 bytes @ 0x6
  2927                           
  2928     0026                     ___awdiv@quotient:	
  2929                           ; 1 bytes @ 0x6
  2930                           
  2931     0026                     ___lwdiv@dividend:	
  2932                           ; 2 bytes @ 0x6
  2933                           
  2934                           
  2935                           ; 2 bytes @ 0x6
  2936     0026                     	ds	1
  2937     0027                     lcd_write_cmd@cmd:
  2938     0027                     lcd_write_data@data:	
  2939                           ; 1 bytes @ 0x7
  2940                           
  2941                           
  2942                           ; 1 bytes @ 0x7
  2943     0027                     	ds	1
  2944     0028                     ?_lcd_set_cursor:
  2945     0028                     ??___lwdiv:	
  2946                           ; 1 bytes @ 0x8
  2947                           
  2948     0028                     lcd_set_cursor@column:	
  2949                           ; 1 bytes @ 0x8
  2950                           
  2951     0028                     lcd_print_char@c:	
  2952                           ; 1 bytes @ 0x8
  2953                           
  2954     0028                     v_timer0@i:	
  2955                           ; 1 bytes @ 0x8
  2956                           
  2957     0028                     ___lmul@product:	
  2958                           ; 2 bytes @ 0x8
  2959                           
  2960                           
  2961                           ; 4 bytes @ 0x8
  2962     0028                     	ds	1
  2963     0029                     ??_lcd_set_cursor:
  2964     0029                     ___lwdiv@quotient:	
  2965                           ; 1 bytes @ 0x9
  2966                           
  2967                           
  2968                           ; 2 bytes @ 0x9
  2969     0029                     	ds	1
  2970     002A                     v_timer0@j:
  2971                           
  2972                           ; 2 bytes @ 0xA
  2973     002A                     	ds	1
  2974     002B                     lcd_set_cursor@row:
  2975     002B                     ___lwdiv@counter:	
  2976                           ; 1 bytes @ 0xB
  2977                           
  2978                           
  2979                           ; 1 bytes @ 0xB
  2980     002B                     	ds	1
  2981     002C                     ?_LcdPrintFloatS:
  2982     002C                     ?_BTN_IsPressed_ms:	
  2983                           ; 1 bytes @ 0xC
  2984                           
  2985     002C                     ?_TMR1_SetTime_ms:	
  2986                           ; 1 bytes @ 0xC
  2987                           
  2988     002C                     ?_lcd_power_of:	
  2989                           ; 1 bytes @ 0xC
  2990                           
  2991     002C                     lcd_send_command@cmd:	
  2992                           ; 4 bytes @ 0xC
  2993                           
  2994     002C                     lcd_set_cursor@address:	
  2995                           ; 1 bytes @ 0xC
  2996                           
  2997     002C                     LcdPrintFloatS@y:	
  2998                           ; 1 bytes @ 0xC
  2999                           
  3000     002C                     BTN_IsPressed_ms@milisec:	
  3001                           ; 1 bytes @ 0xC
  3002                           
  3003     002C                     TMR1_SetTime_ms@time:	
  3004                           ; 2 bytes @ 0xC
  3005                           
  3006     002C                     lcd_power_of@A:	
  3007                           ; 2 bytes @ 0xC
  3008                           
  3009                           
  3010                           ; 2 bytes @ 0xC
  3011     002C                     	ds	1
  3012     002D                     ??_DisplayLcdScreen:
  3013     002D                     ??_init_lcd:	
  3014                           ; 1 bytes @ 0xD
  3015                           
  3016     002D                     LcdPrintFloatS@num:	
  3017                           ; 1 bytes @ 0xD
  3018                           
  3019                           
  3020                           ; 2 bytes @ 0xD
  3021     002D                     	ds	1
  3022     002E                     ??_BTN_IsPressed_ms:
  3023     002E                     DisplayLcdScreen@i:	
  3024                           ; 1 bytes @ 0xE
  3025                           
  3026     002E                     lcd_power_of@x:	
  3027                           ; 1 bytes @ 0xE
  3028                           
  3029                           
  3030                           ; 2 bytes @ 0xE
  3031     002E                     	ds	1
  3032     002F                     ??_LcdPrintFloatS:
  3033                           
  3034                           ; 1 bytes @ 0xF
  3035     002F                     	ds	1
  3036     0030                     BTN_IsPressed_ms@index:
  3037     0030                     lcd_power_of@i:	
  3038                           ; 1 bytes @ 0x10
  3039                           
  3040                           
  3041                           ; 1 bytes @ 0x10
  3042     0030                     	ds	1
  3043     0031                     LcdPrintFloatS@x:
  3044     0031                     lcd_power_of@temp:	
  3045                           ; 1 bytes @ 0x11
  3046                           
  3047                           
  3048                           ; 4 bytes @ 0x11
  3049     0031                     	ds	1
  3050     0032                     LcdPrintFloatS@decimalPlaces:
  3051                           
  3052                           ; 1 bytes @ 0x12
  3053     0032                     	ds	1
  3054     0033                     LcdPrintFloatS@integerPart:
  3055                           
  3056                           ; 1 bytes @ 0x13
  3057     0033                     	ds	2
  3058     0035                     ?___lldiv:
  3059     0035                     ?___llmod:	
  3060                           ; 4 bytes @ 0x15
  3061                           
  3062     0035                     ___lldiv@divisor:	
  3063                           ; 4 bytes @ 0x15
  3064                           
  3065     0035                     ___llmod@divisor:	
  3066                           ; 4 bytes @ 0x15
  3067                           
  3068                           
  3069                           ; 4 bytes @ 0x15
  3070     0035                     	ds	4
  3071     0039                     ___lldiv@dividend:
  3072     0039                     ___llmod@dividend:	
  3073                           ; 4 bytes @ 0x19
  3074                           
  3075                           
  3076                           ; 4 bytes @ 0x19
  3077     0039                     	ds	4
  3078     003D                     ___llmod@counter:
  3079     003D                     ___lldiv@quotient:	
  3080                           ; 1 bytes @ 0x1D
  3081                           
  3082                           
  3083                           ; 4 bytes @ 0x1D
  3084     003D                     	ds	4
  3085     0041                     ___lldiv@counter:
  3086                           
  3087                           ; 1 bytes @ 0x21
  3088     0041                     	ds	1
  3089     0042                     ?_LcdPrintNumS:
  3090     0042                     LcdPrintNumS@y:	
  3091                           ; 1 bytes @ 0x22
  3092                           
  3093                           
  3094                           ; 1 bytes @ 0x22
  3095     0042                     	ds	1
  3096     0043                     LcdPrintNumS@num:
  3097                           
  3098                           ; 2 bytes @ 0x23
  3099     0043                     	ds	2
  3100     0045                     ??_LcdPrintNumS:
  3101                           
  3102                           ; 1 bytes @ 0x25
  3103     0045                     	ds	2
  3104     0047                     LcdPrintNumS@x:
  3105                           
  3106                           ; 1 bytes @ 0x27
  3107     0047                     	ds	1
  3108     0048                     LcdPrintNumS@num_flag:
  3109                           
  3110                           ; 1 bytes @ 0x28
  3111     0048                     	ds	1
  3112     0049                     LcdPrintNumS@i:
  3113                           
  3114                           ; 1 bytes @ 0x29
  3115     0049                     	ds	1
  3116                           
  3117                           	psect	maintext
  3118     0FC7                     __pmaintext:	
  3119 ;;
  3120 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3121 ;;
  3122 ;; *************** function _main *****************
  3123 ;; Defined at:
  3124 ;;		line 14 in file "main.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : B1F/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels required when called: 8
  3144 ;; This function calls:
  3145 ;;		_Delay_ms
  3146 ;;		_DisplayLcdScreen
  3147 ;;		_FSM_ModeControl
  3148 ;;		_LcdPrintStringS
  3149 ;;		_SYS_Init
  3150 ;; This function is called by:
  3151 ;;		Startup code after reset
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155     0FC7                     _main:	
  3156                           ;psect for function _main
  3157                           
  3158     0FC7                     l3699:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3161                           
  3162                           
  3163                           ;main.c: 15:     SYS_Init();
  3164     0FC7  318E  26BF  318F   	fcall	_SYS_Init
  3165     0FCA                     l3701:
  3166                           
  3167                           ;main.c: 16:     LcdPrintStringS(0,0, "Vietstar  Coffee");
  3168     0FCA  0020               	movlb	0	; select bank0
  3169     0FCB  01A3               	clrf	LcdPrintStringS@y
  3170     0FCC  3077               	movlw	low (STR_1| (0+32768))
  3171     0FCD  00A4               	movwf	LcdPrintStringS@string
  3172     0FCE  3090               	movlw	high (STR_1| (0+32768))
  3173     0FCF  00A5               	movwf	LcdPrintStringS@string+1
  3174     0FD0  3000               	movlw	0
  3175     0FD1  3187  27D6  318F   	fcall	_LcdPrintStringS
  3176     0FD4                     l3703:
  3177                           
  3178                           ;main.c: 17:     DisplayLcdScreen();
  3179     0FD4  318F  2758  318F   	fcall	_DisplayLcdScreen
  3180                           
  3181                           ;main.c: 18:     Delay_ms(2000);
  3182     0FD7  30D0               	movlw	208
  3183     0FD8  318E  2635  318F   	fcall	_Delay_ms
  3184     0FDB                     l3705:
  3185                           
  3186                           ;main.c: 22:         FSM_ModeControl();
  3187     0FDB  3180  204E  318F   	fcall	_FSM_ModeControl
  3188     0FDE                     l3707:
  3189                           
  3190                           ;main.c: 24:         if(flag_timer1){
  3191     0FDE  0020               	movlb	0	; select bank0
  3192     0FDF  0868               	movf	_flag_timer1,w
  3193     0FE0  1903               	btfsc	3,2
  3194     0FE1  2FE3               	goto	u3351
  3195     0FE2  2FE4               	goto	u3350
  3196     0FE3                     u3351:
  3197     0FE3  2FDB               	goto	l3705
  3198     0FE4                     u3350:
  3199     0FE4                     l3709:
  3200                           
  3201                           ;main.c: 25:             flag_timer1 = 0;
  3202     0FE4  01E8               	clrf	_flag_timer1
  3203     0FE5                     l3711:
  3204                           
  3205                           ;main.c: 26:             DisplayLcdScreen();
  3206     0FE5  318F  2758  318F   	fcall	_DisplayLcdScreen
  3207     0FE8                     l3713:
  3208                           
  3209                           ;main.c: 28:             if(_countAuto >= 5){
  3210     0FE8  3000               	movlw	0
  3211     0FE9  0020               	movlb	0	; select bank0
  3212     0FEA  0265               	subwf	__countAuto+1,w
  3213     0FEB  3005               	movlw	5
  3214     0FEC  1903               	skipnz
  3215     0FED  0264               	subwf	__countAuto,w
  3216     0FEE  1C03               	skipc
  3217     0FEF  2FF1               	goto	u3361
  3218     0FF0  2FF2               	goto	u3360
  3219     0FF1                     u3361:
  3220     0FF1  2FF6               	goto	l3717
  3221     0FF2                     u3360:
  3222     0FF2                     l3715:
  3223                           
  3224                           ;main.c: 29:                 _countAuto -= 5;
  3225     0FF2  3005               	movlw	5
  3226     0FF3  02E4               	subwf	__countAuto,f
  3227     0FF4  3000               	movlw	0
  3228     0FF5  3BE5               	subwfb	__countAuto+1,f
  3229     0FF6                     l3717:
  3230                           
  3231                           ;main.c: 31:             if(_counterDelay >= 1){
  3232     0FF6  0877               	movf	__counterDelay,w
  3233     0FF7  1903               	btfsc	3,2
  3234     0FF8  2FFA               	goto	u3371
  3235     0FF9  2FFB               	goto	u3370
  3236     0FFA                     u3371:
  3237     0FFA  2FDB               	goto	l3705
  3238     0FFB                     u3370:
  3239     0FFB                     l3719:
  3240                           
  3241                           ;main.c: 32:                 _counterDelay -= 1;
  3242     0FFB  3001               	movlw	1
  3243     0FFC  02F7               	subwf	__counterDelay,f
  3244     0FFD  2FDB               	goto	l3705
  3245     0FFE  3180  281D         	ljmp	start
  3246     1000                     __end_of_main:
  3247                           
  3248                           	psect	text1
  3249     0EBF                     __ptext1:	
  3250 ;; *************** function _SYS_Init *****************
  3251 ;; Defined at:
  3252 ;;		line 41 in file "main.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 6
  3273 ;; This function calls:
  3274 ;;		_BTN_Init
  3275 ;;		_EEP_ReadAutoTime
  3276 ;;		_EEP_ReadCupTotal
  3277 ;;		_FSM_Init
  3278 ;;		_INT_Init
  3279 ;;		_TMR1_Init
  3280 ;;		_TMR1_SetTime_ms
  3281 ;;		_init_lcd
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287     0EBF                     _SYS_Init:	
  3288                           ;psect for function _SYS_Init
  3289                           
  3290     0EBF                     l3627:	
  3291                           ;incstack = 0
  3292                           ; Regs used in _SYS_Init: [wreg+status,2+status,0+pclath+cstack]
  3293                           
  3294                           
  3295                           ;main.c: 43:     OSCCONbits.IRCF = 0b1101;
  3296     0EBF  0021               	movlb	1	; select bank1
  3297     0EC0  0819               	movf	25,w	;volatile
  3298     0EC1  3987               	andlw	-121
  3299     0EC2  3868               	iorlw	104
  3300     0EC3  0099               	movwf	25	;volatile
  3301     0EC4                     l3629:
  3302                           
  3303                           ;main.c: 44:     ANSC0 = 0;
  3304     0EC4  0023               	movlb	3	; select bank3
  3305     0EC5  100E               	bcf	14,0	;volatile
  3306     0EC6                     l3631:
  3307                           
  3308                           ;main.c: 45:     ANSC1 = 0;
  3309     0EC6  108E               	bcf	14,1	;volatile
  3310     0EC7                     l3633:
  3311                           
  3312                           ;main.c: 46:     ANSC2 = 0;
  3313     0EC7  110E               	bcf	14,2	;volatile
  3314     0EC8                     l3635:
  3315                           
  3316                           ;main.c: 47:     ANSC3 = 0;
  3317     0EC8  118E               	bcf	14,3	;volatile
  3318     0EC9                     l3637:
  3319                           
  3320                           ;main.c: 48:     ANSC6 = 0;
  3321     0EC9  130E               	bcf	14,6	;volatile
  3322     0ECA                     l3639:
  3323                           
  3324                           ;main.c: 49:     ANSC7 = 0;
  3325     0ECA  138E               	bcf	14,7	;volatile
  3326     0ECB                     l3641:
  3327                           
  3328                           ;main.c: 50:     TRISC = 0x00;
  3329     0ECB  0021               	movlb	1	; select bank1
  3330     0ECC  018E               	clrf	14	;volatile
  3331     0ECD                     l3643:
  3332                           
  3333                           ;main.c: 52:     INT_Init();
  3334     0ECD  318B  23EE  318E   	fcall	_INT_Init
  3335     0ED0                     l3645:
  3336                           
  3337                           ;main.c: 53:     TMR1_Init(10000);
  3338     0ED0  3010               	movlw	16
  3339     0ED1  00F4               	movwf	TMR1_Init@count
  3340     0ED2  3027               	movlw	39
  3341     0ED3  00F5               	movwf	TMR1_Init@count+1
  3342     0ED4  318C  2451  318E   	fcall	_TMR1_Init
  3343     0ED7                     l3647:
  3344                           
  3345                           ;main.c: 55:     BTN_Init();
  3346     0ED7  318C  241B  318E   	fcall	_BTN_Init
  3347     0EDA                     l3649:
  3348                           
  3349                           ;main.c: 56:     init_lcd();
  3350     0EDA  3183  234B  318E   	fcall	_init_lcd
  3351     0EDD                     l3651:
  3352                           
  3353                           ;main.c: 57:     FSM_Init();
  3354     0EDD  318B  23F1  318E   	fcall	_FSM_Init
  3355     0EE0                     l3653:
  3356                           
  3357                           ;main.c: 59:     TMR1_SetTime_ms(50);
  3358     0EE0  3032               	movlw	50
  3359     0EE1  0020               	movlb	0	; select bank0
  3360     0EE2  00AC               	movwf	TMR1_SetTime_ms@time
  3361     0EE3  3000               	movlw	0
  3362     0EE4  00AD               	movwf	TMR1_SetTime_ms@time+1
  3363     0EE5  318C  2465  318E   	fcall	_TMR1_SetTime_ms
  3364     0EE8                     l3655:
  3365                           
  3366                           ;main.c: 61:     EEP_ReadAutoTime();
  3367     0EE8  318D  259B  318E   	fcall	_EEP_ReadAutoTime
  3368     0EEB                     l3657:
  3369                           
  3370                           ;main.c: 62:     EEP_ReadCupTotal();
  3371     0EEB  318C  2490  318E   	fcall	_EEP_ReadCupTotal
  3372     0EEE                     l265:
  3373     0EEE  0008               	return
  3374     0EEF                     __end_of_SYS_Init:
  3375                           
  3376                           	psect	text2
  3377     034B                     __ptext2:	
  3378 ;; *************** function _init_lcd *****************
  3379 ;; Defined at:
  3380 ;;		line 51 in file "lcd.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, pclath, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;Total ram usage:        1 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 5
  3401 ;; This function calls:
  3402 ;;		_lcd_send_command
  3403 ;;		_v_timer0
  3404 ;; This function is called by:
  3405 ;;		_SYS_Init
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409     034B                     _init_lcd:	
  3410                           ;psect for function _init_lcd
  3411                           
  3412     034B                     l3311:	
  3413                           ;incstack = 0
  3414                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  3415                           
  3416                           
  3417                           ;lcd.c: 53:     TRISC = 0x00;
  3418     034B  0021               	movlb	1	; select bank1
  3419     034C  018E               	clrf	14	;volatile
  3420     034D                     l3313:
  3421                           
  3422                           ;lcd.c: 54:     v_timer0(25);
  3423     034D  3000               	movlw	0
  3424     034E  0020               	movlb	0	; select bank0
  3425     034F  00A3               	movwf	v_timer0@time+3
  3426     0350  3000               	movlw	0
  3427     0351  00A2               	movwf	v_timer0@time+2
  3428     0352  3000               	movlw	0
  3429     0353  00A1               	movwf	v_timer0@time+1
  3430     0354  3019               	movlw	25
  3431     0355  00A0               	movwf	v_timer0@time
  3432     0356  318F  278E  3183   	fcall	_v_timer0
  3433     0359                     l3315:
  3434                           
  3435                           ;lcd.c: 56:     PORTC&=0x0f;
  3436     0359  300F               	movlw	15
  3437     035A  0020               	movlb	0	; select bank0
  3438     035B  00AD               	movwf	??_init_lcd
  3439     035C  082D               	movf	??_init_lcd,w
  3440     035D  058E               	andwf	14,f	;volatile
  3441     035E                     l3317:
  3442                           
  3443                           ;lcd.c: 57:  PORTC&=0xf8;
  3444     035E  30F8               	movlw	248
  3445     035F  00AD               	movwf	??_init_lcd
  3446     0360  082D               	movf	??_init_lcd,w
  3447     0361  058E               	andwf	14,f	;volatile
  3448     0362                     l3319:
  3449                           
  3450                           ;lcd.c: 60:     PORTC &= 0x0F; PORTC |= (0x03<<4);
  3451     0362  300F               	movlw	15
  3452     0363  00AD               	movwf	??_init_lcd
  3453     0364  082D               	movf	??_init_lcd,w
  3454     0365  058E               	andwf	14,f	;volatile
  3455     0366                     l3321:
  3456                           
  3457                           ;lcd.c: 61:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3458     0366  3030               	movlw	48
  3459     0367  00AD               	movwf	??_init_lcd
  3460     0368  082D               	movf	??_init_lcd,w
  3461     0369  048E               	iorwf	14,f	;volatile
  3462     036A                     l3323:
  3463     036A  158E               	bsf	14,3	;volatile
  3464     036B                     l3327:
  3465                           
  3466                           ;lcd.c: 62:     v_timer0(1);
  3467     036B  3000               	movlw	0
  3468     036C  00A3               	movwf	v_timer0@time+3
  3469     036D  3000               	movlw	0
  3470     036E  00A2               	movwf	v_timer0@time+2
  3471     036F  3000               	movlw	0
  3472     0370  00A1               	movwf	v_timer0@time+1
  3473     0371  3001               	movlw	1
  3474     0372  00A0               	movwf	v_timer0@time
  3475     0373  318F  278E  3183   	fcall	_v_timer0
  3476     0376                     l3331:	
  3477                           ;lcd.c: 63:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3478                           
  3479     0376  30F7               	movlw	247
  3480     0377  0020               	movlb	0	; select bank0
  3481     0378  00AD               	movwf	??_init_lcd
  3482     0379  082D               	movf	??_init_lcd,w
  3483     037A  058E               	andwf	14,f	;volatile
  3484     037B                     l3333:
  3485                           
  3486                           ;lcd.c: 64:     v_timer0(1);
  3487     037B  3000               	movlw	0
  3488     037C  00A3               	movwf	v_timer0@time+3
  3489     037D  3000               	movlw	0
  3490     037E  00A2               	movwf	v_timer0@time+2
  3491     037F  3000               	movlw	0
  3492     0380  00A1               	movwf	v_timer0@time+1
  3493     0381  3001               	movlw	1
  3494     0382  00A0               	movwf	v_timer0@time
  3495     0383  318F  278E  3183   	fcall	_v_timer0
  3496     0386                     l3335:
  3497                           
  3498                           ;lcd.c: 67:     PORTC &= 0x0F; PORTC |= (0x03<<4);
  3499     0386  300F               	movlw	15
  3500     0387  0020               	movlb	0	; select bank0
  3501     0388  00AD               	movwf	??_init_lcd
  3502     0389  082D               	movf	??_init_lcd,w
  3503     038A  058E               	andwf	14,f	;volatile
  3504     038B                     l3337:
  3505                           
  3506                           ;lcd.c: 68:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3507     038B  3030               	movlw	48
  3508     038C  00AD               	movwf	??_init_lcd
  3509     038D  082D               	movf	??_init_lcd,w
  3510     038E  048E               	iorwf	14,f	;volatile
  3511     038F                     l3339:
  3512     038F  158E               	bsf	14,3	;volatile
  3513     0390                     l3343:
  3514                           
  3515                           ;lcd.c: 69:     v_timer0(1);
  3516     0390  3000               	movlw	0
  3517     0391  00A3               	movwf	v_timer0@time+3
  3518     0392  3000               	movlw	0
  3519     0393  00A2               	movwf	v_timer0@time+2
  3520     0394  3000               	movlw	0
  3521     0395  00A1               	movwf	v_timer0@time+1
  3522     0396  3001               	movlw	1
  3523     0397  00A0               	movwf	v_timer0@time
  3524     0398  318F  278E  3183   	fcall	_v_timer0
  3525     039B                     l3347:	
  3526                           ;lcd.c: 70:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3527                           
  3528     039B  30F7               	movlw	247
  3529     039C  0020               	movlb	0	; select bank0
  3530     039D  00AD               	movwf	??_init_lcd
  3531     039E  082D               	movf	??_init_lcd,w
  3532     039F  058E               	andwf	14,f	;volatile
  3533     03A0                     l3349:
  3534                           
  3535                           ;lcd.c: 71:     v_timer0(1);
  3536     03A0  3000               	movlw	0
  3537     03A1  00A3               	movwf	v_timer0@time+3
  3538     03A2  3000               	movlw	0
  3539     03A3  00A2               	movwf	v_timer0@time+2
  3540     03A4  3000               	movlw	0
  3541     03A5  00A1               	movwf	v_timer0@time+1
  3542     03A6  3001               	movlw	1
  3543     03A7  00A0               	movwf	v_timer0@time
  3544     03A8  318F  278E  3183   	fcall	_v_timer0
  3545     03AB                     l3351:
  3546                           
  3547                           ;lcd.c: 74:     PORTC &= 0x0F; PORTC |= (0x03<<4);
  3548     03AB  300F               	movlw	15
  3549     03AC  0020               	movlb	0	; select bank0
  3550     03AD  00AD               	movwf	??_init_lcd
  3551     03AE  082D               	movf	??_init_lcd,w
  3552     03AF  058E               	andwf	14,f	;volatile
  3553     03B0                     l3353:
  3554                           
  3555                           ;lcd.c: 75:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3556     03B0  3030               	movlw	48
  3557     03B1  00AD               	movwf	??_init_lcd
  3558     03B2  082D               	movf	??_init_lcd,w
  3559     03B3  048E               	iorwf	14,f	;volatile
  3560     03B4                     l3355:
  3561     03B4  158E               	bsf	14,3	;volatile
  3562     03B5                     l3359:
  3563                           
  3564                           ;lcd.c: 76:     v_timer0(1);
  3565     03B5  3000               	movlw	0
  3566     03B6  00A3               	movwf	v_timer0@time+3
  3567     03B7  3000               	movlw	0
  3568     03B8  00A2               	movwf	v_timer0@time+2
  3569     03B9  3000               	movlw	0
  3570     03BA  00A1               	movwf	v_timer0@time+1
  3571     03BB  3001               	movlw	1
  3572     03BC  00A0               	movwf	v_timer0@time
  3573     03BD  318F  278E  3183   	fcall	_v_timer0
  3574     03C0                     l3363:	
  3575                           ;lcd.c: 77:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3576                           
  3577     03C0  30F7               	movlw	247
  3578     03C1  0020               	movlb	0	; select bank0
  3579     03C2  00AD               	movwf	??_init_lcd
  3580     03C3  082D               	movf	??_init_lcd,w
  3581     03C4  058E               	andwf	14,f	;volatile
  3582     03C5                     l3365:
  3583                           
  3584                           ;lcd.c: 78:     v_timer0(1);
  3585     03C5  3000               	movlw	0
  3586     03C6  00A3               	movwf	v_timer0@time+3
  3587     03C7  3000               	movlw	0
  3588     03C8  00A2               	movwf	v_timer0@time+2
  3589     03C9  3000               	movlw	0
  3590     03CA  00A1               	movwf	v_timer0@time+1
  3591     03CB  3001               	movlw	1
  3592     03CC  00A0               	movwf	v_timer0@time
  3593     03CD  318F  278E  3183   	fcall	_v_timer0
  3594     03D0                     l3367:
  3595                           
  3596                           ;lcd.c: 81:     PORTC &= 0x0F; PORTC |= (0x02<<4);
  3597     03D0  300F               	movlw	15
  3598     03D1  0020               	movlb	0	; select bank0
  3599     03D2  00AD               	movwf	??_init_lcd
  3600     03D3  082D               	movf	??_init_lcd,w
  3601     03D4  058E               	andwf	14,f	;volatile
  3602     03D5                     l3369:
  3603                           
  3604                           ;lcd.c: 82:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3605     03D5  168E               	bsf	14,5	;volatile
  3606     03D6                     l3371:
  3607     03D6  158E               	bsf	14,3	;volatile
  3608     03D7                     l3375:
  3609                           
  3610                           ;lcd.c: 83:     v_timer0(1);
  3611     03D7  3000               	movlw	0
  3612     03D8  00A3               	movwf	v_timer0@time+3
  3613     03D9  3000               	movlw	0
  3614     03DA  00A2               	movwf	v_timer0@time+2
  3615     03DB  3000               	movlw	0
  3616     03DC  00A1               	movwf	v_timer0@time+1
  3617     03DD  3001               	movlw	1
  3618     03DE  00A0               	movwf	v_timer0@time
  3619     03DF  318F  278E  3183   	fcall	_v_timer0
  3620     03E2                     l3379:	
  3621                           ;lcd.c: 84:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3622                           
  3623     03E2  30F7               	movlw	247
  3624     03E3  0020               	movlb	0	; select bank0
  3625     03E4  00AD               	movwf	??_init_lcd
  3626     03E5  082D               	movf	??_init_lcd,w
  3627     03E6  058E               	andwf	14,f	;volatile
  3628     03E7                     l3381:
  3629                           
  3630                           ;lcd.c: 85:     v_timer0(1);
  3631     03E7  3000               	movlw	0
  3632     03E8  00A3               	movwf	v_timer0@time+3
  3633     03E9  3000               	movlw	0
  3634     03EA  00A2               	movwf	v_timer0@time+2
  3635     03EB  3000               	movlw	0
  3636     03EC  00A1               	movwf	v_timer0@time+1
  3637     03ED  3001               	movlw	1
  3638     03EE  00A0               	movwf	v_timer0@time
  3639     03EF  318F  278E  3183   	fcall	_v_timer0
  3640     03F2                     l3383:
  3641                           
  3642                           ;lcd.c: 87:  lcd_send_command(0x28);
  3643     03F2  3028               	movlw	40
  3644     03F3  3186  2664  3183   	fcall	_lcd_send_command
  3645     03F6                     l3385:
  3646                           
  3647                           ;lcd.c: 89:  lcd_send_command(0x0c);
  3648     03F6  300C               	movlw	12
  3649     03F7  3186  2664  3183   	fcall	_lcd_send_command
  3650     03FA                     l343:
  3651     03FA  0008               	return
  3652     03FB                     __end_of_init_lcd:
  3653                           
  3654                           	psect	text3
  3655     0664                     __ptext3:	
  3656 ;; *************** function _lcd_send_command *****************
  3657 ;; Defined at:
  3658 ;;		line 32 in file "lcd.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  cmd             1    wreg     unsigned char 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  cmd             1   12[BANK0 ] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0, pclath, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;Total ram usage:        3 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 4
  3679 ;; This function calls:
  3680 ;;		_v_timer0
  3681 ;; This function is called by:
  3682 ;;		_init_lcd
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686     0664                     _lcd_send_command:	
  3687                           ;psect for function _lcd_send_command
  3688                           
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _lcd_send_command: [wreg+status,2+status,0+pclath+cstack]
  3692                           ;lcd_send_command@cmd stored from wreg
  3693     0664  0020               	movlb	0	; select bank0
  3694     0665  00AC               	movwf	lcd_send_command@cmd
  3695     0666                     l3065:
  3696                           
  3697                           ;lcd.c: 32: void lcd_send_command(unsigned char cmd);lcd.c: 33: {;lcd.c: 34:  PORTC &= 0
      +                          x0f;
  3698     0666  300F               	movlw	15
  3699     0667  00F4               	movwf	??_lcd_send_command
  3700     0668  0874               	movf	??_lcd_send_command,w
  3701     0669  058E               	andwf	14,f	;volatile
  3702                           
  3703                           ;lcd.c: 35:  PORTC |= (cmd&0xf0);
  3704     066A  082C               	movf	lcd_send_command@cmd,w
  3705     066B  39F0               	andlw	240
  3706     066C  00F4               	movwf	??_lcd_send_command
  3707     066D  0874               	movf	??_lcd_send_command,w
  3708     066E  048E               	iorwf	14,f	;volatile
  3709     066F                     l3067:
  3710                           
  3711                           ;lcd.c: 36:  PORTC |= (1 << 3);
  3712     066F  158E               	bsf	14,3	;volatile
  3713     0670                     l3069:
  3714                           
  3715                           ;lcd.c: 37:  v_timer0(1);
  3716     0670  3000               	movlw	0
  3717     0671  00A3               	movwf	v_timer0@time+3
  3718     0672  3000               	movlw	0
  3719     0673  00A2               	movwf	v_timer0@time+2
  3720     0674  3000               	movlw	0
  3721     0675  00A1               	movwf	v_timer0@time+1
  3722     0676  3001               	movlw	1
  3723     0677  00A0               	movwf	v_timer0@time
  3724     0678  318F  278E  3186   	fcall	_v_timer0
  3725     067B                     l3071:
  3726                           
  3727                           ;lcd.c: 39:  PORTC &=~ (1 <<3);
  3728     067B  30F7               	movlw	247
  3729     067C  00F4               	movwf	??_lcd_send_command
  3730     067D  0874               	movf	??_lcd_send_command,w
  3731     067E  0020               	movlb	0	; select bank0
  3732     067F  058E               	andwf	14,f	;volatile
  3733                           
  3734                           ;lcd.c: 40:  v_timer0(1);
  3735     0680  3000               	movlw	0
  3736     0681  00A3               	movwf	v_timer0@time+3
  3737     0682  3000               	movlw	0
  3738     0683  00A2               	movwf	v_timer0@time+2
  3739     0684  3000               	movlw	0
  3740     0685  00A1               	movwf	v_timer0@time+1
  3741     0686  3001               	movlw	1
  3742     0687  00A0               	movwf	v_timer0@time
  3743     0688  318F  278E  3186   	fcall	_v_timer0
  3744     068B                     l3073:
  3745                           
  3746                           ;lcd.c: 42:  PORTC &= 0x0f;
  3747     068B  300F               	movlw	15
  3748     068C  00F4               	movwf	??_lcd_send_command
  3749     068D  0874               	movf	??_lcd_send_command,w
  3750     068E  0020               	movlb	0	; select bank0
  3751     068F  058E               	andwf	14,f	;volatile
  3752     0690                     l3075:
  3753                           
  3754                           ;lcd.c: 43:  PORTC |= (cmd<<4);
  3755     0690  082C               	movf	lcd_send_command@cmd,w	;volatile
  3756     0691  00F4               	movwf	??_lcd_send_command
  3757     0692  3003               	movlw	3
  3758     0693                     u2555:
  3759     0693  35F4               	lslf	??_lcd_send_command,f
  3760     0694  3EFF               	addlw	-1
  3761     0695  1D03               	skipz
  3762     0696  2E93               	goto	u2555
  3763     0697  3574               	lslf	??_lcd_send_command,w
  3764     0698  00F5               	movwf	??_lcd_send_command+1
  3765     0699  0875               	movf	??_lcd_send_command+1,w
  3766     069A  048E               	iorwf	14,f	;volatile
  3767     069B                     l3077:
  3768                           
  3769                           ;lcd.c: 44:  PORTC |= (1 <<3);
  3770     069B  158E               	bsf	14,3	;volatile
  3771                           
  3772                           ;lcd.c: 45:  v_timer0(1);
  3773     069C  3000               	movlw	0
  3774     069D  00A3               	movwf	v_timer0@time+3
  3775     069E  3000               	movlw	0
  3776     069F  00A2               	movwf	v_timer0@time+2
  3777     06A0  3000               	movlw	0
  3778     06A1  00A1               	movwf	v_timer0@time+1
  3779     06A2  3001               	movlw	1
  3780     06A3  00A0               	movwf	v_timer0@time
  3781     06A4  318F  278E  3186   	fcall	_v_timer0
  3782     06A7                     l3079:
  3783                           
  3784                           ;lcd.c: 47:  PORTC &=~ (1 <<3);
  3785     06A7  30F7               	movlw	247
  3786     06A8  00F4               	movwf	??_lcd_send_command
  3787     06A9  0874               	movf	??_lcd_send_command,w
  3788     06AA  0020               	movlb	0	; select bank0
  3789     06AB  058E               	andwf	14,f	;volatile
  3790     06AC                     l3081:
  3791                           
  3792                           ;lcd.c: 48:  v_timer0(1);
  3793     06AC  3000               	movlw	0
  3794     06AD  00A3               	movwf	v_timer0@time+3
  3795     06AE  3000               	movlw	0
  3796     06AF  00A2               	movwf	v_timer0@time+2
  3797     06B0  3000               	movlw	0
  3798     06B1  00A1               	movwf	v_timer0@time+1
  3799     06B2  3001               	movlw	1
  3800     06B3  00A0               	movwf	v_timer0@time
  3801     06B4  318F  278E  3186   	fcall	_v_timer0
  3802     06B7                     l308:
  3803     06B7  0008               	return
  3804     06B8                     __end_of_lcd_send_command:
  3805                           
  3806                           	psect	text4
  3807     0F8E                     __ptext4:	
  3808 ;; *************** function _v_timer0 *****************
  3809 ;; Defined at:
  3810 ;;		line 16 in file "lcd.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  time            4    0[BANK0 ] unsigned long 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  j               2   10[BANK0 ] int 
  3815 ;;  i               2    8[BANK0 ] int 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3825 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3826 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3827 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3828 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3829 ;;Total ram usage:       12 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 3
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_lcd_send_command
  3836 ;;		_init_lcd
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840     0F8E                     _v_timer0:	
  3841                           ;psect for function _v_timer0
  3842                           
  3843     0F8E                     l3011:	
  3844                           ;incstack = 0
  3845                           ; Regs used in _v_timer0: [wreg+status,2]
  3846                           
  3847                           
  3848                           ;lcd.c: 16: void v_timer0(unsigned long time);lcd.c: 17: {;lcd.c: 18:     int i,j;;lcd.c
      +                          : 19:     for(i=0;i<time;i++)
  3849     0F8E  0020               	movlb	0	; select bank0
  3850     0F8F  01A8               	clrf	v_timer0@i
  3851     0F90  01A9               	clrf	v_timer0@i+1
  3852     0F91  2FAB               	goto	l294
  3853     0F92                     l3013:
  3854                           
  3855                           ;lcd.c: 20:         for(j=0;j<160;j++);
  3856     0F92  01AA               	clrf	v_timer0@j
  3857     0F93  01AB               	clrf	v_timer0@j+1
  3858     0F94                     l3019:
  3859     0F94  3001               	movlw	1
  3860     0F95  0020               	movlb	0	; select bank0
  3861     0F96  07AA               	addwf	v_timer0@j,f
  3862     0F97  3000               	movlw	0
  3863     0F98  3DAB               	addwfc	v_timer0@j+1,f
  3864     0F99  082B               	movf	v_timer0@j+1,w
  3865     0F9A  3A80               	xorlw	128
  3866     0F9B  00A4               	movwf	??_v_timer0
  3867     0F9C  3080               	movlw	128
  3868     0F9D  0224               	subwf	??_v_timer0,w
  3869     0F9E  1D03               	skipz
  3870     0F9F  2FA2               	goto	u2485
  3871     0FA0  30A0               	movlw	160
  3872     0FA1  022A               	subwf	v_timer0@j,w
  3873     0FA2                     u2485:
  3874     0FA2  1C03               	skipc
  3875     0FA3  2FA5               	goto	u2481
  3876     0FA4  2FA6               	goto	u2480
  3877     0FA5                     u2481:
  3878     0FA5  2F94               	goto	l3019
  3879     0FA6                     u2480:
  3880     0FA6                     l3021:
  3881     0FA6  3001               	movlw	1
  3882     0FA7  0020               	movlb	0	; select bank0
  3883     0FA8  07A8               	addwf	v_timer0@i,f
  3884     0FA9  3000               	movlw	0
  3885     0FAA  3DA9               	addwfc	v_timer0@i+1,f
  3886     0FAB                     l294:
  3887     0FAB  0828               	movf	v_timer0@i,w
  3888     0FAC  00A4               	movwf	??_v_timer0
  3889     0FAD  0829               	movf	v_timer0@i+1,w
  3890     0FAE  00A5               	movwf	??_v_timer0+1
  3891     0FAF  3000               	movlw	0
  3892     0FB0  1BA5               	btfsc	??_v_timer0+1,7
  3893     0FB1  30FF               	movlw	255
  3894     0FB2  00A6               	movwf	??_v_timer0+2
  3895     0FB3  00A7               	movwf	??_v_timer0+3
  3896     0FB4  0823               	movf	v_timer0@time+3,w
  3897     0FB5  0227               	subwf	??_v_timer0+3,w
  3898     0FB6  1D03               	skipz
  3899     0FB7  2FC2               	goto	u2495
  3900     0FB8  0822               	movf	v_timer0@time+2,w
  3901     0FB9  0226               	subwf	??_v_timer0+2,w
  3902     0FBA  1D03               	skipz
  3903     0FBB  2FC2               	goto	u2495
  3904     0FBC  0821               	movf	v_timer0@time+1,w
  3905     0FBD  0225               	subwf	??_v_timer0+1,w
  3906     0FBE  1D03               	skipz
  3907     0FBF  2FC2               	goto	u2495
  3908     0FC0  0820               	movf	v_timer0@time,w
  3909     0FC1  0224               	subwf	??_v_timer0,w
  3910     0FC2                     u2495:
  3911     0FC2  1C03               	skipc
  3912     0FC3  2FC5               	goto	u2491
  3913     0FC4  2FC6               	goto	u2490
  3914     0FC5                     u2491:
  3915     0FC5  2F92               	goto	l3013
  3916     0FC6                     u2490:
  3917     0FC6                     l299:
  3918     0FC6  0008               	return
  3919     0FC7                     __end_of_v_timer0:
  3920                           
  3921                           	psect	text5
  3922     0C65                     __ptext5:	
  3923 ;; *************** function _TMR1_SetTime_ms *****************
  3924 ;; Defined at:
  3925 ;;		line 52 in file "timer.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  time            2   12[BANK0 ] unsigned int 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used: 1
  3945 ;; Hardware stack levels required when called: 4
  3946 ;; This function calls:
  3947 ;;		___lwdiv
  3948 ;; This function is called by:
  3949 ;;		_SYS_Init
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953     0C65                     _TMR1_SetTime_ms:	
  3954                           ;psect for function _TMR1_SetTime_ms
  3955                           
  3956     0C65                     l2511:	
  3957                           ;incstack = 0
  3958                           ; Regs used in _TMR1_SetTime_ms: [wreg+status,2+status,0+pclath+cstack]
  3959                           
  3960                           
  3961                           ;timer.c: 52: void TMR1_SetTime_ms(unsigned int time);timer.c: 53: {;timer.c: 54:  timer
      +                          1_MUL = time/10;
  3962     0C65  300A               	movlw	10
  3963     0C66  0020               	movlb	0	; select bank0
  3964     0C67  00A4               	movwf	___lwdiv@divisor
  3965     0C68  3000               	movlw	0
  3966     0C69  00A5               	movwf	___lwdiv@divisor+1
  3967     0C6A  082D               	movf	TMR1_SetTime_ms@time+1,w
  3968     0C6B  00A7               	movwf	___lwdiv@dividend+1
  3969     0C6C  082C               	movf	TMR1_SetTime_ms@time,w
  3970     0C6D  00A6               	movwf	___lwdiv@dividend
  3971     0C6E  3187  2799  318C   	fcall	___lwdiv
  3972     0C71  0020               	movlb	0	; select bank0
  3973     0C72  0825               	movf	?___lwdiv+1,w
  3974     0C73  00EE               	movwf	_timer1_MUL+1
  3975     0C74  0824               	movf	?___lwdiv,w
  3976     0C75  00ED               	movwf	_timer1_MUL
  3977     0C76                     l2513:
  3978                           
  3979                           ;timer.c: 55:  timer1_cnt = 0;
  3980     0C76  01E2               	clrf	_timer1_cnt
  3981     0C77  01E3               	clrf	_timer1_cnt+1
  3982     0C78                     l2515:
  3983                           
  3984                           ;timer.c: 56:  flag_timer1 = 0;
  3985     0C78  01E8               	clrf	_flag_timer1
  3986     0C79                     l198:
  3987     0C79  0008               	return
  3988     0C7A                     __end_of_TMR1_SetTime_ms:
  3989                           
  3990                           	psect	text6
  3991     0C51                     __ptext6:	
  3992 ;; *************** function _TMR1_Init *****************
  3993 ;; Defined at:
  3994 ;;		line 10 in file "timer.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  count           2    4[COMMON] unsigned int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used: 1
  4014 ;; Hardware stack levels required when called: 3
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_SYS_Init
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022     0C51                     _TMR1_Init:	
  4023                           ;psect for function _TMR1_Init
  4024                           
  4025     0C51                     l2493:	
  4026                           ;incstack = 0
  4027                           ; Regs used in _TMR1_Init: [wreg+status,2+status,0]
  4028                           
  4029                           
  4030                           ;timer.c: 12:     T1CONbits.TMR1ON = 0;
  4031     0C51  0020               	movlb	0	; select bank0
  4032     0C52  1018               	bcf	24,0	;volatile
  4033     0C53                     l2495:
  4034                           
  4035                           ;timer.c: 13:     timer1_value = 65535 - count;
  4036     0C53  0974               	comf	TMR1_Init@count,w
  4037     0C54  00EB               	movwf	_timer1_value
  4038     0C55  0975               	comf	TMR1_Init@count+1,w
  4039     0C56  00EC               	movwf	_timer1_value+1
  4040     0C57                     l2497:
  4041                           
  4042                           ;timer.c: 14:     TMR1 = timer1_value;
  4043     0C57  086C               	movf	_timer1_value+1,w
  4044     0C58  0097               	movwf	23	;volatile
  4045     0C59  086B               	movf	_timer1_value,w
  4046     0C5A  0096               	movwf	22	;volatile
  4047     0C5B                     l2499:
  4048                           
  4049                           ;timer.c: 16:     T1CONbits.TMR1CS = 0;
  4050     0C5B  303F               	movlw	-193
  4051     0C5C  0598               	andwf	24,f	;volatile
  4052     0C5D                     l2501:
  4053                           
  4054                           ;timer.c: 18:     T1CONbits.T1CKPS0 = 0;
  4055     0C5D  1218               	bcf	24,4	;volatile
  4056     0C5E                     l2503:
  4057                           
  4058                           ;timer.c: 19:     T1CONbits.T1CKPS1 = 0;
  4059     0C5E  1298               	bcf	24,5	;volatile
  4060     0C5F                     l2505:
  4061                           
  4062                           ;timer.c: 21:     TMR1IF = 0;
  4063     0C5F  1011               	bcf	17,0	;volatile
  4064     0C60                     l2507:
  4065                           
  4066                           ;timer.c: 22:     TMR1IE = 1;
  4067     0C60  0021               	movlb	1	; select bank1
  4068     0C61  1411               	bsf	17,0	;volatile
  4069     0C62                     l2509:
  4070                           
  4071                           ;timer.c: 23:     T1CONbits.TMR1ON = 1;
  4072     0C62  0020               	movlb	0	; select bank0
  4073     0C63  1418               	bsf	24,0	;volatile
  4074     0C64                     l185:
  4075     0C64  0008               	return
  4076     0C65                     __end_of_TMR1_Init:
  4077                           
  4078                           	psect	text7
  4079     0BEE                     __ptext7:	
  4080 ;; *************** function _INT_Init *****************
  4081 ;; Defined at:
  4082 ;;		line 3 in file "interrupt.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		None
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 3
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_SYS_Init
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110     0BEE                     _INT_Init:	
  4111                           ;psect for function _INT_Init
  4112                           
  4113     0BEE                     l2517:	
  4114                           ;incstack = 0
  4115                           ; Regs used in _INT_Init: []
  4116                           
  4117                           
  4118                           ;interrupt.c: 4:  INTCONbits.GIE = 1;
  4119     0BEE  178B               	bsf	11,7	;volatile
  4120                           
  4121                           ;interrupt.c: 5:  INTCONbits.PEIE = 1;
  4122     0BEF  170B               	bsf	11,6	;volatile
  4123     0BF0                     l429:
  4124     0BF0  0008               	return
  4125     0BF1                     __end_of_INT_Init:
  4126                           
  4127                           	psect	text8
  4128     0BF1                     __ptext8:	
  4129 ;; *************** function _FSM_Init *****************
  4130 ;; Defined at:
  4131 ;;		line 9 in file "fsm.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 3
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_SYS_Init
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159     0BF1                     _FSM_Init:	
  4160                           ;psect for function _FSM_Init
  4161                           
  4162     0BF1                     l2429:	
  4163                           ;incstack = 0
  4164                           ; Regs used in _FSM_Init: [status,2]
  4165                           
  4166                           
  4167                           ;fsm.c: 10:     index_lcd = 0;
  4168     0BF1  0020               	movlb	0	; select bank0
  4169     0BF2  01EA               	clrf	_index_lcd
  4170                           
  4171                           ;fsm.c: 11:     mode = INIT;
  4172     0BF3  01E9               	clrf	_mode
  4173                           
  4174                           ;fsm.c: 12:     flagPressAdjust = 0;
  4175     0BF4  01F6               	clrf	_flagPressAdjust
  4176     0BF5                     l94:
  4177     0BF5  0008               	return
  4178     0BF6                     __end_of_FSM_Init:
  4179                           
  4180                           	psect	text9
  4181     0C90                     __ptext9:	
  4182 ;; *************** function _EEP_ReadCupTotal *****************
  4183 ;; Defined at:
  4184 ;;		line 49 in file "eeprom.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0, pclath, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4200 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;Total ram usage:        4 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; Hardware stack levels required when called: 4
  4205 ;; This function calls:
  4206 ;;		_eeprom_read
  4207 ;; This function is called by:
  4208 ;;		_SYS_Init
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212     0C90                     _EEP_ReadCupTotal:	
  4213                           ;psect for function _EEP_ReadCupTotal
  4214                           
  4215     0C90                     l3393:	
  4216                           ;incstack = 0
  4217                           ; Regs used in _EEP_ReadCupTotal: [wreg+status,2+status,0+pclath+cstack]
  4218                           
  4219                           
  4220                           ;eeprom.c: 50:     _cupTotal = eeprom_read(0x02) | eeprom_read(0x03) << 8;
  4221     0C90  3003               	movlw	3
  4222     0C91  318D  2505  318C   	fcall	_eeprom_read
  4223     0C94  0020               	movlb	0	; select bank0
  4224     0C95  00A3               	movwf	??_EEP_ReadCupTotal
  4225     0C96  01A4               	clrf	??_EEP_ReadCupTotal+1
  4226     0C97  0823               	movf	??_EEP_ReadCupTotal,w
  4227     0C98  00A4               	movwf	??_EEP_ReadCupTotal+1
  4228     0C99  01A3               	clrf	??_EEP_ReadCupTotal
  4229     0C9A  3002               	movlw	2
  4230     0C9B  318D  2505  318C   	fcall	_eeprom_read
  4231     0C9E  0020               	movlb	0	; select bank0
  4232     0C9F  00A6               	movwf	??_EEP_ReadCupTotal+3
  4233     0CA0  0823               	movf	??_EEP_ReadCupTotal,w
  4234     0CA1  0426               	iorwf	??_EEP_ReadCupTotal+3,w
  4235     0CA2  00E6               	movwf	__cupTotal
  4236     0CA3  0824               	movf	??_EEP_ReadCupTotal+1,w
  4237     0CA4  00E7               	movwf	__cupTotal+1
  4238     0CA5                     l456:
  4239     0CA5  0008               	return
  4240     0CA6                     __end_of_EEP_ReadCupTotal:
  4241                           
  4242                           	psect	text10
  4243     0D9B                     __ptext10:	
  4244 ;; *************** function _EEP_ReadAutoTime *****************
  4245 ;; Defined at:
  4246 ;;		line 44 in file "eeprom.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, pclath, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;Total ram usage:        4 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 4
  4267 ;; This function calls:
  4268 ;;		_eeprom_read
  4269 ;; This function is called by:
  4270 ;;		_SYS_Init
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274     0D9B                     _EEP_ReadAutoTime:	
  4275                           ;psect for function _EEP_ReadAutoTime
  4276                           
  4277     0D9B                     l3387:	
  4278                           ;incstack = 0
  4279                           ; Regs used in _EEP_ReadAutoTime: [wreg+status,2+status,0+pclath+cstack]
  4280                           
  4281                           
  4282                           ;eeprom.c: 45:     _timeAuto = eeprom_read(0x00) | eeprom_read(0x01) << 8;
  4283     0D9B  3001               	movlw	1
  4284     0D9C  318D  2505  318D   	fcall	_eeprom_read
  4285     0D9F  0020               	movlb	0	; select bank0
  4286     0DA0  00A3               	movwf	??_EEP_ReadAutoTime
  4287     0DA1  01A4               	clrf	??_EEP_ReadAutoTime+1
  4288     0DA2  0823               	movf	??_EEP_ReadAutoTime,w
  4289     0DA3  00A4               	movwf	??_EEP_ReadAutoTime+1
  4290     0DA4  01A3               	clrf	??_EEP_ReadAutoTime
  4291     0DA5  3000               	movlw	0
  4292     0DA6  318D  2505  318D   	fcall	_eeprom_read
  4293     0DA9  0020               	movlb	0	; select bank0
  4294     0DAA  00A6               	movwf	??_EEP_ReadAutoTime+3
  4295     0DAB  0823               	movf	??_EEP_ReadAutoTime,w
  4296     0DAC  0426               	iorwf	??_EEP_ReadAutoTime+3,w
  4297     0DAD  00F8               	movwf	__timeAuto
  4298     0DAE  0824               	movf	??_EEP_ReadAutoTime+1,w
  4299     0DAF  00F9               	movwf	__timeAuto+1
  4300     0DB0                     l3389:
  4301                           
  4302                           ;eeprom.c: 46:     if(_timeAuto > 9900) _timeAuto = 9900;
  4303     0DB0  3026               	movlw	38
  4304     0DB1  0279               	subwf	__timeAuto+1,w
  4305     0DB2  30AD               	movlw	173
  4306     0DB3  1903               	skipnz
  4307     0DB4  0278               	subwf	__timeAuto,w
  4308     0DB5  1C03               	skipc
  4309     0DB6  2DB8               	goto	u2981
  4310     0DB7  2DB9               	goto	u2980
  4311     0DB8                     u2981:
  4312     0DB8  2DBD               	goto	l453
  4313     0DB9                     u2980:
  4314     0DB9                     l3391:
  4315     0DB9  30AC               	movlw	172
  4316     0DBA  00F8               	movwf	__timeAuto
  4317     0DBB  3026               	movlw	38
  4318     0DBC  00F9               	movwf	__timeAuto+1
  4319     0DBD                     l453:
  4320     0DBD  0008               	return
  4321     0DBE                     __end_of_EEP_ReadAutoTime:
  4322                           
  4323                           	psect	text11
  4324     0D05                     __ptext11:	
  4325 ;; *************** function _eeprom_read *****************
  4326 ;; Defined at:
  4327 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  addr            1    wreg     unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  addr            1    4[COMMON] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      unsigned char 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;Total ram usage:        4 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 3
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_EEP_ReadAutoTime
  4352 ;;		_EEP_ReadCupTotal
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356     0D05                     _eeprom_read:	
  4357                           ;psect for function _eeprom_read
  4358                           
  4359                           
  4360                           ;incstack = 0
  4361                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4362                           ;eeprom_read@addr stored from wreg
  4363     0D05  00F4               	movwf	eeprom_read@addr
  4364     0D06                     l613:	
  4365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 8:  do
  4366                           
  4367     0D06  0064               	clrwdt	;# 
  4368     0D07  0023               	movlb	3	; select bank3
  4369     0D08  1895               	btfsc	21,1	;volsfr
  4370     0D09  2D0B               	goto	u2621
  4371     0D0A  2D0C               	goto	u2620
  4372     0D0B                     u2621:
  4373     0D0B  2D06               	goto	l613
  4374     0D0C                     u2620:
  4375     0D0C                     l3133:
  4376                           
  4377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4378     0D0C  0874               	movf	eeprom_read@addr,w
  4379     0D0D  0020               	movlb	0	; select bank0
  4380     0D0E  00A0               	movwf	??_eeprom_read
  4381     0D0F  01A1               	clrf	??_eeprom_read+1
  4382     0D10  0820               	movf	??_eeprom_read,w
  4383     0D11  0023               	movlb	3	; select bank3
  4384     0D12  0091               	movwf	17	;volatile
  4385     0D13  0020               	movlb	0	; select bank0
  4386     0D14  0821               	movf	??_eeprom_read+1,w
  4387     0D15  0023               	movlb	3	; select bank3
  4388     0D16  0092               	movwf	18	;volatile
  4389     0D17  303F               	movlw	63
  4390     0D18  0020               	movlb	0	; select bank0
  4391     0D19  00A2               	movwf	??_eeprom_read+2
  4392     0D1A  0822               	movf	??_eeprom_read+2,w
  4393     0D1B  0023               	movlb	3	; select bank3
  4394     0D1C  0595               	andwf	21,f	;volsfr
  4395     0D1D  1415               	bsf	21,0	;volsfr
  4396     0D1E  0813               	movf	19,w	;volatile
  4397     0D1F                     l615:
  4398     0D1F  0008               	return
  4399     0D20                     __end_of_eeprom_read:
  4400                           
  4401                           	psect	text12
  4402     0C1B                     __ptext12:	
  4403 ;; *************** function _BTN_Init *****************
  4404 ;; Defined at:
  4405 ;;		line 17 in file "button.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 3
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_SYS_Init
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433     0C1B                     _BTN_Init:	
  4434                           ;psect for function _BTN_Init
  4435                           
  4436     0C1B                     l2349:	
  4437                           ;incstack = 0
  4438                           ; Regs used in _BTN_Init: [wreg]
  4439                           
  4440                           
  4441                           ;button.c: 19:     ANSA0 = 0;
  4442     0C1B  0023               	movlb	3	; select bank3
  4443     0C1C  100C               	bcf	12,0	;volatile
  4444                           
  4445                           ;button.c: 20:     ANSA1 = 0;
  4446     0C1D  108C               	bcf	12,1	;volatile
  4447                           
  4448                           ;button.c: 21:     ANSA2 = 0;
  4449     0C1E  110C               	bcf	12,2	;volatile
  4450     0C1F                     l2351:
  4451                           
  4452                           ;button.c: 22:     TRISA = 0x0F;
  4453     0C1F  300F               	movlw	15
  4454     0C20  0021               	movlb	1	; select bank1
  4455     0C21  008C               	movwf	12	;volatile
  4456                           
  4457                           ;button.c: 23:     PORTA = 0xFF;
  4458     0C22  30FF               	movlw	255
  4459     0C23  0020               	movlb	0	; select bank0
  4460     0C24  008C               	movwf	12	;volatile
  4461     0C25                     l27:
  4462     0C25  0008               	return
  4463     0C26                     __end_of_BTN_Init:
  4464                           
  4465                           	psect	text13
  4466     004E                     __ptext13:	
  4467 ;; *************** function _FSM_ModeControl *****************
  4468 ;; Defined at:
  4469 ;;		line 15 in file "fsm.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;Total ram usage:        2 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; Hardware stack levels required when called: 6
  4490 ;; This function calls:
  4491 ;;		_BTN_IsHeld
  4492 ;;		_BTN_IsPressed
  4493 ;;		_BTN_IsPressed_ms
  4494 ;;		_BTN_IsPressed_s
  4495 ;;		_EEP_SaveAutoTime
  4496 ;;		_EEP_SaveCupTotal
  4497 ;;		_LcdPrintCharS
  4498 ;;		_LcdPrintFloatS
  4499 ;;		_LcdPrintNumS
  4500 ;;		_LcdPrintStringS
  4501 ;;		_MTR_Set
  4502 ;;		___lwdiv
  4503 ;;		___wmul
  4504 ;; This function is called by:
  4505 ;;		_main
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509     004E                     _FSM_ModeControl:	
  4510                           ;psect for function _FSM_ModeControl
  4511                           
  4512     004E                     l3431:	
  4513                           ;incstack = 0
  4514                           ; Regs used in _FSM_ModeControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4515                           
  4516                           
  4517                           ;fsm.c: 16:     switch(mode){
  4518     004E  2B26               	goto	l3617
  4519     004F                     l3433:
  4520                           
  4521                           ;fsm.c: 18:             LcdPrintStringS(0, 0, "Vietstar  Coffee");
  4522     004F  0020               	movlb	0	; select bank0
  4523     0050  01A3               	clrf	LcdPrintStringS@y
  4524     0051  3077               	movlw	low (STR_1| (0+32768))
  4525     0052  00A4               	movwf	LcdPrintStringS@string
  4526     0053  3090               	movlw	high (STR_1| (0+32768))
  4527     0054  00A5               	movwf	LcdPrintStringS@string+1
  4528     0055  3000               	movlw	0
  4529     0056  3187  27D6  3180   	fcall	_LcdPrintStringS
  4530                           
  4531                           ;fsm.c: 19:             LcdPrintStringS(1, 0, "    _ MANUAL _  ");
  4532     0059  0020               	movlb	0	; select bank0
  4533     005A  01A3               	clrf	LcdPrintStringS@y
  4534     005B  3033               	movlw	low (STR_2| (0+32768))
  4535     005C  00A4               	movwf	LcdPrintStringS@string
  4536     005D  3090               	movlw	high (STR_2| (0+32768))
  4537     005E  00A5               	movwf	LcdPrintStringS@string+1
  4538     005F  3001               	movlw	1
  4539     0060  3187  27D6  3180   	fcall	_LcdPrintStringS
  4540     0063                     l3435:
  4541                           
  4542                           ;fsm.c: 22:             MTR_Set(0);
  4543     0063  3000               	movlw	0
  4544     0064  318C  2410  3180   	fcall	_MTR_Set
  4545     0067                     l3437:
  4546                           
  4547                           ;fsm.c: 23:             mode = MANUAL;
  4548     0067  0020               	movlb	0	; select bank0
  4549     0068  01E9               	clrf	_mode
  4550     0069  0AE9               	incf	_mode,f
  4551                           
  4552                           ;fsm.c: 24:             break;
  4553     006A  2B4A               	goto	l156
  4554     006B                     l3439:
  4555                           
  4556                           ;fsm.c: 26:             if(BTN_IsHeld(3)) MTR_Set(1);
  4557     006B  3003               	movlw	3
  4558     006C  318C  24BD  3180   	fcall	_BTN_IsHeld
  4559     006F  3A00               	xorlw	0
  4560     0070  1903               	skipnz
  4561     0071  2873               	goto	u3031
  4562     0072  2874               	goto	u3030
  4563     0073                     u3031:
  4564     0073  2879               	goto	l3443
  4565     0074                     u3030:
  4566     0074                     l3441:
  4567     0074  3001               	movlw	1
  4568     0075  318C  2410  3180   	fcall	_MTR_Set
  4569     0078  287D               	goto	l3445
  4570     0079                     l3443:
  4571     0079  3000               	movlw	0
  4572     007A  318C  2410  3180   	fcall	_MTR_Set
  4573     007D                     l3445:
  4574                           
  4575                           ;fsm.c: 29:             if(BTN_IsPressed(1)){
  4576     007D  3001               	movlw	1
  4577     007E  318C  247A  3180   	fcall	_BTN_IsPressed
  4578     0081  3A00               	xorlw	0
  4579     0082  1903               	skipnz
  4580     0083  2885               	goto	u3041
  4581     0084  2886               	goto	u3040
  4582     0085                     u3041:
  4583     0085  2B4A               	goto	l156
  4584     0086                     u3040:
  4585     0086                     l3447:
  4586                           
  4587                           ;fsm.c: 30:                 LcdPrintStringS(0, 0, "AUTO :         s");
  4588     0086  0020               	movlb	0	; select bank0
  4589     0087  01A3               	clrf	LcdPrintStringS@y
  4590     0088  3099               	movlw	low (STR_3| (0+32768))
  4591     0089  00A4               	movwf	LcdPrintStringS@string
  4592     008A  3090               	movlw	high (STR_3| (0+32768))
  4593     008B  00A5               	movwf	LcdPrintStringS@string+1
  4594     008C  3000               	movlw	0
  4595     008D  3187  27D6  3180   	fcall	_LcdPrintStringS
  4596                           
  4597                           ;fsm.c: 31:                 LcdPrintStringS(1, 0, "CUP  :          ");
  4598     0090  0020               	movlb	0	; select bank0
  4599     0091  01A3               	clrf	LcdPrintStringS@y
  4600     0092  3000               	movlw	low (STR_4| (0+32768))
  4601     0093  00A4               	movwf	LcdPrintStringS@string
  4602     0094  3090               	movlw	high (STR_4| (0+32768))
  4603     0095  00A5               	movwf	LcdPrintStringS@string+1
  4604     0096  3001               	movlw	1
  4605     0097  3187  27D6  3180   	fcall	_LcdPrintStringS
  4606     009A                     l3449:
  4607                           
  4608                           ;fsm.c: 34:                 LcdPrintFloatS(0, 8, _timeAuto);
  4609     009A  3008               	movlw	8
  4610     009B  0020               	movlb	0	; select bank0
  4611     009C  00AC               	movwf	LcdPrintFloatS@y
  4612     009D  0879               	movf	__timeAuto+1,w
  4613     009E  00AE               	movwf	LcdPrintFloatS@num+1
  4614     009F  0878               	movf	__timeAuto,w
  4615     00A0  00AD               	movwf	LcdPrintFloatS@num
  4616     00A1  3000               	movlw	0
  4617     00A2  3185  2531  3180   	fcall	_LcdPrintFloatS
  4618     00A5                     l3451:
  4619                           
  4620                           ;fsm.c: 35:                 LcdPrintNumS(1, 8, _cupTotal);
  4621     00A5  3008               	movlw	8
  4622     00A6  0020               	movlb	0	; select bank0
  4623     00A7  00C2               	movwf	LcdPrintNumS@y
  4624     00A8  0867               	movf	__cupTotal+1,w
  4625     00A9  00C4               	movwf	LcdPrintNumS@num+1
  4626     00AA  0866               	movf	__cupTotal,w
  4627     00AB  00C3               	movwf	LcdPrintNumS@num
  4628     00AC  3001               	movlw	1
  4629     00AD  3183  23FB  3180   	fcall	_LcdPrintNumS
  4630     00B0                     l3453:
  4631                           
  4632                           ;fsm.c: 36:                 MTR_Set(0);
  4633     00B0  3000               	movlw	0
  4634     00B1  318C  2410  3180   	fcall	_MTR_Set
  4635     00B4                     l3455:
  4636                           
  4637                           ;fsm.c: 38:                 mode = AUTO;
  4638     00B4  3002               	movlw	2
  4639     00B5  0020               	movlb	0	; select bank0
  4640     00B6  00E9               	movwf	_mode
  4641     00B7  2B4A               	goto	l156
  4642     00B8                     l103:	
  4643                           ;fsm.c: 39:             }
  4644                           
  4645                           
  4646                           ;fsm.c: 40:             break;
  4647     00B8  2B4A               	goto	l156
  4648     00B9                     l3457:
  4649                           
  4650                           ;fsm.c: 42:             if(BTN_IsHeld(3)) {
  4651     00B9  3003               	movlw	3
  4652     00BA  318C  24BD  3180   	fcall	_BTN_IsHeld
  4653     00BD  3A00               	xorlw	0
  4654     00BE  1903               	skipnz
  4655     00BF  28C1               	goto	u3051
  4656     00C0  28C2               	goto	u3050
  4657     00C1                     u3051:
  4658     00C1  28E3               	goto	l3467
  4659     00C2                     u3050:
  4660     00C2                     l3459:
  4661                           
  4662                           ;fsm.c: 43:                 LcdPrintStringS(0, 0, " |            | ");
  4663     00C2  0020               	movlb	0	; select bank0
  4664     00C3  01A3               	clrf	LcdPrintStringS@y
  4665     00C4  3044               	movlw	low (STR_5| (0+32768))
  4666     00C5  00A4               	movwf	LcdPrintStringS@string
  4667     00C6  3090               	movlw	high (STR_5| (0+32768))
  4668     00C7  00A5               	movwf	LcdPrintStringS@string+1
  4669     00C8  3000               	movlw	0
  4670     00C9  3187  27D6  3180   	fcall	_LcdPrintStringS
  4671                           
  4672                           ;fsm.c: 44:                 LcdPrintStringS(1, 0, "     [STOP]     ");
  4673     00CC  0020               	movlb	0	; select bank0
  4674     00CD  01A3               	clrf	LcdPrintStringS@y
  4675     00CE  3011               	movlw	low (STR_6| (0+32768))
  4676     00CF  00A4               	movwf	LcdPrintStringS@string
  4677     00D0  3090               	movlw	high (STR_6| (0+32768))
  4678     00D1  00A5               	movwf	LcdPrintStringS@string+1
  4679     00D2  3001               	movlw	1
  4680     00D3  3187  27D6  3180   	fcall	_LcdPrintStringS
  4681     00D6                     l3461:
  4682                           
  4683                           ;fsm.c: 47:                 _countAuto = _timeAuto;
  4684     00D6  0879               	movf	__timeAuto+1,w
  4685     00D7  0020               	movlb	0	; select bank0
  4686     00D8  00E5               	movwf	__countAuto+1
  4687     00D9  0878               	movf	__timeAuto,w
  4688     00DA  00E4               	movwf	__countAuto
  4689     00DB                     l3463:
  4690                           
  4691                           ;fsm.c: 48:                 MTR_Set(1);
  4692     00DB  3001               	movlw	1
  4693     00DC  318C  2410  3180   	fcall	_MTR_Set
  4694     00DF                     l3465:
  4695                           
  4696                           ;fsm.c: 50:                 mode = START_AUTO;
  4697     00DF  3006               	movlw	6
  4698     00E0  0020               	movlb	0	; select bank0
  4699     00E1  00E9               	movwf	_mode
  4700                           
  4701                           ;fsm.c: 51:             }
  4702     00E2  2B4A               	goto	l156
  4703     00E3                     l3467:
  4704     00E3  3001               	movlw	1
  4705     00E4  318C  247A  3180   	fcall	_BTN_IsPressed
  4706     00E7  3A00               	xorlw	0
  4707     00E8  1903               	skipnz
  4708     00E9  28EB               	goto	u3061
  4709     00EA  28EC               	goto	u3060
  4710     00EB                     u3061:
  4711     00EB  2905               	goto	l3475
  4712     00EC                     u3060:
  4713     00EC                     l3469:
  4714                           
  4715                           ;fsm.c: 53:                 LcdPrintStringS(0, 0, "Vietstar  Coffee");
  4716     00EC  0020               	movlb	0	; select bank0
  4717     00ED  01A3               	clrf	LcdPrintStringS@y
  4718     00EE  3077               	movlw	low (STR_1| (0+32768))
  4719     00EF  00A4               	movwf	LcdPrintStringS@string
  4720     00F0  3090               	movlw	high (STR_1| (0+32768))
  4721     00F1  00A5               	movwf	LcdPrintStringS@string+1
  4722     00F2  3000               	movlw	0
  4723     00F3  3187  27D6  3180   	fcall	_LcdPrintStringS
  4724                           
  4725                           ;fsm.c: 54:                 LcdPrintStringS(1, 0, "    _ MANUAL _  ");
  4726     00F6  0020               	movlb	0	; select bank0
  4727     00F7  01A3               	clrf	LcdPrintStringS@y
  4728     00F8  3033               	movlw	low (STR_2| (0+32768))
  4729     00F9  00A4               	movwf	LcdPrintStringS@string
  4730     00FA  3090               	movlw	high (STR_2| (0+32768))
  4731     00FB  00A5               	movwf	LcdPrintStringS@string+1
  4732     00FC  3001               	movlw	1
  4733     00FD  3187  27D6  3180   	fcall	_LcdPrintStringS
  4734     0100                     l3471:
  4735                           
  4736                           ;fsm.c: 57:                 MTR_Set(0);
  4737     0100  3000               	movlw	0
  4738     0101  318C  2410  3180   	fcall	_MTR_Set
  4739     0104  2867               	goto	l3437
  4740     0105                     l3475:
  4741     0105  3001               	movlw	1
  4742     0106  318C  2433  3180   	fcall	_BTN_IsPressed_s
  4743     0109  3A00               	xorlw	0
  4744     010A  1903               	skipnz
  4745     010B  290D               	goto	u3071
  4746     010C  290E               	goto	u3070
  4747     010D                     u3071:
  4748     010D  2931               	goto	l3483
  4749     010E                     u3070:
  4750     010E                     l3477:
  4751                           
  4752                           ;fsm.c: 61:                 LcdPrintStringS(0, 0, "               s");
  4753     010E  0020               	movlb	0	; select bank0
  4754     010F  01A3               	clrf	LcdPrintStringS@y
  4755     0110  3088               	movlw	low (STR_9| (0+32768))
  4756     0111  00A4               	movwf	LcdPrintStringS@string
  4757     0112  3090               	movlw	high (STR_9| (0+32768))
  4758     0113  00A5               	movwf	LcdPrintStringS@string+1
  4759     0114  3000               	movlw	0
  4760     0115  3187  27D6  3180   	fcall	_LcdPrintStringS
  4761                           
  4762                           ;fsm.c: 62:                 LcdPrintStringS(1, 0, "[+]   [OK]   [-]");
  4763     0118  0020               	movlb	0	; select bank0
  4764     0119  01A3               	clrf	LcdPrintStringS@y
  4765     011A  3055               	movlw	low (STR_10| (0+32768))
  4766     011B  00A4               	movwf	LcdPrintStringS@string
  4767     011C  3090               	movlw	high (STR_10| (0+32768))
  4768     011D  00A5               	movwf	LcdPrintStringS@string+1
  4769     011E  3001               	movlw	1
  4770     011F  3187  27D6  3180   	fcall	_LcdPrintStringS
  4771     0122                     l3479:
  4772                           
  4773                           ;fsm.c: 65:                 LcdPrintFloatS(0, 8, _timeAuto);
  4774     0122  3008               	movlw	8
  4775     0123  0020               	movlb	0	; select bank0
  4776     0124  00AC               	movwf	LcdPrintFloatS@y
  4777     0125  0879               	movf	__timeAuto+1,w
  4778     0126  00AE               	movwf	LcdPrintFloatS@num+1
  4779     0127  0878               	movf	__timeAuto,w
  4780     0128  00AD               	movwf	LcdPrintFloatS@num
  4781     0129  3000               	movlw	0
  4782     012A  3185  2531  3180   	fcall	_LcdPrintFloatS
  4783     012D                     l3481:
  4784                           
  4785                           ;fsm.c: 67:                 mode = ADJUST_TIME;
  4786     012D  3003               	movlw	3
  4787     012E  0020               	movlb	0	; select bank0
  4788     012F  00E9               	movwf	_mode
  4789                           
  4790                           ;fsm.c: 68:             }
  4791     0130  2B4A               	goto	l156
  4792     0131                     l3483:
  4793     0131  3002               	movlw	2
  4794     0132  318C  2433  3180   	fcall	_BTN_IsPressed_s
  4795     0135  3A00               	xorlw	0
  4796     0136  1903               	skipnz
  4797     0137  2939               	goto	u3081
  4798     0138  293A               	goto	u3080
  4799     0139                     u3081:
  4800     0139  28B8               	goto	l103
  4801     013A                     u3080:
  4802     013A                     l3485:
  4803     013A  3000               	movlw	0
  4804     013B  318C  2433  3180   	fcall	_BTN_IsPressed_s
  4805     013E  3A00               	xorlw	0
  4806     013F  1903               	skipnz
  4807     0140  2942               	goto	u3091
  4808     0141  2943               	goto	u3090
  4809     0142                     u3091:
  4810     0142  28B8               	goto	l103
  4811     0143                     u3090:
  4812     0143                     l3487:
  4813                           
  4814                           ;fsm.c: 70:                 LcdPrintStringS(0, 0, " Delete All ?   ");
  4815     0143  0020               	movlb	0	; select bank0
  4816     0144  01A3               	clrf	LcdPrintStringS@y
  4817     0145  3022               	movlw	low (STR_11| (0+32768))
  4818     0146  00A4               	movwf	LcdPrintStringS@string
  4819     0147  3090               	movlw	high (STR_11| (0+32768))
  4820     0148  00A5               	movwf	LcdPrintStringS@string+1
  4821     0149  3000               	movlw	0
  4822     014A  3187  27D6  3180   	fcall	_LcdPrintStringS
  4823                           
  4824                           ;fsm.c: 71:                 LcdPrintStringS(1, 0, "[N]   [OK]   [N]");
  4825     014D  0020               	movlb	0	; select bank0
  4826     014E  01A3               	clrf	LcdPrintStringS@y
  4827     014F  3066               	movlw	low (STR_12| (0+32768))
  4828     0150  00A4               	movwf	LcdPrintStringS@string
  4829     0151  3090               	movlw	high (STR_12| (0+32768))
  4830     0152  00A5               	movwf	LcdPrintStringS@string+1
  4831     0153  3001               	movlw	1
  4832     0154  3187  27D6  3180   	fcall	_LcdPrintStringS
  4833     0157                     l3489:
  4834                           
  4835                           ;fsm.c: 74:                 mode = DELETE_ALL;
  4836     0157  3007               	movlw	7
  4837     0158  0020               	movlb	0	; select bank0
  4838     0159  00E9               	movwf	_mode
  4839     015A  2B4A               	goto	l156
  4840     015B                     l3491:
  4841                           
  4842                           ;fsm.c: 78:             if(BTN_IsHeld(0)) {
  4843     015B  3000               	movlw	0
  4844     015C  318C  24BD  3180   	fcall	_BTN_IsHeld
  4845     015F  3A00               	xorlw	0
  4846     0160  1903               	skipnz
  4847     0161  2963               	goto	u3101
  4848     0162  2964               	goto	u3100
  4849     0163                     u3101:
  4850     0163  2969               	goto	l3497
  4851     0164                     u3100:
  4852     0164                     l3493:
  4853                           
  4854                           ;fsm.c: 79:                 flagPressAdjust = 0;
  4855     0164  01F6               	clrf	_flagPressAdjust
  4856     0165                     l3495:
  4857                           
  4858                           ;fsm.c: 80:                 mode = INCREASE;
  4859     0165  3004               	movlw	4
  4860     0166  0020               	movlb	0	; select bank0
  4861     0167  00E9               	movwf	_mode
  4862                           
  4863                           ;fsm.c: 81:             }
  4864     0168  2B4A               	goto	l156
  4865     0169                     l3497:
  4866     0169  3002               	movlw	2
  4867     016A  318C  24BD  3180   	fcall	_BTN_IsHeld
  4868     016D  3A00               	xorlw	0
  4869     016E  1903               	skipnz
  4870     016F  2971               	goto	u3111
  4871     0170  2972               	goto	u3110
  4872     0171                     u3111:
  4873     0171  2977               	goto	l3503
  4874     0172                     u3110:
  4875     0172                     l3499:
  4876                           
  4877                           ;fsm.c: 83:                 flagPressAdjust = 0;
  4878     0172  01F6               	clrf	_flagPressAdjust
  4879     0173                     l3501:
  4880                           
  4881                           ;fsm.c: 84:                 mode = DECREASE;
  4882     0173  3005               	movlw	5
  4883     0174  0020               	movlb	0	; select bank0
  4884     0175  00E9               	movwf	_mode
  4885                           
  4886                           ;fsm.c: 85:             }
  4887     0176  2B4A               	goto	l156
  4888     0177                     l3503:
  4889     0177  3001               	movlw	1
  4890     0178  318C  247A  3180   	fcall	_BTN_IsPressed
  4891     017B  3A00               	xorlw	0
  4892     017C  1903               	skipnz
  4893     017D  297F               	goto	u3121
  4894     017E  2980               	goto	u3120
  4895     017F                     u3121:
  4896     017F  2B4A               	goto	l156
  4897     0180                     u3120:
  4898     0180                     l3505:
  4899                           
  4900                           ;fsm.c: 89:                 EEP_SaveAutoTime();
  4901     0180  318C  2426  3180   	fcall	_EEP_SaveAutoTime
  4902     0183                     l3507:
  4903                           
  4904                           ;fsm.c: 91:                 LcdPrintStringS(0, 0, "AUTO :         s");
  4905     0183  0020               	movlb	0	; select bank0
  4906     0184  01A3               	clrf	LcdPrintStringS@y
  4907     0185  3099               	movlw	low (STR_3| (0+32768))
  4908     0186  00A4               	movwf	LcdPrintStringS@string
  4909     0187  3090               	movlw	high (STR_3| (0+32768))
  4910     0188  00A5               	movwf	LcdPrintStringS@string+1
  4911     0189  3000               	movlw	0
  4912     018A  3187  27D6  3180   	fcall	_LcdPrintStringS
  4913     018D                     l3509:
  4914                           
  4915                           ;fsm.c: 92:                 LcdPrintStringS(1, 0, "CUP  :          ");
  4916     018D  0020               	movlb	0	; select bank0
  4917     018E  01A3               	clrf	LcdPrintStringS@y
  4918     018F  3000               	movlw	low (STR_4| (0+32768))
  4919     0190  00A4               	movwf	LcdPrintStringS@string
  4920     0191  3090               	movlw	high (STR_4| (0+32768))
  4921     0192  00A5               	movwf	LcdPrintStringS@string+1
  4922     0193  3001               	movlw	1
  4923     0194  3187  27D6  3180   	fcall	_LcdPrintStringS
  4924     0197                     l3511:
  4925                           
  4926                           ;fsm.c: 95:                 LcdPrintFloatS(0, 8, _timeAuto);
  4927     0197  3008               	movlw	8
  4928     0198  0020               	movlb	0	; select bank0
  4929     0199  00AC               	movwf	LcdPrintFloatS@y
  4930     019A  0879               	movf	__timeAuto+1,w
  4931     019B  00AE               	movwf	LcdPrintFloatS@num+1
  4932     019C  0878               	movf	__timeAuto,w
  4933     019D  00AD               	movwf	LcdPrintFloatS@num
  4934     019E  3000               	movlw	0
  4935     019F  3185  2531  3180   	fcall	_LcdPrintFloatS
  4936     01A2                     l3513:
  4937                           
  4938                           ;fsm.c: 96:                 LcdPrintNumS(1, 8, _cupTotal);
  4939     01A2  3008               	movlw	8
  4940     01A3  0020               	movlb	0	; select bank0
  4941     01A4  00C2               	movwf	LcdPrintNumS@y
  4942     01A5  0867               	movf	__cupTotal+1,w
  4943     01A6  00C4               	movwf	LcdPrintNumS@num+1
  4944     01A7  0866               	movf	__cupTotal,w
  4945     01A8  00C3               	movwf	LcdPrintNumS@num
  4946     01A9  3001               	movlw	1
  4947     01AA  3183  23FB  3180   	fcall	_LcdPrintNumS
  4948                           
  4949                           ;fsm.c: 97:                 MTR_Set(0);
  4950     01AD  3000               	movlw	0
  4951     01AE  318C  2410  3180   	fcall	_MTR_Set
  4952     01B1  28B4               	goto	l3455
  4953     01B2                     l3517:
  4954                           
  4955                           ;fsm.c: 103:             if(BTN_IsPressed_ms(0, 500) && _counterDelay <= 0){
  4956     01B2  30F4               	movlw	244
  4957     01B3  0020               	movlb	0	; select bank0
  4958     01B4  00AC               	movwf	BTN_IsPressed_ms@milisec
  4959     01B5  3001               	movlw	1
  4960     01B6  00AD               	movwf	BTN_IsPressed_ms@milisec+1
  4961     01B7  3000               	movlw	0
  4962     01B8  318E  260A  3180   	fcall	_BTN_IsPressed_ms
  4963     01BB  3A00               	xorlw	0
  4964     01BC  1903               	skipnz
  4965     01BD  29BF               	goto	u3131
  4966     01BE  29C0               	goto	u3130
  4967     01BF                     u3131:
  4968     01BF  29F0               	goto	l3533
  4969     01C0                     u3130:
  4970     01C0                     l3519:
  4971     01C0  0877               	movf	__counterDelay,w
  4972     01C1  1D03               	btfss	3,2
  4973     01C2  29C4               	goto	u3141
  4974     01C3  29C5               	goto	u3140
  4975     01C4                     u3141:
  4976     01C4  29F0               	goto	l3533
  4977     01C5                     u3140:
  4978     01C5                     l3521:
  4979                           
  4980                           ;fsm.c: 105:                 _counterDelay = 6;
  4981     01C5  3006               	movlw	6
  4982     01C6  00F7               	movwf	__counterDelay
  4983     01C7                     l3523:
  4984                           
  4985                           ;fsm.c: 106:                 _timeAuto = _timeAuto + 100 > 9900 ? 9900 : _timeAuto + 100
      +                          ;
  4986     01C7  0878               	movf	__timeAuto,w
  4987     01C8  3E64               	addlw	100
  4988     01C9  0021               	movlb	1	; select bank1
  4989     01CA  00CC               	movwf	??_FSM_ModeControl^(0+128)
  4990     01CB  3000               	movlw	0
  4991     01CC  3D79               	addwfc	__timeAuto+1,w
  4992     01CD  00CD               	movwf	(??_FSM_ModeControl+1)^(0+128)
  4993     01CE  3026               	movlw	38
  4994     01CF  024D               	subwf	(??_FSM_ModeControl+1)^(0+128),w
  4995     01D0  30AD               	movlw	173
  4996     01D1  1903               	skipnz
  4997     01D2  024C               	subwf	??_FSM_ModeControl^(0+128),w
  4998     01D3  1803               	skipnc
  4999     01D4  29D6               	goto	u3151
  5000     01D5  29D7               	goto	u3150
  5001     01D6                     u3151:
  5002     01D6  29DE               	goto	l3527
  5003     01D7                     u3150:
  5004     01D7                     l3525:
  5005     01D7  0878               	movf	__timeAuto,w
  5006     01D8  3E64               	addlw	100
  5007     01D9  00F8               	movwf	__timeAuto
  5008     01DA  3000               	movlw	0
  5009     01DB  3D79               	addwfc	__timeAuto+1,w
  5010     01DC  00F9               	movwf	__timeAuto+1
  5011     01DD  29E2               	goto	l3529
  5012     01DE                     l3527:
  5013     01DE  30AC               	movlw	172
  5014     01DF  00F8               	movwf	__timeAuto
  5015     01E0  3026               	movlw	38
  5016     01E1  00F9               	movwf	__timeAuto+1
  5017     01E2                     l3529:
  5018                           
  5019                           ;fsm.c: 107:                 LcdPrintFloatS(0, 8, _timeAuto);
  5020     01E2  3008               	movlw	8
  5021     01E3  0020               	movlb	0	; select bank0
  5022     01E4  00AC               	movwf	LcdPrintFloatS@y
  5023     01E5  0879               	movf	__timeAuto+1,w
  5024     01E6  00AE               	movwf	LcdPrintFloatS@num+1
  5025     01E7  0878               	movf	__timeAuto,w
  5026     01E8  00AD               	movwf	LcdPrintFloatS@num
  5027     01E9  3000               	movlw	0
  5028     01EA  3185  2531  3180   	fcall	_LcdPrintFloatS
  5029     01ED                     l3531:
  5030                           
  5031                           ;fsm.c: 108:                 flagPressAdjust = 1;
  5032     01ED  01F6               	clrf	_flagPressAdjust
  5033     01EE  0AF6               	incf	_flagPressAdjust,f
  5034                           
  5035                           ;fsm.c: 109:             }
  5036     01EF  2B4A               	goto	l156
  5037     01F0                     l3533:
  5038     01F0  3000               	movlw	0
  5039     01F1  318C  24BD  3180   	fcall	_BTN_IsHeld
  5040     01F4  3A00               	xorlw	0
  5041     01F5  1D03               	skipz
  5042     01F6  29F8               	goto	u3161
  5043     01F7  29F9               	goto	u3160
  5044     01F8                     u3161:
  5045     01F8  2B4A               	goto	l156
  5046     01F9                     u3160:
  5047     01F9                     l3535:
  5048                           
  5049                           ;fsm.c: 111:                 if(flagPressAdjust == 0){
  5050     01F9  0876               	movf	_flagPressAdjust,w
  5051     01FA  1D03               	btfss	3,2
  5052     01FB  29FD               	goto	u3171
  5053     01FC  29FE               	goto	u3170
  5054     01FD                     u3171:
  5055     01FD  2A19               	goto	l3543
  5056     01FE                     u3170:
  5057     01FE                     l3537:
  5058                           
  5059                           ;fsm.c: 112:                 _timeAuto = _timeAuto + 10 > 9900 ? 9900 : _timeAuto + 10;
  5060     01FE  0878               	movf	__timeAuto,w
  5061     01FF  3E0A               	addlw	10
  5062     0200  0021               	movlb	1	; select bank1
  5063     0201  00CC               	movwf	??_FSM_ModeControl^(0+128)
  5064     0202  3000               	movlw	0
  5065     0203  3D79               	addwfc	__timeAuto+1,w
  5066     0204  00CD               	movwf	(??_FSM_ModeControl+1)^(0+128)
  5067     0205  3026               	movlw	38
  5068     0206  024D               	subwf	(??_FSM_ModeControl+1)^(0+128),w
  5069     0207  30AD               	movlw	173
  5070     0208  1903               	skipnz
  5071     0209  024C               	subwf	??_FSM_ModeControl^(0+128),w
  5072     020A  1803               	skipnc
  5073     020B  2A0D               	goto	u3181
  5074     020C  2A0E               	goto	u3180
  5075     020D                     u3181:
  5076     020D  2A15               	goto	l3541
  5077     020E                     u3180:
  5078     020E                     l3539:
  5079     020E  0878               	movf	__timeAuto,w
  5080     020F  3E0A               	addlw	10
  5081     0210  00F8               	movwf	__timeAuto
  5082     0211  3000               	movlw	0
  5083     0212  3D79               	addwfc	__timeAuto+1,w
  5084     0213  00F9               	movwf	__timeAuto+1
  5085     0214  2A19               	goto	l3543
  5086     0215                     l3541:
  5087     0215  30AC               	movlw	172
  5088     0216  00F8               	movwf	__timeAuto
  5089     0217  3026               	movlw	38
  5090     0218  00F9               	movwf	__timeAuto+1
  5091     0219                     l3543:
  5092                           
  5093                           ;fsm.c: 114:                 LcdPrintFloatS(0, 8, _timeAuto);
  5094     0219  3008               	movlw	8
  5095     021A  0020               	movlb	0	; select bank0
  5096     021B  00AC               	movwf	LcdPrintFloatS@y
  5097     021C  0879               	movf	__timeAuto+1,w
  5098     021D  00AE               	movwf	LcdPrintFloatS@num+1
  5099     021E  0878               	movf	__timeAuto,w
  5100     021F  00AD               	movwf	LcdPrintFloatS@num
  5101     0220  3000               	movlw	0
  5102     0221  3185  2531  3180   	fcall	_LcdPrintFloatS
  5103     0224  292D               	goto	l3481
  5104     0225                     l3547:
  5105                           
  5106                           ;fsm.c: 119:             if(BTN_IsPressed_ms(2, 500) && _counterDelay <= 0){
  5107     0225  30F4               	movlw	244
  5108     0226  0020               	movlb	0	; select bank0
  5109     0227  00AC               	movwf	BTN_IsPressed_ms@milisec
  5110     0228  3001               	movlw	1
  5111     0229  00AD               	movwf	BTN_IsPressed_ms@milisec+1
  5112     022A  3002               	movlw	2
  5113     022B  318E  260A  3180   	fcall	_BTN_IsPressed_ms
  5114     022E  3A00               	xorlw	0
  5115     022F  1903               	skipnz
  5116     0230  2A32               	goto	u3191
  5117     0231  2A33               	goto	u3190
  5118     0232                     u3191:
  5119     0232  2A58               	goto	l3561
  5120     0233                     u3190:
  5121     0233                     l3549:
  5122     0233  0877               	movf	__counterDelay,w
  5123     0234  1D03               	btfss	3,2
  5124     0235  2A37               	goto	u3201
  5125     0236  2A38               	goto	u3200
  5126     0237                     u3201:
  5127     0237  2A58               	goto	l3561
  5128     0238                     u3200:
  5129     0238                     l3551:
  5130                           
  5131                           ;fsm.c: 121:                 _counterDelay = 6;
  5132     0238  3006               	movlw	6
  5133     0239  00F7               	movwf	__counterDelay
  5134                           
  5135                           ;fsm.c: 122:                 _timeAuto = _timeAuto >= 100 ? _timeAuto - 100 : 0;
  5136     023A  3000               	movlw	0
  5137     023B  0279               	subwf	__timeAuto+1,w
  5138     023C  3064               	movlw	100
  5139     023D  1903               	skipnz
  5140     023E  0278               	subwf	__timeAuto,w
  5141     023F  1803               	skipnc
  5142     0240  2A42               	goto	u3211
  5143     0241  2A43               	goto	u3210
  5144     0242                     u3211:
  5145     0242  2A46               	goto	l3555
  5146     0243                     u3210:
  5147     0243                     l3553:
  5148     0243  01F8               	clrf	__timeAuto
  5149     0244  01F9               	clrf	__timeAuto+1
  5150     0245  2A4C               	goto	l3557
  5151     0246                     l3555:
  5152     0246  0878               	movf	__timeAuto,w
  5153     0247  3E9C               	addlw	156
  5154     0248  00F8               	movwf	__timeAuto
  5155     0249  30FF               	movlw	255
  5156     024A  3D79               	addwfc	__timeAuto+1,w
  5157     024B  00F9               	movwf	__timeAuto+1
  5158     024C                     l3557:
  5159                           
  5160                           ;fsm.c: 123:                 LcdPrintFloatS(0, 8, _timeAuto);
  5161     024C  3008               	movlw	8
  5162     024D  0020               	movlb	0	; select bank0
  5163     024E  00AC               	movwf	LcdPrintFloatS@y
  5164     024F  0879               	movf	__timeAuto+1,w
  5165     0250  00AE               	movwf	LcdPrintFloatS@num+1
  5166     0251  0878               	movf	__timeAuto,w
  5167     0252  00AD               	movwf	LcdPrintFloatS@num
  5168     0253  3000               	movlw	0
  5169     0254  3185  2531  3180   	fcall	_LcdPrintFloatS
  5170     0257  29ED               	goto	l3531
  5171     0258                     l3561:
  5172     0258  3002               	movlw	2
  5173     0259  318C  24BD  3180   	fcall	_BTN_IsHeld
  5174     025C  3A00               	xorlw	0
  5175     025D  1D03               	skipz
  5176     025E  2A60               	goto	u3221
  5177     025F  2A61               	goto	u3220
  5178     0260                     u3221:
  5179     0260  2B4A               	goto	l156
  5180     0261                     u3220:
  5181     0261                     l3563:
  5182                           
  5183                           ;fsm.c: 127:                 if(flagPressAdjust == 0){
  5184     0261  0876               	movf	_flagPressAdjust,w
  5185     0262  1D03               	btfss	3,2
  5186     0263  2A65               	goto	u3231
  5187     0264  2A66               	goto	u3230
  5188     0265                     u3231:
  5189     0265  2A78               	goto	l3571
  5190     0266                     u3230:
  5191     0266                     l3565:
  5192                           
  5193                           ;fsm.c: 128:                     _timeAuto = _timeAuto >= 10 ? _timeAuto - 10 : 0;
  5194     0266  3000               	movlw	0
  5195     0267  0279               	subwf	__timeAuto+1,w
  5196     0268  300A               	movlw	10
  5197     0269  1903               	skipnz
  5198     026A  0278               	subwf	__timeAuto,w
  5199     026B  1803               	skipnc
  5200     026C  2A6E               	goto	u3241
  5201     026D  2A6F               	goto	u3240
  5202     026E                     u3241:
  5203     026E  2A72               	goto	l3569
  5204     026F                     u3240:
  5205     026F                     l3567:
  5206     026F  01F8               	clrf	__timeAuto
  5207     0270  01F9               	clrf	__timeAuto+1
  5208     0271  2A78               	goto	l3571
  5209     0272                     l3569:
  5210     0272  0878               	movf	__timeAuto,w
  5211     0273  3EF6               	addlw	246
  5212     0274  00F8               	movwf	__timeAuto
  5213     0275  30FF               	movlw	255
  5214     0276  3D79               	addwfc	__timeAuto+1,w
  5215     0277  00F9               	movwf	__timeAuto+1
  5216     0278                     l3571:
  5217                           
  5218                           ;fsm.c: 130:                 LcdPrintFloatS(0, 8, _timeAuto);
  5219     0278  3008               	movlw	8
  5220     0279  0020               	movlb	0	; select bank0
  5221     027A  00AC               	movwf	LcdPrintFloatS@y
  5222     027B  0879               	movf	__timeAuto+1,w
  5223     027C  00AE               	movwf	LcdPrintFloatS@num+1
  5224     027D  0878               	movf	__timeAuto,w
  5225     027E  00AD               	movwf	LcdPrintFloatS@num
  5226     027F  3000               	movlw	0
  5227     0280  3185  2531  3180   	fcall	_LcdPrintFloatS
  5228     0283  292D               	goto	l3481
  5229     0284                     l3575:
  5230                           
  5231                           ;fsm.c: 136:             index_lcd = (_timeAuto - _countAuto) * 12 / _timeAuto + 2;
  5232     0284  0879               	movf	__timeAuto+1,w
  5233     0285  0020               	movlb	0	; select bank0
  5234     0286  00A5               	movwf	___lwdiv@divisor+1
  5235     0287  0878               	movf	__timeAuto,w
  5236     0288  00A4               	movwf	___lwdiv@divisor
  5237     0289  0864               	movf	__countAuto,w
  5238     028A  0278               	subwf	__timeAuto,w
  5239     028B  00A0               	movwf	___wmul@multiplier
  5240     028C  0865               	movf	__countAuto+1,w
  5241     028D  3B79               	subwfb	__timeAuto+1,w
  5242     028E  00A1               	movwf	___wmul@multiplier+1
  5243     028F  300C               	movlw	12
  5244     0290  00A2               	movwf	___wmul@multiplicand
  5245     0291  3000               	movlw	0
  5246     0292  00A3               	movwf	___wmul@multiplicand+1
  5247     0293  318D  255A  3180   	fcall	___wmul
  5248     0296  0020               	movlb	0	; select bank0
  5249     0297  0821               	movf	?___wmul+1,w
  5250     0298  00A7               	movwf	___lwdiv@dividend+1
  5251     0299  0820               	movf	?___wmul,w
  5252     029A  00A6               	movwf	___lwdiv@dividend
  5253     029B  3187  2799  3180   	fcall	___lwdiv
  5254     029E  0020               	movlb	0	; select bank0
  5255     029F  0824               	movf	?___lwdiv,w
  5256     02A0  3E02               	addlw	2
  5257     02A1  00EA               	movwf	_index_lcd
  5258     02A2                     l3577:
  5259                           
  5260                           ;fsm.c: 137:             LcdPrintCharS(0, index_lcd, 0xFF);
  5261     02A2  086A               	movf	_index_lcd,w
  5262     02A3  00F4               	movwf	LcdPrintCharS@y
  5263     02A4  30FF               	movlw	255
  5264     02A5  00F5               	movwf	LcdPrintCharS@c
  5265     02A6  3000               	movlw	0
  5266     02A7  318D  25BE  3180   	fcall	_LcdPrintCharS
  5267     02AA                     l3579:
  5268                           
  5269                           ;fsm.c: 139:             if(_countAuto == 0) {
  5270     02AA  0020               	movlb	0	; select bank0
  5271     02AB  0864               	movf	__countAuto,w
  5272     02AC  0465               	iorwf	__countAuto+1,w
  5273     02AD  1D03               	btfss	3,2
  5274     02AE  2AB0               	goto	u3251
  5275     02AF  2AB1               	goto	u3250
  5276     02B0                     u3251:
  5277     02B0  2AB8               	goto	l3585
  5278     02B1                     u3250:
  5279     02B1                     l3581:
  5280                           
  5281                           ;fsm.c: 140:                 _cupTotal++;
  5282     02B1  3001               	movlw	1
  5283     02B2  07E6               	addwf	__cupTotal,f
  5284     02B3  3000               	movlw	0
  5285     02B4  3DE7               	addwfc	__cupTotal+1,f
  5286     02B5                     l3583:
  5287                           
  5288                           ;fsm.c: 142:                 EEP_SaveCupTotal();
  5289     02B5  318C  2442  3180   	fcall	_EEP_SaveCupTotal
  5290     02B8                     l3585:
  5291                           
  5292                           ;fsm.c: 145:             if(_countAuto < 5 || BTN_IsPressed(1)){
  5293     02B8  3000               	movlw	0
  5294     02B9  0020               	movlb	0	; select bank0
  5295     02BA  0265               	subwf	__countAuto+1,w
  5296     02BB  3005               	movlw	5
  5297     02BC  1903               	skipnz
  5298     02BD  0264               	subwf	__countAuto,w
  5299     02BE  1C03               	skipc
  5300     02BF  2AC1               	goto	u3261
  5301     02C0  2AC2               	goto	u3260
  5302     02C1                     u3261:
  5303     02C1  2ACB               	goto	l3589
  5304     02C2                     u3260:
  5305     02C2                     l3587:
  5306     02C2  3001               	movlw	1
  5307     02C3  318C  247A  3180   	fcall	_BTN_IsPressed
  5308     02C6  3A00               	xorlw	0
  5309     02C7  1903               	skipnz
  5310     02C8  2ACA               	goto	u3271
  5311     02C9  2ACB               	goto	u3270
  5312     02CA                     u3271:
  5313     02CA  2B4A               	goto	l156
  5314     02CB                     u3270:
  5315     02CB                     l3589:
  5316                           
  5317                           ;fsm.c: 146:                 LcdPrintStringS(0, 0, "AUTO :         s");
  5318     02CB  0020               	movlb	0	; select bank0
  5319     02CC  01A3               	clrf	LcdPrintStringS@y
  5320     02CD  3099               	movlw	low (STR_3| (0+32768))
  5321     02CE  00A4               	movwf	LcdPrintStringS@string
  5322     02CF  3090               	movlw	high (STR_3| (0+32768))
  5323     02D0  00A5               	movwf	LcdPrintStringS@string+1
  5324     02D1  3000               	movlw	0
  5325     02D2  3187  27D6  3180   	fcall	_LcdPrintStringS
  5326                           
  5327                           ;fsm.c: 147:                 LcdPrintStringS(1, 0, "CUP  :          ");
  5328     02D5  0020               	movlb	0	; select bank0
  5329     02D6  01A3               	clrf	LcdPrintStringS@y
  5330     02D7  3000               	movlw	low (STR_4| (0+32768))
  5331     02D8  00A4               	movwf	LcdPrintStringS@string
  5332     02D9  3090               	movlw	high (STR_4| (0+32768))
  5333     02DA  00A5               	movwf	LcdPrintStringS@string+1
  5334     02DB  3001               	movlw	1
  5335     02DC  3187  27D6  3180   	fcall	_LcdPrintStringS
  5336     02DF                     l3591:
  5337                           
  5338                           ;fsm.c: 150:                 LcdPrintFloatS(0, 8, _timeAuto);
  5339     02DF  3008               	movlw	8
  5340     02E0  0020               	movlb	0	; select bank0
  5341     02E1  00AC               	movwf	LcdPrintFloatS@y
  5342     02E2  0879               	movf	__timeAuto+1,w
  5343     02E3  00AE               	movwf	LcdPrintFloatS@num+1
  5344     02E4  0878               	movf	__timeAuto,w
  5345     02E5  00AD               	movwf	LcdPrintFloatS@num
  5346     02E6  3000               	movlw	0
  5347     02E7  3185  2531  3180   	fcall	_LcdPrintFloatS
  5348     02EA                     l3593:
  5349                           
  5350                           ;fsm.c: 151:                 LcdPrintNumS(1, 8, _cupTotal);
  5351     02EA  3008               	movlw	8
  5352     02EB  0020               	movlb	0	; select bank0
  5353     02EC  00C2               	movwf	LcdPrintNumS@y
  5354     02ED  0867               	movf	__cupTotal+1,w
  5355     02EE  00C4               	movwf	LcdPrintNumS@num+1
  5356     02EF  0866               	movf	__cupTotal,w
  5357     02F0  00C3               	movwf	LcdPrintNumS@num
  5358     02F1  3001               	movlw	1
  5359     02F2  3183  23FB  3180   	fcall	_LcdPrintNumS
  5360     02F5                     l3595:
  5361                           
  5362                           ;fsm.c: 152:                 MTR_Set(0);
  5363     02F5  3000               	movlw	0
  5364     02F6  318C  2410  3180   	fcall	_MTR_Set
  5365     02F9  28B4               	goto	l3455
  5366     02FA                     l3599:
  5367                           
  5368                           ;fsm.c: 158:             if(BTN_IsPressed(2) || BTN_IsPressed(0)){
  5369     02FA  3002               	movlw	2
  5370     02FB  318C  247A  3180   	fcall	_BTN_IsPressed
  5371     02FE  3A00               	xorlw	0
  5372     02FF  1D03               	skipz
  5373     0300  2B02               	goto	u3281
  5374     0301  2B03               	goto	u3280
  5375     0302                     u3281:
  5376     0302  2B0C               	goto	l3603
  5377     0303                     u3280:
  5378     0303                     l3601:
  5379     0303  3000               	movlw	0
  5380     0304  318C  247A  3180   	fcall	_BTN_IsPressed
  5381     0307  3A00               	xorlw	0
  5382     0308  1903               	skipnz
  5383     0309  2B0B               	goto	u3291
  5384     030A  2B0C               	goto	u3290
  5385     030B                     u3291:
  5386     030B  2B0F               	goto	l3605
  5387     030C                     u3290:
  5388     030C                     l3603:
  5389                           
  5390                           ;fsm.c: 159:                 mode = INIT;
  5391     030C  0020               	movlb	0	; select bank0
  5392     030D  01E9               	clrf	_mode
  5393                           
  5394                           ;fsm.c: 160:             }
  5395     030E  2B4A               	goto	l156
  5396     030F                     l3605:
  5397     030F  3001               	movlw	1
  5398     0310  318C  247A  3180   	fcall	_BTN_IsPressed
  5399     0313  3A00               	xorlw	0
  5400     0314  1903               	skipnz
  5401     0315  2B17               	goto	u3301
  5402     0316  2B18               	goto	u3300
  5403     0317                     u3301:
  5404     0317  2B4A               	goto	l156
  5405     0318                     u3300:
  5406     0318                     l3607:
  5407                           
  5408                           ;fsm.c: 162:                 _timeAuto = _cupTotal = 0;
  5409     0318  0020               	movlb	0	; select bank0
  5410     0319  01E6               	clrf	__cupTotal
  5411     031A  01E7               	clrf	__cupTotal+1
  5412     031B  01F8               	clrf	__timeAuto
  5413     031C  01F9               	clrf	__timeAuto+1
  5414     031D                     l3609:
  5415                           
  5416                           ;fsm.c: 165:                 EEP_SaveAutoTime();
  5417     031D  318C  2426  3180   	fcall	_EEP_SaveAutoTime
  5418     0320                     l3611:
  5419                           
  5420                           ;fsm.c: 166:                 EEP_SaveCupTotal();
  5421     0320  318C  2442  3180   	fcall	_EEP_SaveCupTotal
  5422                           
  5423                           ;fsm.c: 168:                 mode = INIT;
  5424     0323  0020               	movlb	0	; select bank0
  5425     0324  01E9               	clrf	_mode
  5426     0325  2B4A               	goto	l156
  5427     0326                     l3617:
  5428     0326  0020               	movlb	0	; select bank0
  5429     0327  0869               	movf	_mode,w
  5430     0328  0021               	movlb	1	; select bank1
  5431     0329  00CC               	movwf	??_FSM_ModeControl^(0+128)
  5432     032A  01CD               	clrf	(??_FSM_ModeControl^(0+128)+1)
  5433                           
  5434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5435                           ; Switch size 1, requested type "simple"
  5436                           ; Number of cases is 1, Range of values is 0 to 0
  5437                           ; switch strategies available:
  5438                           ; Name         Instructions Cycles
  5439                           ; simple_byte            4     3 (average)
  5440                           ; direct_byte            8     6 (fixed)
  5441                           ; jumptable            260     6 (fixed)
  5442                           ;	Chosen strategy is simple_byte
  5443     032B  084D               	movf	(??_FSM_ModeControl+1)^(0+128),w
  5444     032C  3A00               	xorlw	0	; case 0
  5445     032D  1903               	skipnz
  5446     032E  2B30               	goto	l3791
  5447     032F  2B0C               	goto	l3603
  5448     0330                     l3791:
  5449                           
  5450                           ; Switch size 1, requested type "simple"
  5451                           ; Number of cases is 8, Range of values is 0 to 7
  5452                           ; switch strategies available:
  5453                           ; Name         Instructions Cycles
  5454                           ; direct_byte           22     6 (fixed)
  5455                           ; simple_byte           25    13 (average)
  5456                           ; jumptable            260     6 (fixed)
  5457                           ;	Chosen strategy is simple_byte
  5458     0330  084C               	movf	??_FSM_ModeControl^(0+128),w
  5459     0331  3A00               	xorlw	0	; case 0
  5460     0332  1903               	skipnz
  5461     0333  284F               	goto	l3433
  5462     0334  3A01               	xorlw	1	; case 1
  5463     0335  1903               	skipnz
  5464     0336  286B               	goto	l3439
  5465     0337  3A03               	xorlw	3	; case 2
  5466     0338  1903               	skipnz
  5467     0339  28B9               	goto	l3457
  5468     033A  3A01               	xorlw	1	; case 3
  5469     033B  1903               	skipnz
  5470     033C  295B               	goto	l3491
  5471     033D  3A07               	xorlw	7	; case 4
  5472     033E  1903               	skipnz
  5473     033F  29B2               	goto	l3517
  5474     0340  3A01               	xorlw	1	; case 5
  5475     0341  1903               	skipnz
  5476     0342  2A25               	goto	l3547
  5477     0343  3A03               	xorlw	3	; case 6
  5478     0344  1903               	skipnz
  5479     0345  2A84               	goto	l3575
  5480     0346  3A01               	xorlw	1	; case 7
  5481     0347  1903               	skipnz
  5482     0348  2AFA               	goto	l3599
  5483     0349  2B0C               	goto	l3603
  5484     034A                     l156:
  5485     034A  0008               	return
  5486     034B                     __end_of_FSM_ModeControl:
  5487                           
  5488                           	psect	text14
  5489     0D5A                     __ptext14:	
  5490 ;; *************** function ___wmul *****************
  5491 ;; Defined at:
  5492 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5495 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  product         2    4[COMMON] unsigned int 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  2    0[BANK0 ] unsigned int 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;Total ram usage:        6 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; Hardware stack levels required when called: 3
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_FSM_ModeControl
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521     0D5A                     ___wmul:	
  5522                           ;psect for function ___wmul
  5523                           
  5524     0D5A                     l3417:	
  5525                           ;incstack = 0
  5526                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5527                           
  5528     0D5A  01F4               	clrf	___wmul@product
  5529     0D5B  01F5               	clrf	___wmul@product+1
  5530     0D5C                     l3419:
  5531     0D5C  0020               	movlb	0	; select bank0
  5532     0D5D  1C20               	btfss	___wmul@multiplier,0
  5533     0D5E  2D60               	goto	u2991
  5534     0D5F  2D61               	goto	u2990
  5535     0D60                     u2991:
  5536     0D60  2D65               	goto	l643
  5537     0D61                     u2990:
  5538     0D61                     l3421:
  5539     0D61  0822               	movf	___wmul@multiplicand,w
  5540     0D62  07F4               	addwf	___wmul@product,f
  5541     0D63  0823               	movf	___wmul@multiplicand+1,w
  5542     0D64  3DF5               	addwfc	___wmul@product+1,f
  5543     0D65                     l643:
  5544     0D65  3001               	movlw	1
  5545     0D66                     u3005:
  5546     0D66  35A2               	lslf	___wmul@multiplicand,f
  5547     0D67  0DA3               	rlf	___wmul@multiplicand+1,f
  5548     0D68  0B89               	decfsz	9,f
  5549     0D69  2D66               	goto	u3005
  5550     0D6A                     l3423:
  5551     0D6A  3001               	movlw	1
  5552     0D6B                     u3015:
  5553     0D6B  36A1               	lsrf	___wmul@multiplier+1,f
  5554     0D6C  0CA0               	rrf	___wmul@multiplier,f
  5555     0D6D  0B89               	decfsz	9,f
  5556     0D6E  2D6B               	goto	u3015
  5557     0D6F                     l3425:
  5558     0D6F  0820               	movf	___wmul@multiplier,w
  5559     0D70  0421               	iorwf	___wmul@multiplier+1,w
  5560     0D71  1D03               	btfss	3,2
  5561     0D72  2D74               	goto	u3021
  5562     0D73  2D75               	goto	u3020
  5563     0D74                     u3021:
  5564     0D74  2D5C               	goto	l3419
  5565     0D75                     u3020:
  5566     0D75                     l3427:
  5567     0D75  0875               	movf	___wmul@product+1,w
  5568     0D76  00A1               	movwf	?___wmul+1
  5569     0D77  0874               	movf	___wmul@product,w
  5570     0D78  00A0               	movwf	?___wmul
  5571     0D79                     l645:
  5572     0D79  0008               	return
  5573     0D7A                     __end_of___wmul:
  5574                           
  5575                           	psect	text15
  5576     0C10                     __ptext15:	
  5577 ;; *************** function _MTR_Set *****************
  5578 ;; Defined at:
  5579 ;;		line 4 in file "output.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  state           1    wreg     unsigned char 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  state           1    4[COMMON] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;Total ram usage:        1 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 3
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_FSM_ModeControl
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607     0C10                     _MTR_Set:	
  5608                           ;psect for function _MTR_Set
  5609                           
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in _MTR_Set: [wreg+status,2+status,0]
  5613                           ;MTR_Set@state stored from wreg
  5614     0C10  00F4               	movwf	MTR_Set@state
  5615     0C11                     l2439:
  5616                           
  5617                           ;output.c: 5:     PORTAbits.RA5 = state == 0 ? 0 : 1;
  5618     0C11  0874               	movf	MTR_Set@state,w
  5619     0C12  1D03               	btfss	3,2
  5620     0C13  2C15               	goto	u1951
  5621     0C14  2C18               	goto	u1950
  5622     0C15                     u1951:
  5623     0C15  0020               	movlb	0	; select bank0
  5624     0C16  168C               	bsf	12,5	;volatile
  5625     0C17  2C1A               	goto	u1964
  5626     0C18                     u1950:
  5627     0C18  0020               	movlb	0	; select bank0
  5628     0C19  128C               	bcf	12,5	;volatile
  5629     0C1A                     u1964:
  5630     0C1A                     l203:
  5631     0C1A  0008               	return
  5632     0C1B                     __end_of_MTR_Set:
  5633                           
  5634                           	psect	text16
  5635     07D6                     __ptext16:	
  5636 ;; *************** function _LcdPrintStringS *****************
  5637 ;; Defined at:
  5638 ;;		line 211 in file "lcd.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  x               1    wreg     unsigned char 
  5641 ;;  y               1    3[BANK0 ] unsigned char 
  5642 ;;  string          2    4[BANK0 ] PTR const unsigned char 
  5643 ;;		 -> STR_17(17), STR_16(17), STR_15(17), STR_14(17), 
  5644 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
  5645 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
  5646 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
  5647 ;;		 -> STR_1(17), 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  x               1    5[COMMON] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5659 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;Total ram usage:        6 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 4
  5666 ;; This function calls:
  5667 ;;		_lcd_print_charS
  5668 ;; This function is called by:
  5669 ;;		_FSM_ModeControl
  5670 ;;		_main
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674     07D6                     _LcdPrintStringS:	
  5675                           ;psect for function _LcdPrintStringS
  5676                           
  5677                           
  5678                           ;incstack = 0
  5679                           ; Regs used in _LcdPrintStringS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5680                           ;LcdPrintStringS@x stored from wreg
  5681     07D6  00F5               	movwf	LcdPrintStringS@x
  5682     07D7                     l3251:
  5683                           
  5684                           ;lcd.c: 211: void LcdPrintStringS(unsigned char x, unsigned char y, const unsigned char 
      +                          *string);lcd.c: 212: {;lcd.c: 213:     current_row = x%2;
  5685     07D7  0875               	movf	LcdPrintStringS@x,w
  5686     07D8  3901               	andlw	1
  5687     07D9  0020               	movlb	0	; select bank0
  5688     07DA  00A6               	movwf	??_LcdPrintStringS
  5689     07DB  01A7               	clrf	??_LcdPrintStringS+1
  5690     07DC  0826               	movf	??_LcdPrintStringS,w
  5691     07DD  00E0               	movwf	_current_row
  5692     07DE  0827               	movf	??_LcdPrintStringS+1,w
  5693     07DF  00E1               	movwf	_current_row+1
  5694                           
  5695                           ;lcd.c: 214:     current_col = y%16;
  5696     07E0  0823               	movf	LcdPrintStringS@y,w
  5697     07E1  390F               	andlw	15
  5698     07E2  00A6               	movwf	??_LcdPrintStringS
  5699     07E3  01A7               	clrf	??_LcdPrintStringS+1
  5700     07E4  0826               	movf	??_LcdPrintStringS,w
  5701     07E5  00DE               	movwf	_current_col
  5702     07E6  0827               	movf	??_LcdPrintStringS+1,w
  5703     07E7  00DF               	movwf	_current_col+1
  5704                           
  5705                           ;lcd.c: 215:     while (*string) {
  5706     07E8  2FF6               	goto	l3257
  5707     07E9                     l3253:
  5708                           
  5709                           ;lcd.c: 216:         lcd_print_charS (*string++);
  5710     07E9  0824               	movf	LcdPrintStringS@string,w
  5711     07EA  0084               	movwf	4
  5712     07EB  0825               	movf	LcdPrintStringS@string+1,w
  5713     07EC  0085               	movwf	5
  5714     07ED  0800               	movf	0,w	;code access
  5715     07EE  318C  24D4  3187   	fcall	_lcd_print_charS
  5716     07F1                     l3255:
  5717     07F1  3001               	movlw	1
  5718     07F2  0020               	movlb	0	; select bank0
  5719     07F3  07A4               	addwf	LcdPrintStringS@string,f
  5720     07F4  3000               	movlw	0
  5721     07F5  3DA5               	addwfc	LcdPrintStringS@string+1,f
  5722     07F6                     l3257:
  5723                           
  5724                           ;lcd.c: 215:     while (*string) {
  5725     07F6  0824               	movf	LcdPrintStringS@string,w
  5726     07F7  0084               	movwf	4
  5727     07F8  0825               	movf	LcdPrintStringS@string+1,w
  5728     07F9  0085               	movwf	5
  5729     07FA  0012               	moviw fsr0++
  5730     07FB  1D03               	btfss	3,2
  5731     07FC  2FFE               	goto	u2911
  5732     07FD  2FFF               	goto	u2910
  5733     07FE                     u2911:
  5734     07FE  2FE9               	goto	l3253
  5735     07FF                     u2910:
  5736     07FF                     l414:
  5737     07FF  0008               	return
  5738     0800                     __end_of_LcdPrintStringS:
  5739                           
  5740                           	psect	text17
  5741     03FB                     __ptext17:	
  5742 ;; *************** function _LcdPrintNumS *****************
  5743 ;; Defined at:
  5744 ;;		line 184 in file "lcd.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  x               1    wreg     unsigned char 
  5747 ;;  y               1   34[BANK0 ] unsigned char 
  5748 ;;  num             2   35[BANK0 ] unsigned int 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  x               1   39[BANK0 ] unsigned char 
  5751 ;;  i               1   41[BANK0 ] unsigned char 
  5752 ;;  num_flag        1   40[BANK0 ] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5762 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5765 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;Total ram usage:        8 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 5
  5769 ;; This function calls:
  5770 ;;		___lldiv
  5771 ;;		___llmod
  5772 ;;		_lcd_power_of
  5773 ;;		_lcd_print_charS
  5774 ;; This function is called by:
  5775 ;;		_FSM_ModeControl
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779     03FB                     _LcdPrintNumS:	
  5780                           ;psect for function _LcdPrintNumS
  5781                           
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in _LcdPrintNumS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5785                           ;LcdPrintNumS@x stored from wreg
  5786     03FB  0020               	movlb	0	; select bank0
  5787     03FC  00C7               	movwf	LcdPrintNumS@x
  5788     03FD                     l3269:
  5789                           
  5790                           ;lcd.c: 184: void LcdPrintNumS(unsigned char x, unsigned char y, unsigned int num);lcd.c
      +                          : 185: {;lcd.c: 186:     char num_flag = 0;
  5791     03FD  01C8               	clrf	LcdPrintNumS@num_flag
  5792     03FE                     l3271:
  5793                           
  5794                           ;lcd.c: 187:     char i;;lcd.c: 188:     current_row = x%2;
  5795     03FE  0847               	movf	LcdPrintNumS@x,w
  5796     03FF  3901               	andlw	1
  5797     0400  00C5               	movwf	??_LcdPrintNumS
  5798     0401  01C6               	clrf	??_LcdPrintNumS+1
  5799     0402  0845               	movf	??_LcdPrintNumS,w
  5800     0403  00E0               	movwf	_current_row
  5801     0404  0846               	movf	??_LcdPrintNumS+1,w
  5802     0405  00E1               	movwf	_current_row+1
  5803     0406                     l3273:
  5804                           
  5805                           ;lcd.c: 189:     current_col = y%16;
  5806     0406  0842               	movf	LcdPrintNumS@y,w
  5807     0407  390F               	andlw	15
  5808     0408  00C5               	movwf	??_LcdPrintNumS
  5809     0409  01C6               	clrf	??_LcdPrintNumS+1
  5810     040A  0845               	movf	??_LcdPrintNumS,w
  5811     040B  00DE               	movwf	_current_col
  5812     040C  0846               	movf	??_LcdPrintNumS+1,w
  5813     040D  00DF               	movwf	_current_col+1
  5814     040E                     l3275:
  5815                           
  5816                           ;lcd.c: 191:     if(num == 0){
  5817     040E  0843               	movf	LcdPrintNumS@num,w
  5818     040F  0444               	iorwf	LcdPrintNumS@num+1,w
  5819     0410  1D03               	btfss	3,2
  5820     0411  2C13               	goto	u2931
  5821     0412  2C14               	goto	u2930
  5822     0413                     u2931:
  5823     0413  2C19               	goto	l3281
  5824     0414                     u2930:
  5825     0414                     l3277:
  5826                           
  5827                           ;lcd.c: 192:         lcd_print_charS('0');
  5828     0414  3030               	movlw	48
  5829     0415  318C  24D4  3183   	fcall	_lcd_print_charS
  5830     0418  2CA3               	goto	l403
  5831     0419                     l3281:
  5832                           
  5833                           ;lcd.c: 195:     for(i = 10; i > 0; i--)
  5834     0419  300A               	movlw	10
  5835     041A  00C9               	movwf	LcdPrintNumS@i
  5836     041B                     l3287:
  5837                           
  5838                           ;lcd.c: 196:     {;lcd.c: 197:         if((num / lcd_power_of(10, i-1)) != 0)
  5839     041B  0849               	movf	LcdPrintNumS@i,w
  5840     041C  3EFF               	addlw	255
  5841     041D  00AE               	movwf	lcd_power_of@x
  5842     041E  30FF               	movlw	255
  5843     041F  1803               	skipnc
  5844     0420  3000               	movlw	0
  5845     0421  00AF               	movwf	lcd_power_of@x+1
  5846     0422  300A               	movlw	10
  5847     0423  00AC               	movwf	lcd_power_of@A
  5848     0424  3000               	movlw	0
  5849     0425  00AD               	movwf	lcd_power_of@A+1
  5850     0426  3187  2757  3183   	fcall	_lcd_power_of
  5851     0429  0020               	movlb	0	; select bank0
  5852     042A  082F               	movf	?_lcd_power_of+3,w
  5853     042B  00B8               	movwf	___lldiv@divisor+3
  5854     042C  082E               	movf	?_lcd_power_of+2,w
  5855     042D  00B7               	movwf	___lldiv@divisor+2
  5856     042E  082D               	movf	?_lcd_power_of+1,w
  5857     042F  00B6               	movwf	___lldiv@divisor+1
  5858     0430  082C               	movf	?_lcd_power_of,w
  5859     0431  00B5               	movwf	___lldiv@divisor
  5860     0432  0843               	movf	LcdPrintNumS@num,w
  5861     0433  00B9               	movwf	___lldiv@dividend
  5862     0434  0844               	movf	LcdPrintNumS@num+1,w
  5863     0435  00BA               	movwf	___lldiv@dividend+1
  5864     0436  01BB               	clrf	___lldiv@dividend+2
  5865     0437  01BC               	clrf	___lldiv@dividend+3
  5866     0438  3186  2609  3183   	fcall	___lldiv
  5867     043B  0020               	movlb	0	; select bank0
  5868     043C  0838               	movf	?___lldiv+3,w
  5869     043D  0437               	iorwf	?___lldiv+2,w
  5870     043E  0436               	iorwf	?___lldiv+1,w
  5871     043F  0435               	iorwf	?___lldiv,w
  5872     0440  1903               	skipnz
  5873     0441  2C43               	goto	u2941
  5874     0442  2C44               	goto	u2940
  5875     0443                     u2941:
  5876     0443  2C6D               	goto	l3293
  5877     0444                     u2940:
  5878     0444                     l3289:
  5879                           
  5880                           ;lcd.c: 198:         {;lcd.c: 199:             num_flag = 1;
  5881     0444  01C8               	clrf	LcdPrintNumS@num_flag
  5882     0445  0AC8               	incf	LcdPrintNumS@num_flag,f
  5883     0446                     l3291:
  5884                           
  5885                           ;lcd.c: 200:             lcd_print_charS(num/lcd_power_of(10, i-1) + '0');
  5886     0446  0849               	movf	LcdPrintNumS@i,w
  5887     0447  3EFF               	addlw	255
  5888     0448  00AE               	movwf	lcd_power_of@x
  5889     0449  30FF               	movlw	255
  5890     044A  1803               	skipnc
  5891     044B  3000               	movlw	0
  5892     044C  00AF               	movwf	lcd_power_of@x+1
  5893     044D  300A               	movlw	10
  5894     044E  00AC               	movwf	lcd_power_of@A
  5895     044F  3000               	movlw	0
  5896     0450  00AD               	movwf	lcd_power_of@A+1
  5897     0451  3187  2757  3183   	fcall	_lcd_power_of
  5898     0454  0020               	movlb	0	; select bank0
  5899     0455  082F               	movf	?_lcd_power_of+3,w
  5900     0456  00B8               	movwf	___lldiv@divisor+3
  5901     0457  082E               	movf	?_lcd_power_of+2,w
  5902     0458  00B7               	movwf	___lldiv@divisor+2
  5903     0459  082D               	movf	?_lcd_power_of+1,w
  5904     045A  00B6               	movwf	___lldiv@divisor+1
  5905     045B  082C               	movf	?_lcd_power_of,w
  5906     045C  00B5               	movwf	___lldiv@divisor
  5907     045D  0843               	movf	LcdPrintNumS@num,w
  5908     045E  00B9               	movwf	___lldiv@dividend
  5909     045F  0844               	movf	LcdPrintNumS@num+1,w
  5910     0460  00BA               	movwf	___lldiv@dividend+1
  5911     0461  01BB               	clrf	___lldiv@dividend+2
  5912     0462  01BC               	clrf	___lldiv@dividend+3
  5913     0463  3186  2609  3183   	fcall	___lldiv
  5914     0466  0020               	movlb	0	; select bank0
  5915     0467  0835               	movf	?___lldiv,w
  5916     0468  3E30               	addlw	48
  5917     0469  318C  24D4  3183   	fcall	_lcd_print_charS
  5918                           
  5919                           ;lcd.c: 201:         }
  5920     046C  2C76               	goto	l3297
  5921     046D                     l3293:
  5922                           
  5923                           ;lcd.c: 203:         {;lcd.c: 204:             if(num_flag != 0)
  5924     046D  0848               	movf	LcdPrintNumS@num_flag,w
  5925     046E  1903               	btfsc	3,2
  5926     046F  2C71               	goto	u2951
  5927     0470  2C72               	goto	u2950
  5928     0471                     u2951:
  5929     0471  2C76               	goto	l3297
  5930     0472                     u2950:
  5931     0472                     l3295:
  5932                           
  5933                           ;lcd.c: 205:                 lcd_print_charS('0');
  5934     0472  3030               	movlw	48
  5935     0473  318C  24D4  3183   	fcall	_lcd_print_charS
  5936     0476                     l3297:
  5937                           
  5938                           ;lcd.c: 207:         num %= lcd_power_of(10, i-1);
  5939     0476  0020               	movlb	0	; select bank0
  5940     0477  0849               	movf	LcdPrintNumS@i,w
  5941     0478  3EFF               	addlw	255
  5942     0479  00AE               	movwf	lcd_power_of@x
  5943     047A  30FF               	movlw	255
  5944     047B  1803               	skipnc
  5945     047C  3000               	movlw	0
  5946     047D  00AF               	movwf	lcd_power_of@x+1
  5947     047E  300A               	movlw	10
  5948     047F  00AC               	movwf	lcd_power_of@A
  5949     0480  3000               	movlw	0
  5950     0481  00AD               	movwf	lcd_power_of@A+1
  5951     0482  3187  2757  3183   	fcall	_lcd_power_of
  5952     0485  0020               	movlb	0	; select bank0
  5953     0486  082F               	movf	?_lcd_power_of+3,w
  5954     0487  00B8               	movwf	___llmod@divisor+3
  5955     0488  082E               	movf	?_lcd_power_of+2,w
  5956     0489  00B7               	movwf	___llmod@divisor+2
  5957     048A  082D               	movf	?_lcd_power_of+1,w
  5958     048B  00B6               	movwf	___llmod@divisor+1
  5959     048C  082C               	movf	?_lcd_power_of,w
  5960     048D  00B5               	movwf	___llmod@divisor
  5961     048E  0843               	movf	LcdPrintNumS@num,w
  5962     048F  00B9               	movwf	___llmod@dividend
  5963     0490  0844               	movf	LcdPrintNumS@num+1,w
  5964     0491  00BA               	movwf	___llmod@dividend+1
  5965     0492  01BB               	clrf	___llmod@dividend+2
  5966     0493  01BC               	clrf	___llmod@dividend+3
  5967     0494  3187  270C  3183   	fcall	___llmod
  5968     0497  0020               	movlb	0	; select bank0
  5969     0498  0836               	movf	?___llmod+1,w
  5970     0499  00C4               	movwf	LcdPrintNumS@num+1
  5971     049A  0835               	movf	?___llmod,w
  5972     049B  00C3               	movwf	LcdPrintNumS@num
  5973     049C                     l3299:
  5974                           
  5975                           ;lcd.c: 208:     }
  5976     049C  3001               	movlw	1
  5977     049D  02C9               	subwf	LcdPrintNumS@i,f
  5978     049E                     l3301:
  5979     049E  0849               	movf	LcdPrintNumS@i,w
  5980     049F  1D03               	btfss	3,2
  5981     04A0  2CA2               	goto	u2961
  5982     04A1  2CA3               	goto	u2960
  5983     04A2                     u2961:
  5984     04A2  2C1B               	goto	l3287
  5985     04A3                     u2960:
  5986     04A3                     l403:
  5987     04A3  0008               	return
  5988     04A4                     __end_of_LcdPrintNumS:
  5989                           
  5990                           	psect	text18
  5991     0757                     __ptext18:	
  5992 ;; *************** function _lcd_power_of *****************
  5993 ;; Defined at:
  5994 ;;		line 23 in file "lcd.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  A               2   12[BANK0 ] int 
  5997 ;;  x               2   14[BANK0 ] int 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  temp            4   17[BANK0 ] unsigned long 
  6000 ;;  i               1   16[BANK0 ] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  4   12[BANK0 ] unsigned long 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0, pclath, cstack
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;Total ram usage:       10 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 4
  6017 ;; This function calls:
  6018 ;;		___lmul
  6019 ;; This function is called by:
  6020 ;;		_LcdPrintNumS
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024     0757                     _lcd_power_of:	
  6025                           ;psect for function _lcd_power_of
  6026                           
  6027     0757                     l3051:	
  6028                           ;incstack = 0
  6029                           ; Regs used in _lcd_power_of: [wreg+status,2+status,0+pclath+cstack]
  6030                           
  6031                           
  6032                           ;lcd.c: 23: unsigned long lcd_power_of(int A, int x);lcd.c: 24: {;lcd.c: 25:     char i;
      +                          ;lcd.c: 26:     unsigned long temp = 1;
  6033     0757  3000               	movlw	0
  6034     0758  0020               	movlb	0	; select bank0
  6035     0759  00B4               	movwf	lcd_power_of@temp+3
  6036     075A  3000               	movlw	0
  6037     075B  00B3               	movwf	lcd_power_of@temp+2
  6038     075C  3000               	movlw	0
  6039     075D  00B2               	movwf	lcd_power_of@temp+1
  6040     075E  3001               	movlw	1
  6041     075F  00B1               	movwf	lcd_power_of@temp
  6042     0760                     l3053:
  6043                           
  6044                           ;lcd.c: 27:     for(i = 0; i < x; i++)
  6045     0760  01B0               	clrf	lcd_power_of@i
  6046     0761  2F84               	goto	l3059
  6047     0762                     l3055:
  6048                           
  6049                           ;lcd.c: 28:             temp *= A;
  6050     0762  0020               	movlb	0	; select bank0
  6051     0763  082C               	movf	lcd_power_of@A,w
  6052     0764  00A0               	movwf	___lmul@multiplier
  6053     0765  082D               	movf	lcd_power_of@A+1,w
  6054     0766  00A1               	movwf	___lmul@multiplier+1
  6055     0767  0D89               	rlf	9,f
  6056     0768  3B89               	subwfb	9,f
  6057     0769  0989               	comf	9,f
  6058     076A  00A2               	movwf	___lmul@multiplier+2
  6059     076B  00A3               	movwf	___lmul@multiplier+3
  6060     076C  0834               	movf	lcd_power_of@temp+3,w
  6061     076D  00A7               	movwf	___lmul@multiplicand+3
  6062     076E  0833               	movf	lcd_power_of@temp+2,w
  6063     076F  00A6               	movwf	___lmul@multiplicand+2
  6064     0770  0832               	movf	lcd_power_of@temp+1,w
  6065     0771  00A5               	movwf	___lmul@multiplicand+1
  6066     0772  0831               	movf	lcd_power_of@temp,w
  6067     0773  00A4               	movwf	___lmul@multiplicand
  6068     0774  318E  26EF  3187   	fcall	___lmul
  6069     0777  0020               	movlb	0	; select bank0
  6070     0778  0823               	movf	?___lmul+3,w
  6071     0779  00B4               	movwf	lcd_power_of@temp+3
  6072     077A  0822               	movf	?___lmul+2,w
  6073     077B  00B3               	movwf	lcd_power_of@temp+2
  6074     077C  0821               	movf	?___lmul+1,w
  6075     077D  00B2               	movwf	lcd_power_of@temp+1
  6076     077E  0820               	movf	?___lmul,w
  6077     077F  00B1               	movwf	lcd_power_of@temp
  6078     0780                     l3057:
  6079     0780  3001               	movlw	1
  6080     0781  00F4               	movwf	??_lcd_power_of
  6081     0782  0874               	movf	??_lcd_power_of,w
  6082     0783  07B0               	addwf	lcd_power_of@i,f
  6083     0784                     l3059:
  6084     0784  082F               	movf	lcd_power_of@x+1,w
  6085     0785  3A80               	xorlw	128
  6086     0786  3C80               	sublw	128
  6087     0787  1D03               	skipz
  6088     0788  2F8B               	goto	u2545
  6089     0789  082E               	movf	lcd_power_of@x,w
  6090     078A  0230               	subwf	lcd_power_of@i,w
  6091     078B                     u2545:
  6092     078B  1C03               	skipc
  6093     078C  2F8E               	goto	u2541
  6094     078D  2F8F               	goto	u2540
  6095     078E                     u2541:
  6096     078E  2F62               	goto	l3055
  6097     078F                     u2540:
  6098     078F                     l3061:
  6099                           
  6100                           ;lcd.c: 29:     return temp;
  6101     078F  0020               	movlb	0	; select bank0
  6102     0790  0834               	movf	lcd_power_of@temp+3,w
  6103     0791  00AF               	movwf	?_lcd_power_of+3
  6104     0792  0833               	movf	lcd_power_of@temp+2,w
  6105     0793  00AE               	movwf	?_lcd_power_of+2
  6106     0794  0832               	movf	lcd_power_of@temp+1,w
  6107     0795  00AD               	movwf	?_lcd_power_of+1
  6108     0796  0831               	movf	lcd_power_of@temp,w
  6109     0797  00AC               	movwf	?_lcd_power_of
  6110     0798                     l305:
  6111     0798  0008               	return
  6112     0799                     __end_of_lcd_power_of:
  6113                           
  6114                           	psect	text19
  6115     0EEF                     __ptext19:	
  6116 ;; *************** function ___lmul *****************
  6117 ;; Defined at:
  6118 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6121 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  product         4    8[BANK0 ] unsigned long 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  4    0[BANK0 ] unsigned long 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6133 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;Total ram usage:       12 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 3
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_lcd_power_of
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147     0EEF                     ___lmul:	
  6148                           ;psect for function ___lmul
  6149                           
  6150     0EEF                     l3037:	
  6151                           ;incstack = 0
  6152                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6153                           
  6154     0EEF  3000               	movlw	0
  6155     0EF0  0020               	movlb	0	; select bank0
  6156     0EF1  00AB               	movwf	___lmul@product+3
  6157     0EF2  3000               	movlw	0
  6158     0EF3  00AA               	movwf	___lmul@product+2
  6159     0EF4  3000               	movlw	0
  6160     0EF5  00A9               	movwf	___lmul@product+1
  6161     0EF6  3000               	movlw	0
  6162     0EF7  00A8               	movwf	___lmul@product
  6163     0EF8                     l3039:
  6164     0EF8  1C20               	btfss	___lmul@multiplier,0
  6165     0EF9  2EFB               	goto	u2501
  6166     0EFA  2EFC               	goto	u2500
  6167     0EFB                     u2501:
  6168     0EFB  2F04               	goto	l3043
  6169     0EFC                     u2500:
  6170     0EFC                     l3041:
  6171     0EFC  0824               	movf	___lmul@multiplicand,w
  6172     0EFD  07A8               	addwf	___lmul@product,f
  6173     0EFE  0825               	movf	___lmul@multiplicand+1,w
  6174     0EFF  3DA9               	addwfc	___lmul@product+1,f
  6175     0F00  0826               	movf	___lmul@multiplicand+2,w
  6176     0F01  3DAA               	addwfc	___lmul@product+2,f
  6177     0F02  0827               	movf	___lmul@multiplicand+3,w
  6178     0F03  3DAB               	addwfc	___lmul@product+3,f
  6179     0F04                     l3043:
  6180     0F04  3001               	movlw	1
  6181     0F05                     u2515:
  6182     0F05  35A4               	lslf	___lmul@multiplicand,f
  6183     0F06  0DA5               	rlf	___lmul@multiplicand+1,f
  6184     0F07  0DA6               	rlf	___lmul@multiplicand+2,f
  6185     0F08  0DA7               	rlf	___lmul@multiplicand+3,f
  6186     0F09  0B89               	decfsz	9,f
  6187     0F0A  2F05               	goto	u2515
  6188     0F0B                     l3045:
  6189     0F0B  3001               	movlw	1
  6190     0F0C                     u2525:
  6191     0F0C  36A3               	lsrf	___lmul@multiplier+3,f
  6192     0F0D  0CA2               	rrf	___lmul@multiplier+2,f
  6193     0F0E  0CA1               	rrf	___lmul@multiplier+1,f
  6194     0F0F  0CA0               	rrf	___lmul@multiplier,f
  6195     0F10  0B89               	decfsz	9,f
  6196     0F11  2F0C               	goto	u2525
  6197     0F12  0823               	movf	___lmul@multiplier+3,w
  6198     0F13  0422               	iorwf	___lmul@multiplier+2,w
  6199     0F14  0421               	iorwf	___lmul@multiplier+1,w
  6200     0F15  0420               	iorwf	___lmul@multiplier,w
  6201     0F16  1D03               	skipz
  6202     0F17  2F19               	goto	u2531
  6203     0F18  2F1A               	goto	u2530
  6204     0F19                     u2531:
  6205     0F19  2EF8               	goto	l3039
  6206     0F1A                     u2530:
  6207     0F1A                     l3047:
  6208     0F1A  082B               	movf	___lmul@product+3,w
  6209     0F1B  00A3               	movwf	?___lmul+3
  6210     0F1C  082A               	movf	___lmul@product+2,w
  6211     0F1D  00A2               	movwf	?___lmul+2
  6212     0F1E  0829               	movf	___lmul@product+1,w
  6213     0F1F  00A1               	movwf	?___lmul+1
  6214     0F20  0828               	movf	___lmul@product,w
  6215     0F21  00A0               	movwf	?___lmul
  6216     0F22                     l657:
  6217     0F22  0008               	return
  6218     0F23                     __end_of___lmul:
  6219                           
  6220                           	psect	text20
  6221     070C                     __ptext20:	
  6222 ;; *************** function ___llmod *****************
  6223 ;; Defined at:
  6224 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\llmod.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  divisor         4   21[BANK0 ] unsigned long 
  6227 ;;  dividend        4   25[BANK0 ] unsigned long 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  counter         1   29[BANK0 ] unsigned char 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  4   21[BANK0 ] unsigned long 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6239 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;Total ram usage:       10 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 3
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_LcdPrintNumS
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253     070C                     ___llmod:	
  6254                           ;psect for function ___llmod
  6255                           
  6256     070C                     l2281:	
  6257                           ;incstack = 0
  6258                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6259                           
  6260     070C  0020               	movlb	0	; select bank0
  6261     070D  0838               	movf	___llmod@divisor+3,w
  6262     070E  0437               	iorwf	___llmod@divisor+2,w
  6263     070F  0436               	iorwf	___llmod@divisor+1,w
  6264     0710  0435               	iorwf	___llmod@divisor,w
  6265     0711  1903               	skipnz
  6266     0712  2F14               	goto	u1611
  6267     0713  2F15               	goto	u1610
  6268     0714                     u1611:
  6269     0714  2F4E               	goto	l2297
  6270     0715                     u1610:
  6271     0715                     l2283:
  6272     0715  01BD               	clrf	___llmod@counter
  6273     0716  0ABD               	incf	___llmod@counter,f
  6274     0717  2F23               	goto	l2287
  6275     0718                     l2285:
  6276     0718  3001               	movlw	1
  6277     0719                     u1625:
  6278     0719  35B5               	lslf	___llmod@divisor,f
  6279     071A  0DB6               	rlf	___llmod@divisor+1,f
  6280     071B  0DB7               	rlf	___llmod@divisor+2,f
  6281     071C  0DB8               	rlf	___llmod@divisor+3,f
  6282     071D  0B89               	decfsz	9,f
  6283     071E  2F19               	goto	u1625
  6284     071F  3001               	movlw	1
  6285     0720  00F5               	movwf	??___llmod
  6286     0721  0875               	movf	??___llmod,w
  6287     0722  07BD               	addwf	___llmod@counter,f
  6288     0723                     l2287:
  6289     0723  1FB8               	btfss	___llmod@divisor+3,7
  6290     0724  2F26               	goto	u1631
  6291     0725  2F27               	goto	u1630
  6292     0726                     u1631:
  6293     0726  2F18               	goto	l2285
  6294     0727                     u1630:
  6295     0727                     l2289:
  6296     0727  0838               	movf	___llmod@divisor+3,w
  6297     0728  023C               	subwf	___llmod@dividend+3,w
  6298     0729  1D03               	skipz
  6299     072A  2F35               	goto	u1645
  6300     072B  0837               	movf	___llmod@divisor+2,w
  6301     072C  023B               	subwf	___llmod@dividend+2,w
  6302     072D  1D03               	skipz
  6303     072E  2F35               	goto	u1645
  6304     072F  0836               	movf	___llmod@divisor+1,w
  6305     0730  023A               	subwf	___llmod@dividend+1,w
  6306     0731  1D03               	skipz
  6307     0732  2F35               	goto	u1645
  6308     0733  0835               	movf	___llmod@divisor,w
  6309     0734  0239               	subwf	___llmod@dividend,w
  6310     0735                     u1645:
  6311     0735  1C03               	skipc
  6312     0736  2F38               	goto	u1641
  6313     0737  2F39               	goto	u1640
  6314     0738                     u1641:
  6315     0738  2F41               	goto	l2293
  6316     0739                     u1640:
  6317     0739                     l2291:
  6318     0739  0835               	movf	___llmod@divisor,w
  6319     073A  02B9               	subwf	___llmod@dividend,f
  6320     073B  0836               	movf	___llmod@divisor+1,w
  6321     073C  3BBA               	subwfb	___llmod@dividend+1,f
  6322     073D  0837               	movf	___llmod@divisor+2,w
  6323     073E  3BBB               	subwfb	___llmod@dividend+2,f
  6324     073F  0838               	movf	___llmod@divisor+3,w
  6325     0740  3BBC               	subwfb	___llmod@dividend+3,f
  6326     0741                     l2293:
  6327     0741  3001               	movlw	1
  6328     0742                     u1655:
  6329     0742  36B8               	lsrf	___llmod@divisor+3,f
  6330     0743  0CB7               	rrf	___llmod@divisor+2,f
  6331     0744  0CB6               	rrf	___llmod@divisor+1,f
  6332     0745  0CB5               	rrf	___llmod@divisor,f
  6333     0746  0B89               	decfsz	9,f
  6334     0747  2F42               	goto	u1655
  6335     0748                     l2295:
  6336     0748  3001               	movlw	1
  6337     0749  02BD               	subwf	___llmod@counter,f
  6338     074A  1D03               	btfss	3,2
  6339     074B  2F4D               	goto	u1661
  6340     074C  2F4E               	goto	u1660
  6341     074D                     u1661:
  6342     074D  2F27               	goto	l2289
  6343     074E                     u1660:
  6344     074E                     l2297:
  6345     074E  083C               	movf	___llmod@dividend+3,w
  6346     074F  00B8               	movwf	?___llmod+3
  6347     0750  083B               	movf	___llmod@dividend+2,w
  6348     0751  00B7               	movwf	?___llmod+2
  6349     0752  083A               	movf	___llmod@dividend+1,w
  6350     0753  00B6               	movwf	?___llmod+1
  6351     0754  0839               	movf	___llmod@dividend,w
  6352     0755  00B5               	movwf	?___llmod
  6353     0756                     l873:
  6354     0756  0008               	return
  6355     0757                     __end_of___llmod:
  6356                           
  6357                           	psect	text21
  6358     0609                     __ptext21:	
  6359 ;; *************** function ___lldiv *****************
  6360 ;; Defined at:
  6361 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  divisor         4   21[BANK0 ] unsigned long 
  6364 ;;  dividend        4   25[BANK0 ] unsigned long 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  quotient        4   29[BANK0 ] unsigned long 
  6367 ;;  counter         1   33[BANK0 ] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  4   21[BANK0 ] unsigned long 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;Total ram usage:       14 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 3
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_LcdPrintNumS
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391     0609                     ___lldiv:	
  6392                           ;psect for function ___lldiv
  6393                           
  6394     0609                     l2175:	
  6395                           ;incstack = 0
  6396                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6397                           
  6398     0609  3000               	movlw	0
  6399     060A  0020               	movlb	0	; select bank0
  6400     060B  00C0               	movwf	___lldiv@quotient+3
  6401     060C  3000               	movlw	0
  6402     060D  00BF               	movwf	___lldiv@quotient+2
  6403     060E  3000               	movlw	0
  6404     060F  00BE               	movwf	___lldiv@quotient+1
  6405     0610  3000               	movlw	0
  6406     0611  00BD               	movwf	___lldiv@quotient
  6407     0612  0838               	movf	___lldiv@divisor+3,w
  6408     0613  0437               	iorwf	___lldiv@divisor+2,w
  6409     0614  0436               	iorwf	___lldiv@divisor+1,w
  6410     0615  0435               	iorwf	___lldiv@divisor,w
  6411     0616  1903               	skipnz
  6412     0617  2E19               	goto	u1351
  6413     0618  2E1A               	goto	u1350
  6414     0619                     u1351:
  6415     0619  2E5B               	goto	l2195
  6416     061A                     u1350:
  6417     061A                     l2177:
  6418     061A  01C1               	clrf	___lldiv@counter
  6419     061B  0AC1               	incf	___lldiv@counter,f
  6420     061C  2E28               	goto	l2181
  6421     061D                     l2179:
  6422     061D  3001               	movlw	1
  6423     061E                     u1365:
  6424     061E  35B5               	lslf	___lldiv@divisor,f
  6425     061F  0DB6               	rlf	___lldiv@divisor+1,f
  6426     0620  0DB7               	rlf	___lldiv@divisor+2,f
  6427     0621  0DB8               	rlf	___lldiv@divisor+3,f
  6428     0622  0B89               	decfsz	9,f
  6429     0623  2E1E               	goto	u1365
  6430     0624  3001               	movlw	1
  6431     0625  00F5               	movwf	??___lldiv
  6432     0626  0875               	movf	??___lldiv,w
  6433     0627  07C1               	addwf	___lldiv@counter,f
  6434     0628                     l2181:
  6435     0628  1FB8               	btfss	___lldiv@divisor+3,7
  6436     0629  2E2B               	goto	u1371
  6437     062A  2E2C               	goto	u1370
  6438     062B                     u1371:
  6439     062B  2E1D               	goto	l2179
  6440     062C                     u1370:
  6441     062C                     l2183:
  6442     062C  3001               	movlw	1
  6443     062D                     u1385:
  6444     062D  35BD               	lslf	___lldiv@quotient,f
  6445     062E  0DBE               	rlf	___lldiv@quotient+1,f
  6446     062F  0DBF               	rlf	___lldiv@quotient+2,f
  6447     0630  0DC0               	rlf	___lldiv@quotient+3,f
  6448     0631  0B89               	decfsz	9,f
  6449     0632  2E2D               	goto	u1385
  6450     0633                     l2185:
  6451     0633  0838               	movf	___lldiv@divisor+3,w
  6452     0634  023C               	subwf	___lldiv@dividend+3,w
  6453     0635  1D03               	skipz
  6454     0636  2E41               	goto	u1395
  6455     0637  0837               	movf	___lldiv@divisor+2,w
  6456     0638  023B               	subwf	___lldiv@dividend+2,w
  6457     0639  1D03               	skipz
  6458     063A  2E41               	goto	u1395
  6459     063B  0836               	movf	___lldiv@divisor+1,w
  6460     063C  023A               	subwf	___lldiv@dividend+1,w
  6461     063D  1D03               	skipz
  6462     063E  2E41               	goto	u1395
  6463     063F  0835               	movf	___lldiv@divisor,w
  6464     0640  0239               	subwf	___lldiv@dividend,w
  6465     0641                     u1395:
  6466     0641  1C03               	skipc
  6467     0642  2E44               	goto	u1391
  6468     0643  2E45               	goto	u1390
  6469     0644                     u1391:
  6470     0644  2E4E               	goto	l2191
  6471     0645                     u1390:
  6472     0645                     l2187:
  6473     0645  0835               	movf	___lldiv@divisor,w
  6474     0646  02B9               	subwf	___lldiv@dividend,f
  6475     0647  0836               	movf	___lldiv@divisor+1,w
  6476     0648  3BBA               	subwfb	___lldiv@dividend+1,f
  6477     0649  0837               	movf	___lldiv@divisor+2,w
  6478     064A  3BBB               	subwfb	___lldiv@dividend+2,f
  6479     064B  0838               	movf	___lldiv@divisor+3,w
  6480     064C  3BBC               	subwfb	___lldiv@dividend+3,f
  6481     064D                     l2189:
  6482     064D  143D               	bsf	___lldiv@quotient,0
  6483     064E                     l2191:
  6484     064E  3001               	movlw	1
  6485     064F                     u1405:
  6486     064F  36B8               	lsrf	___lldiv@divisor+3,f
  6487     0650  0CB7               	rrf	___lldiv@divisor+2,f
  6488     0651  0CB6               	rrf	___lldiv@divisor+1,f
  6489     0652  0CB5               	rrf	___lldiv@divisor,f
  6490     0653  0B89               	decfsz	9,f
  6491     0654  2E4F               	goto	u1405
  6492     0655                     l2193:
  6493     0655  3001               	movlw	1
  6494     0656  02C1               	subwf	___lldiv@counter,f
  6495     0657  1D03               	btfss	3,2
  6496     0658  2E5A               	goto	u1411
  6497     0659  2E5B               	goto	u1410
  6498     065A                     u1411:
  6499     065A  2E2C               	goto	l2183
  6500     065B                     u1410:
  6501     065B                     l2195:
  6502     065B  0840               	movf	___lldiv@quotient+3,w
  6503     065C  00B8               	movwf	?___lldiv+3
  6504     065D  083F               	movf	___lldiv@quotient+2,w
  6505     065E  00B7               	movwf	?___lldiv+2
  6506     065F  083E               	movf	___lldiv@quotient+1,w
  6507     0660  00B6               	movwf	?___lldiv+1
  6508     0661  083D               	movf	___lldiv@quotient,w
  6509     0662  00B5               	movwf	?___lldiv
  6510     0663                     l679:
  6511     0663  0008               	return
  6512     0664                     __end_of___lldiv:
  6513                           
  6514                           	psect	text22
  6515     0531                     __ptext22:	
  6516 ;; *************** function _LcdPrintFloatS *****************
  6517 ;; Defined at:
  6518 ;;		line 166 in file "lcd.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  x               1    wreg     unsigned char 
  6521 ;;  y               1   12[BANK0 ] unsigned char 
  6522 ;;  num             2   13[BANK0 ] unsigned int 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  x               1   17[BANK0 ] unsigned char 
  6525 ;;  integerPart     1   19[BANK0 ] unsigned char 
  6526 ;;  decimalPlace    1   18[BANK0 ] unsigned char 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6536 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;Total ram usage:        8 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; Hardware stack levels required when called: 4
  6543 ;; This function calls:
  6544 ;;		___awdiv
  6545 ;;		___awmod
  6546 ;;		___lwdiv
  6547 ;;		___lwmod
  6548 ;;		_lcd_print_charS
  6549 ;; This function is called by:
  6550 ;;		_FSM_ModeControl
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554     0531                     _LcdPrintFloatS:	
  6555                           ;psect for function _LcdPrintFloatS
  6556                           
  6557                           
  6558                           ;incstack = 0
  6559                           ; Regs used in _LcdPrintFloatS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6560                           ;LcdPrintFloatS@x stored from wreg
  6561     0531  0020               	movlb	0	; select bank0
  6562     0532  00B1               	movwf	LcdPrintFloatS@x
  6563     0533                     l3259:
  6564                           
  6565                           ;lcd.c: 166: void LcdPrintFloatS(unsigned char x, unsigned char y, unsigned int num);lcd
      +                          .c: 167: {;lcd.c: 168:     unsigned char integerPart, decimalPlaces;;lcd.c: 169:     cur
      +                          rent_row = x%2;
  6566     0533  0831               	movf	LcdPrintFloatS@x,w
  6567     0534  3901               	andlw	1
  6568     0535  00AF               	movwf	??_LcdPrintFloatS
  6569     0536  01B0               	clrf	??_LcdPrintFloatS+1
  6570     0537  082F               	movf	??_LcdPrintFloatS,w
  6571     0538  00E0               	movwf	_current_row
  6572     0539  0830               	movf	??_LcdPrintFloatS+1,w
  6573     053A  00E1               	movwf	_current_row+1
  6574                           
  6575                           ;lcd.c: 170:     current_col = y%16;
  6576     053B  082C               	movf	LcdPrintFloatS@y,w
  6577     053C  390F               	andlw	15
  6578     053D  00AF               	movwf	??_LcdPrintFloatS
  6579     053E  01B0               	clrf	??_LcdPrintFloatS+1
  6580     053F  082F               	movf	??_LcdPrintFloatS,w
  6581     0540  00DE               	movwf	_current_col
  6582     0541  0830               	movf	??_LcdPrintFloatS+1,w
  6583     0542  00DF               	movwf	_current_col+1
  6584     0543                     l3261:
  6585                           
  6586                           ;lcd.c: 172:     integerPart = num / 100;
  6587     0543  3064               	movlw	100
  6588     0544  00A4               	movwf	___lwdiv@divisor
  6589     0545  3000               	movlw	0
  6590     0546  00A5               	movwf	___lwdiv@divisor+1
  6591     0547  082E               	movf	LcdPrintFloatS@num+1,w
  6592     0548  00A7               	movwf	___lwdiv@dividend+1
  6593     0549  082D               	movf	LcdPrintFloatS@num,w
  6594     054A  00A6               	movwf	___lwdiv@dividend
  6595     054B  3187  2799  3185   	fcall	___lwdiv
  6596     054E  0020               	movlb	0	; select bank0
  6597     054F  0824               	movf	?___lwdiv,w
  6598     0550  00B3               	movwf	LcdPrintFloatS@integerPart
  6599     0551                     l3263:
  6600                           
  6601                           ;lcd.c: 173:     decimalPlaces = (num % 100 ) / 10;
  6602     0551  300A               	movlw	10
  6603     0552  00A4               	movwf	___lwdiv@divisor
  6604     0553  3000               	movlw	0
  6605     0554  00A5               	movwf	___lwdiv@divisor+1
  6606     0555  082E               	movf	LcdPrintFloatS@num+1,w
  6607     0556  00A3               	movwf	___lwmod@dividend+1
  6608     0557  082D               	movf	LcdPrintFloatS@num,w
  6609     0558  00A2               	movwf	___lwmod@dividend
  6610     0559  3064               	movlw	100
  6611     055A  00A0               	movwf	___lwmod@divisor
  6612     055B  3000               	movlw	0
  6613     055C  00A1               	movwf	___lwmod@divisor+1
  6614     055D  318F  2723  3185   	fcall	___lwmod
  6615     0560  0020               	movlb	0	; select bank0
  6616     0561  0821               	movf	?___lwmod+1,w
  6617     0562  00A7               	movwf	___lwdiv@dividend+1
  6618     0563  0820               	movf	?___lwmod,w
  6619     0564  00A6               	movwf	___lwdiv@dividend
  6620     0565  3187  2799  3185   	fcall	___lwdiv
  6621     0568  0020               	movlb	0	; select bank0
  6622     0569  0824               	movf	?___lwdiv,w
  6623     056A  00B2               	movwf	LcdPrintFloatS@decimalPlaces
  6624     056B                     l3265:
  6625                           
  6626                           ;lcd.c: 175:     if(integerPart >= 10) lcd_print_charS(integerPart / 10 + '0');
  6627     056B  300A               	movlw	10
  6628     056C  0233               	subwf	LcdPrintFloatS@integerPart,w
  6629     056D  1C03               	skipc
  6630     056E  2D70               	goto	u2921
  6631     056F  2D71               	goto	u2920
  6632     0570                     u2921:
  6633     0570  2D85               	goto	l398
  6634     0571                     u2920:
  6635     0571                     l3267:
  6636     0571  300A               	movlw	10
  6637     0572  00A0               	movwf	___awdiv@divisor
  6638     0573  3000               	movlw	0
  6639     0574  00A1               	movwf	___awdiv@divisor+1
  6640     0575  0833               	movf	LcdPrintFloatS@integerPart,w
  6641     0576  00AF               	movwf	??_LcdPrintFloatS
  6642     0577  01B0               	clrf	??_LcdPrintFloatS+1
  6643     0578  082F               	movf	??_LcdPrintFloatS,w
  6644     0579  00A2               	movwf	___awdiv@dividend
  6645     057A  0830               	movf	??_LcdPrintFloatS+1,w
  6646     057B  00A3               	movwf	___awdiv@dividend+1
  6647     057C  3185  25A9  3185   	fcall	___awdiv
  6648     057F  0020               	movlb	0	; select bank0
  6649     0580  0820               	movf	?___awdiv,w
  6650     0581  3E30               	addlw	48
  6651     0582  318C  24D4  3185   	fcall	_lcd_print_charS
  6652     0585                     l398:
  6653                           
  6654                           ;lcd.c: 177:     lcd_print_charS(integerPart % 10 + '0');
  6655     0585  300A               	movlw	10
  6656     0586  0020               	movlb	0	; select bank0
  6657     0587  00A0               	movwf	___awmod@divisor
  6658     0588  3000               	movlw	0
  6659     0589  00A1               	movwf	___awmod@divisor+1
  6660     058A  0833               	movf	LcdPrintFloatS@integerPart,w
  6661     058B  00AF               	movwf	??_LcdPrintFloatS
  6662     058C  01B0               	clrf	??_LcdPrintFloatS+1
  6663     058D  082F               	movf	??_LcdPrintFloatS,w
  6664     058E  00A2               	movwf	___awmod@dividend
  6665     058F  0830               	movf	??_LcdPrintFloatS+1,w
  6666     0590  00A3               	movwf	___awmod@dividend+1
  6667     0591  3186  26B8  3185   	fcall	___awmod
  6668     0594  0020               	movlb	0	; select bank0
  6669     0595  0820               	movf	?___awmod,w
  6670     0596  3E30               	addlw	48
  6671     0597  318C  24D4  3185   	fcall	_lcd_print_charS
  6672                           
  6673                           ;lcd.c: 178:     lcd_print_charS('.');
  6674     059A  302E               	movlw	46
  6675     059B  318C  24D4  3185   	fcall	_lcd_print_charS
  6676                           
  6677                           ;lcd.c: 179:     lcd_print_charS(decimalPlaces + '0');
  6678     059E  0020               	movlb	0	; select bank0
  6679     059F  0832               	movf	LcdPrintFloatS@decimalPlaces,w
  6680     05A0  3E30               	addlw	48
  6681     05A1  318C  24D4  3185   	fcall	_lcd_print_charS
  6682                           
  6683                           ;lcd.c: 180:     lcd_print_charS(' ');
  6684     05A4  3020               	movlw	32
  6685     05A5  318C  24D4  3185   	fcall	_lcd_print_charS
  6686     05A8                     l399:
  6687     05A8  0008               	return
  6688     05A9                     __end_of_LcdPrintFloatS:
  6689                           
  6690                           	psect	text23
  6691     0CD4                     __ptext23:	
  6692 ;; *************** function _lcd_print_charS *****************
  6693 ;; Defined at:
  6694 ;;		line 153 in file "lcd.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  c               1    wreg     unsigned char 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  c               1    4[COMMON] unsigned char 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      void 
  6701 ;; Registers used:
  6702 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;Total ram usage:        4 bytes
  6713 ;; Hardware stack levels used: 1
  6714 ;; Hardware stack levels required when called: 3
  6715 ;; This function calls:
  6716 ;;		Nothing
  6717 ;; This function is called by:
  6718 ;;		_LcdPrintFloatS
  6719 ;;		_LcdPrintNumS
  6720 ;;		_LcdPrintStringS
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724     0CD4                     _lcd_print_charS:	
  6725                           ;psect for function _lcd_print_charS
  6726                           
  6727                           
  6728                           ;incstack = 0
  6729                           ; Regs used in _lcd_print_charS: [wreg+fsr1l+fsr1h+status,2+status,0]
  6730                           ;lcd_print_charS@c stored from wreg
  6731     0CD4  00F4               	movwf	lcd_print_charS@c
  6732     0CD5                     l3109:
  6733                           
  6734                           ;lcd.c: 153: void lcd_print_charS(unsigned char c);lcd.c: 154: {;lcd.c: 155:     LcdScre
      +                          en[current_row][ current_col] = c;
  6735     0CD5  0020               	movlb	0	; select bank0
  6736     0CD6  0860               	movf	_current_row,w
  6737     0CD7  00A0               	movwf	??_lcd_print_charS
  6738     0CD8  3004               	movlw	4
  6739     0CD9                     u2585:
  6740     0CD9  35A0               	lslf	??_lcd_print_charS,f
  6741     0CDA  0B89               	decfsz	9,f
  6742     0CDB  2CD9               	goto	u2585
  6743     0CDC  30A0               	movlw	(low (_LcdScreen| 0))& (0+255)
  6744     0CDD  0720               	addwf	??_lcd_print_charS,w
  6745     0CDE  00A1               	movwf	??_lcd_print_charS+1
  6746     0CDF  085E               	movf	_current_col,w
  6747     0CE0  0721               	addwf	??_lcd_print_charS+1,w
  6748     0CE1  00A2               	movwf	??_lcd_print_charS+2
  6749     0CE2  0822               	movf	??_lcd_print_charS+2,w
  6750     0CE3  0086               	movwf	6
  6751     0CE4  0187               	clrf	7
  6752     0CE5  0874               	movf	lcd_print_charS@c,w
  6753     0CE6  0081               	movwf	1
  6754     0CE7                     l3111:
  6755                           
  6756                           ;lcd.c: 156:     current_col ++;
  6757     0CE7  3001               	movlw	1
  6758     0CE8  07DE               	addwf	_current_col,f
  6759     0CE9  3000               	movlw	0
  6760     0CEA  3DDF               	addwfc	_current_col+1,f
  6761     0CEB                     l392:
  6762     0CEB  0008               	return
  6763     0CEC                     __end_of_lcd_print_charS:
  6764                           
  6765                           	psect	text24
  6766     0F23                     __ptext24:	
  6767 ;; *************** function ___lwmod *****************
  6768 ;; Defined at:
  6769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  divisor         2    0[BANK0 ] unsigned int 
  6772 ;;  dividend        2    2[BANK0 ] unsigned int 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  counter         1    5[COMMON] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  2    0[BANK0 ] unsigned int 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;Total ram usage:        6 bytes
  6789 ;; Hardware stack levels used: 1
  6790 ;; Hardware stack levels required when called: 3
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_LcdPrintFloatS
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798     0F23                     ___lwmod:	
  6799                           ;psect for function ___lwmod
  6800                           
  6801     0F23                     l3219:	
  6802                           ;incstack = 0
  6803                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6804                           
  6805     0F23  0020               	movlb	0	; select bank0
  6806     0F24  0820               	movf	___lwmod@divisor,w
  6807     0F25  0421               	iorwf	___lwmod@divisor+1,w
  6808     0F26  1903               	btfsc	3,2
  6809     0F27  2F29               	goto	u2821
  6810     0F28  2F2A               	goto	u2820
  6811     0F29                     u2821:
  6812     0F29  2F53               	goto	l3237
  6813     0F2A                     u2820:
  6814     0F2A                     l3221:
  6815     0F2A  01F5               	clrf	___lwmod@counter
  6816     0F2B  0AF5               	incf	___lwmod@counter,f
  6817     0F2C  2F36               	goto	l3227
  6818     0F2D                     l3223:
  6819     0F2D  3001               	movlw	1
  6820     0F2E                     u2835:
  6821     0F2E  35A0               	lslf	___lwmod@divisor,f
  6822     0F2F  0DA1               	rlf	___lwmod@divisor+1,f
  6823     0F30  0B89               	decfsz	9,f
  6824     0F31  2F2E               	goto	u2835
  6825     0F32                     l3225:
  6826     0F32  3001               	movlw	1
  6827     0F33  00F4               	movwf	??___lwmod
  6828     0F34  0874               	movf	??___lwmod,w
  6829     0F35  07F5               	addwf	___lwmod@counter,f
  6830     0F36                     l3227:
  6831     0F36  1FA1               	btfss	___lwmod@divisor+1,7
  6832     0F37  2F39               	goto	u2841
  6833     0F38  2F3A               	goto	u2840
  6834     0F39                     u2841:
  6835     0F39  2F2D               	goto	l3223
  6836     0F3A                     u2840:
  6837     0F3A                     l3229:
  6838     0F3A  0821               	movf	___lwmod@divisor+1,w
  6839     0F3B  0223               	subwf	___lwmod@dividend+1,w
  6840     0F3C  1D03               	skipz
  6841     0F3D  2F40               	goto	u2855
  6842     0F3E  0820               	movf	___lwmod@divisor,w
  6843     0F3F  0222               	subwf	___lwmod@dividend,w
  6844     0F40                     u2855:
  6845     0F40  1C03               	skipc
  6846     0F41  2F43               	goto	u2851
  6847     0F42  2F44               	goto	u2850
  6848     0F43                     u2851:
  6849     0F43  2F48               	goto	l3233
  6850     0F44                     u2850:
  6851     0F44                     l3231:
  6852     0F44  0820               	movf	___lwmod@divisor,w
  6853     0F45  02A2               	subwf	___lwmod@dividend,f
  6854     0F46  0821               	movf	___lwmod@divisor+1,w
  6855     0F47  3BA3               	subwfb	___lwmod@dividend+1,f
  6856     0F48                     l3233:
  6857     0F48  3001               	movlw	1
  6858     0F49                     u2865:
  6859     0F49  36A1               	lsrf	___lwmod@divisor+1,f
  6860     0F4A  0CA0               	rrf	___lwmod@divisor,f
  6861     0F4B  0B89               	decfsz	9,f
  6862     0F4C  2F49               	goto	u2865
  6863     0F4D                     l3235:
  6864     0F4D  3001               	movlw	1
  6865     0F4E  02F5               	subwf	___lwmod@counter,f
  6866     0F4F  1D03               	btfss	3,2
  6867     0F50  2F52               	goto	u2871
  6868     0F51  2F53               	goto	u2870
  6869     0F52                     u2871:
  6870     0F52  2F3A               	goto	l3229
  6871     0F53                     u2870:
  6872     0F53                     l3237:
  6873     0F53  0823               	movf	___lwmod@dividend+1,w
  6874     0F54  00A1               	movwf	?___lwmod+1
  6875     0F55  0822               	movf	___lwmod@dividend,w
  6876     0F56  00A0               	movwf	?___lwmod
  6877     0F57                     l933:
  6878     0F57  0008               	return
  6879     0F58                     __end_of___lwmod:
  6880                           
  6881                           	psect	text25
  6882     06B8                     __ptext25:	
  6883 ;; *************** function ___awmod *****************
  6884 ;; Defined at:
  6885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  divisor         2    0[BANK0 ] int 
  6888 ;;  dividend        2    2[BANK0 ] int 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  sign            1    5[BANK0 ] unsigned char 
  6891 ;;  counter         1    4[BANK0 ] unsigned char 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  2    0[BANK0 ] int 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;Total ram usage:        7 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 3
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_LcdPrintFloatS
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915     06B8                     ___awmod:	
  6916                           ;psect for function ___awmod
  6917                           
  6918     06B8                     l3181:	
  6919                           ;incstack = 0
  6920                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6921                           
  6922     06B8  0020               	movlb	0	; select bank0
  6923     06B9  01A5               	clrf	___awmod@sign
  6924     06BA                     l3183:
  6925     06BA  1FA3               	btfss	___awmod@dividend+1,7
  6926     06BB  2EBD               	goto	u2731
  6927     06BC  2EBE               	goto	u2730
  6928     06BD                     u2731:
  6929     06BD  2EC5               	goto	l3189
  6930     06BE                     u2730:
  6931     06BE                     l3185:
  6932     06BE  09A2               	comf	___awmod@dividend,f
  6933     06BF  09A3               	comf	___awmod@dividend+1,f
  6934     06C0  0AA2               	incf	___awmod@dividend,f
  6935     06C1  1903               	skipnz
  6936     06C2  0AA3               	incf	___awmod@dividend+1,f
  6937     06C3                     l3187:
  6938     06C3  01A5               	clrf	___awmod@sign
  6939     06C4  0AA5               	incf	___awmod@sign,f
  6940     06C5                     l3189:
  6941     06C5  1FA1               	btfss	___awmod@divisor+1,7
  6942     06C6  2EC8               	goto	u2741
  6943     06C7  2EC9               	goto	u2740
  6944     06C8                     u2741:
  6945     06C8  2ECE               	goto	l3193
  6946     06C9                     u2740:
  6947     06C9                     l3191:
  6948     06C9  09A0               	comf	___awmod@divisor,f
  6949     06CA  09A1               	comf	___awmod@divisor+1,f
  6950     06CB  0AA0               	incf	___awmod@divisor,f
  6951     06CC  1903               	skipnz
  6952     06CD  0AA1               	incf	___awmod@divisor+1,f
  6953     06CE                     l3193:
  6954     06CE  0820               	movf	___awmod@divisor,w
  6955     06CF  0421               	iorwf	___awmod@divisor+1,w
  6956     06D0  1903               	btfsc	3,2
  6957     06D1  2ED3               	goto	u2751
  6958     06D2  2ED4               	goto	u2750
  6959     06D3                     u2751:
  6960     06D3  2EFD               	goto	l3211
  6961     06D4                     u2750:
  6962     06D4                     l3195:
  6963     06D4  01A4               	clrf	___awmod@counter
  6964     06D5  0AA4               	incf	___awmod@counter,f
  6965     06D6  2EE0               	goto	l3201
  6966     06D7                     l3197:
  6967     06D7  3001               	movlw	1
  6968     06D8                     u2765:
  6969     06D8  35A0               	lslf	___awmod@divisor,f
  6970     06D9  0DA1               	rlf	___awmod@divisor+1,f
  6971     06DA  0B89               	decfsz	9,f
  6972     06DB  2ED8               	goto	u2765
  6973     06DC                     l3199:
  6974     06DC  3001               	movlw	1
  6975     06DD  00F4               	movwf	??___awmod
  6976     06DE  0874               	movf	??___awmod,w
  6977     06DF  07A4               	addwf	___awmod@counter,f
  6978     06E0                     l3201:
  6979     06E0  1FA1               	btfss	___awmod@divisor+1,7
  6980     06E1  2EE3               	goto	u2771
  6981     06E2  2EE4               	goto	u2770
  6982     06E3                     u2771:
  6983     06E3  2ED7               	goto	l3197
  6984     06E4                     u2770:
  6985     06E4                     l3203:
  6986     06E4  0821               	movf	___awmod@divisor+1,w
  6987     06E5  0223               	subwf	___awmod@dividend+1,w
  6988     06E6  1D03               	skipz
  6989     06E7  2EEA               	goto	u2785
  6990     06E8  0820               	movf	___awmod@divisor,w
  6991     06E9  0222               	subwf	___awmod@dividend,w
  6992     06EA                     u2785:
  6993     06EA  1C03               	skipc
  6994     06EB  2EED               	goto	u2781
  6995     06EC  2EEE               	goto	u2780
  6996     06ED                     u2781:
  6997     06ED  2EF2               	goto	l3207
  6998     06EE                     u2780:
  6999     06EE                     l3205:
  7000     06EE  0820               	movf	___awmod@divisor,w
  7001     06EF  02A2               	subwf	___awmod@dividend,f
  7002     06F0  0821               	movf	___awmod@divisor+1,w
  7003     06F1  3BA3               	subwfb	___awmod@dividend+1,f
  7004     06F2                     l3207:
  7005     06F2  3001               	movlw	1
  7006     06F3                     u2795:
  7007     06F3  36A1               	lsrf	___awmod@divisor+1,f
  7008     06F4  0CA0               	rrf	___awmod@divisor,f
  7009     06F5  0B89               	decfsz	9,f
  7010     06F6  2EF3               	goto	u2795
  7011     06F7                     l3209:
  7012     06F7  3001               	movlw	1
  7013     06F8  02A4               	subwf	___awmod@counter,f
  7014     06F9  1D03               	btfss	3,2
  7015     06FA  2EFC               	goto	u2801
  7016     06FB  2EFD               	goto	u2800
  7017     06FC                     u2801:
  7018     06FC  2EE4               	goto	l3203
  7019     06FD                     u2800:
  7020     06FD                     l3211:
  7021     06FD  0825               	movf	___awmod@sign,w
  7022     06FE  1903               	btfsc	3,2
  7023     06FF  2F01               	goto	u2811
  7024     0700  2F02               	goto	u2810
  7025     0701                     u2811:
  7026     0701  2F07               	goto	l3215
  7027     0702                     u2810:
  7028     0702                     l3213:
  7029     0702  09A2               	comf	___awmod@dividend,f
  7030     0703  09A3               	comf	___awmod@dividend+1,f
  7031     0704  0AA2               	incf	___awmod@dividend,f
  7032     0705  1903               	skipnz
  7033     0706  0AA3               	incf	___awmod@dividend+1,f
  7034     0707                     l3215:
  7035     0707  0823               	movf	___awmod@dividend+1,w
  7036     0708  00A1               	movwf	?___awmod+1
  7037     0709  0822               	movf	___awmod@dividend,w
  7038     070A  00A0               	movwf	?___awmod
  7039     070B                     l809:
  7040     070B  0008               	return
  7041     070C                     __end_of___awmod:
  7042                           
  7043                           	psect	text26
  7044     05A9                     __ptext26:	
  7045 ;; *************** function ___awdiv *****************
  7046 ;; Defined at:
  7047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  divisor         2    0[BANK0 ] int 
  7050 ;;  dividend        2    2[BANK0 ] int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  quotient        2    6[BANK0 ] int 
  7053 ;;  sign            1    5[BANK0 ] unsigned char 
  7054 ;;  counter         1    4[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  2    0[BANK0 ] int 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:        9 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 3
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_LcdPrintFloatS
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078     05A9                     ___awdiv:	
  7079                           ;psect for function ___awdiv
  7080                           
  7081     05A9                     l3137:	
  7082                           ;incstack = 0
  7083                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7084                           
  7085     05A9  0020               	movlb	0	; select bank0
  7086     05AA  01A5               	clrf	___awdiv@sign
  7087     05AB                     l3139:
  7088     05AB  1FA1               	btfss	___awdiv@divisor+1,7
  7089     05AC  2DAE               	goto	u2631
  7090     05AD  2DAF               	goto	u2630
  7091     05AE                     u2631:
  7092     05AE  2DB6               	goto	l3145
  7093     05AF                     u2630:
  7094     05AF                     l3141:
  7095     05AF  09A0               	comf	___awdiv@divisor,f
  7096     05B0  09A1               	comf	___awdiv@divisor+1,f
  7097     05B1  0AA0               	incf	___awdiv@divisor,f
  7098     05B2  1903               	skipnz
  7099     05B3  0AA1               	incf	___awdiv@divisor+1,f
  7100     05B4                     l3143:
  7101     05B4  01A5               	clrf	___awdiv@sign
  7102     05B5  0AA5               	incf	___awdiv@sign,f
  7103     05B6                     l3145:
  7104     05B6  1FA3               	btfss	___awdiv@dividend+1,7
  7105     05B7  2DB9               	goto	u2641
  7106     05B8  2DBA               	goto	u2640
  7107     05B9                     u2641:
  7108     05B9  2DC3               	goto	l3151
  7109     05BA                     u2640:
  7110     05BA                     l3147:
  7111     05BA  09A2               	comf	___awdiv@dividend,f
  7112     05BB  09A3               	comf	___awdiv@dividend+1,f
  7113     05BC  0AA2               	incf	___awdiv@dividend,f
  7114     05BD  1903               	skipnz
  7115     05BE  0AA3               	incf	___awdiv@dividend+1,f
  7116     05BF                     l3149:
  7117     05BF  3001               	movlw	1
  7118     05C0  00F4               	movwf	??___awdiv
  7119     05C1  0874               	movf	??___awdiv,w
  7120     05C2  06A5               	xorwf	___awdiv@sign,f
  7121     05C3                     l3151:
  7122     05C3  01A6               	clrf	___awdiv@quotient
  7123     05C4  01A7               	clrf	___awdiv@quotient+1
  7124     05C5                     l3153:
  7125     05C5  0820               	movf	___awdiv@divisor,w
  7126     05C6  0421               	iorwf	___awdiv@divisor+1,w
  7127     05C7  1903               	btfsc	3,2
  7128     05C8  2DCA               	goto	u2651
  7129     05C9  2DCB               	goto	u2650
  7130     05CA                     u2651:
  7131     05CA  2DFA               	goto	l3173
  7132     05CB                     u2650:
  7133     05CB                     l3155:
  7134     05CB  01A4               	clrf	___awdiv@counter
  7135     05CC  0AA4               	incf	___awdiv@counter,f
  7136     05CD  2DD7               	goto	l3161
  7137     05CE                     l3157:
  7138     05CE  3001               	movlw	1
  7139     05CF                     u2665:
  7140     05CF  35A0               	lslf	___awdiv@divisor,f
  7141     05D0  0DA1               	rlf	___awdiv@divisor+1,f
  7142     05D1  0B89               	decfsz	9,f
  7143     05D2  2DCF               	goto	u2665
  7144     05D3                     l3159:
  7145     05D3  3001               	movlw	1
  7146     05D4  00F4               	movwf	??___awdiv
  7147     05D5  0874               	movf	??___awdiv,w
  7148     05D6  07A4               	addwf	___awdiv@counter,f
  7149     05D7                     l3161:
  7150     05D7  1FA1               	btfss	___awdiv@divisor+1,7
  7151     05D8  2DDA               	goto	u2671
  7152     05D9  2DDB               	goto	u2670
  7153     05DA                     u2671:
  7154     05DA  2DCE               	goto	l3157
  7155     05DB                     u2670:
  7156     05DB                     l3163:
  7157     05DB  3001               	movlw	1
  7158     05DC                     u2685:
  7159     05DC  35A6               	lslf	___awdiv@quotient,f
  7160     05DD  0DA7               	rlf	___awdiv@quotient+1,f
  7161     05DE  0B89               	decfsz	9,f
  7162     05DF  2DDC               	goto	u2685
  7163     05E0  0821               	movf	___awdiv@divisor+1,w
  7164     05E1  0223               	subwf	___awdiv@dividend+1,w
  7165     05E2  1D03               	skipz
  7166     05E3  2DE6               	goto	u2695
  7167     05E4  0820               	movf	___awdiv@divisor,w
  7168     05E5  0222               	subwf	___awdiv@dividend,w
  7169     05E6                     u2695:
  7170     05E6  1C03               	skipc
  7171     05E7  2DE9               	goto	u2691
  7172     05E8  2DEA               	goto	u2690
  7173     05E9                     u2691:
  7174     05E9  2DEF               	goto	l3169
  7175     05EA                     u2690:
  7176     05EA                     l3165:
  7177     05EA  0820               	movf	___awdiv@divisor,w
  7178     05EB  02A2               	subwf	___awdiv@dividend,f
  7179     05EC  0821               	movf	___awdiv@divisor+1,w
  7180     05ED  3BA3               	subwfb	___awdiv@dividend+1,f
  7181     05EE                     l3167:
  7182     05EE  1426               	bsf	___awdiv@quotient,0
  7183     05EF                     l3169:
  7184     05EF  3001               	movlw	1
  7185     05F0                     u2705:
  7186     05F0  36A1               	lsrf	___awdiv@divisor+1,f
  7187     05F1  0CA0               	rrf	___awdiv@divisor,f
  7188     05F2  0B89               	decfsz	9,f
  7189     05F3  2DF0               	goto	u2705
  7190     05F4                     l3171:
  7191     05F4  3001               	movlw	1
  7192     05F5  02A4               	subwf	___awdiv@counter,f
  7193     05F6  1D03               	btfss	3,2
  7194     05F7  2DF9               	goto	u2711
  7195     05F8  2DFA               	goto	u2710
  7196     05F9                     u2711:
  7197     05F9  2DDB               	goto	l3163
  7198     05FA                     u2710:
  7199     05FA                     l3173:
  7200     05FA  0825               	movf	___awdiv@sign,w
  7201     05FB  1903               	btfsc	3,2
  7202     05FC  2DFE               	goto	u2721
  7203     05FD  2DFF               	goto	u2720
  7204     05FE                     u2721:
  7205     05FE  2E04               	goto	l3177
  7206     05FF                     u2720:
  7207     05FF                     l3175:
  7208     05FF  09A6               	comf	___awdiv@quotient,f
  7209     0600  09A7               	comf	___awdiv@quotient+1,f
  7210     0601  0AA6               	incf	___awdiv@quotient,f
  7211     0602  1903               	skipnz
  7212     0603  0AA7               	incf	___awdiv@quotient+1,f
  7213     0604                     l3177:
  7214     0604  0827               	movf	___awdiv@quotient+1,w
  7215     0605  00A1               	movwf	?___awdiv+1
  7216     0606  0826               	movf	___awdiv@quotient,w
  7217     0607  00A0               	movwf	?___awdiv
  7218     0608                     l796:
  7219     0608  0008               	return
  7220     0609                     __end_of___awdiv:
  7221                           
  7222                           	psect	text27
  7223     0DBE                     __ptext27:	
  7224 ;; *************** function _LcdPrintCharS *****************
  7225 ;; Defined at:
  7226 ;;		line 159 in file "lcd.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  x               1    wreg     unsigned char 
  7229 ;;  y               1    4[COMMON] unsigned char 
  7230 ;;  c               1    5[COMMON] unsigned char 
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  x               1    3[BANK0 ] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      void 
  7235 ;; Registers used:
  7236 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;Total ram usage:        6 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; Hardware stack levels required when called: 3
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_FSM_ModeControl
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256     0DBE                     _LcdPrintCharS:	
  7257                           ;psect for function _LcdPrintCharS
  7258                           
  7259                           
  7260                           ;incstack = 0
  7261                           ; Regs used in _LcdPrintCharS: [wreg+fsr1l+fsr1h+status,2+status,0]
  7262                           ;LcdPrintCharS@x stored from wreg
  7263     0DBE  0020               	movlb	0	; select bank0
  7264     0DBF  00A3               	movwf	LcdPrintCharS@x
  7265     0DC0                     l3305:
  7266                           
  7267                           ;lcd.c: 159: void LcdPrintCharS(unsigned char x, unsigned char y, unsigned char c);lcd.c
      +                          : 160: {;lcd.c: 161:     current_row = x%2;
  7268     0DC0  0823               	movf	LcdPrintCharS@x,w
  7269     0DC1  3901               	andlw	1
  7270     0DC2  00A0               	movwf	??_LcdPrintCharS
  7271     0DC3  01A1               	clrf	??_LcdPrintCharS+1
  7272     0DC4  0820               	movf	??_LcdPrintCharS,w
  7273     0DC5  00E0               	movwf	_current_row
  7274     0DC6  0821               	movf	??_LcdPrintCharS+1,w
  7275     0DC7  00E1               	movwf	_current_row+1
  7276                           
  7277                           ;lcd.c: 162:     current_col = y%16;
  7278     0DC8  0874               	movf	LcdPrintCharS@y,w
  7279     0DC9  390F               	andlw	15
  7280     0DCA  00A0               	movwf	??_LcdPrintCharS
  7281     0DCB  01A1               	clrf	??_LcdPrintCharS+1
  7282     0DCC  0820               	movf	??_LcdPrintCharS,w
  7283     0DCD  00DE               	movwf	_current_col
  7284     0DCE  0821               	movf	??_LcdPrintCharS+1,w
  7285     0DCF  00DF               	movwf	_current_col+1
  7286     0DD0                     l3307:
  7287                           
  7288                           ;lcd.c: 163:     LcdScreen[current_row][ current_col] = c;
  7289     0DD0  0860               	movf	_current_row,w
  7290     0DD1  00A0               	movwf	??_LcdPrintCharS
  7291     0DD2  3004               	movlw	4
  7292     0DD3                     u2975:
  7293     0DD3  35A0               	lslf	??_LcdPrintCharS,f
  7294     0DD4  0B89               	decfsz	9,f
  7295     0DD5  2DD3               	goto	u2975
  7296     0DD6  30A0               	movlw	(low (_LcdScreen| 0))& (0+255)
  7297     0DD7  0720               	addwf	??_LcdPrintCharS,w
  7298     0DD8  00A1               	movwf	??_LcdPrintCharS+1
  7299     0DD9  085E               	movf	_current_col,w
  7300     0DDA  0721               	addwf	??_LcdPrintCharS+1,w
  7301     0DDB  00A2               	movwf	??_LcdPrintCharS+2
  7302     0DDC  0822               	movf	??_LcdPrintCharS+2,w
  7303     0DDD  0086               	movwf	6
  7304     0DDE  0187               	clrf	7
  7305     0DDF  0875               	movf	LcdPrintCharS@c,w
  7306     0DE0  0081               	movwf	1
  7307     0DE1                     l395:
  7308     0DE1  0008               	return
  7309     0DE2                     __end_of_LcdPrintCharS:
  7310                           
  7311                           	psect	text28
  7312     0C42                     __ptext28:	
  7313 ;; *************** function _EEP_SaveCupTotal *****************
  7314 ;; Defined at:
  7315 ;;		line 39 in file "eeprom.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;		None
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		wreg, status,2, status,0, pclath, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;Total ram usage:        0 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; Hardware stack levels required when called: 4
  7336 ;; This function calls:
  7337 ;;		_eeprom_write
  7338 ;; This function is called by:
  7339 ;;		_FSM_ModeControl
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343     0C42                     _EEP_SaveCupTotal:	
  7344                           ;psect for function _EEP_SaveCupTotal
  7345                           
  7346     0C42                     l3309:	
  7347                           ;incstack = 0
  7348                           ; Regs used in _EEP_SaveCupTotal: [wreg+status,2+status,0+pclath+cstack]
  7349                           
  7350                           
  7351                           ;eeprom.c: 40:     eeprom_write(0x02, _cupTotal);
  7352     0C42  0020               	movlb	0	; select bank0
  7353     0C43  0866               	movf	__cupTotal,w
  7354     0C44  00F4               	movwf	eeprom_write@value
  7355     0C45  3002               	movlw	2
  7356     0C46  318E  268F  318C   	fcall	_eeprom_write
  7357                           
  7358                           ;eeprom.c: 41:     eeprom_write(0x03, _cupTotal >> 8);
  7359     0C49  0020               	movlb	0	; select bank0
  7360     0C4A  0867               	movf	__cupTotal+1,w
  7361     0C4B  00F4               	movwf	eeprom_write@value
  7362     0C4C  3003               	movlw	3
  7363     0C4D  318E  268F  318C   	fcall	_eeprom_write
  7364     0C50                     l449:
  7365     0C50  0008               	return
  7366     0C51                     __end_of_EEP_SaveCupTotal:
  7367                           
  7368                           	psect	text29
  7369     0C26                     __ptext29:	
  7370 ;; *************** function _EEP_SaveAutoTime *****************
  7371 ;; Defined at:
  7372 ;;		line 34 in file "eeprom.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;		None
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;		None
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      void 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, status,0, pclath, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;Total ram usage:        0 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 4
  7393 ;; This function calls:
  7394 ;;		_eeprom_write
  7395 ;; This function is called by:
  7396 ;;		_FSM_ModeControl
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400     0C26                     _EEP_SaveAutoTime:	
  7401                           ;psect for function _EEP_SaveAutoTime
  7402                           
  7403     0C26                     l3303:	
  7404                           ;incstack = 0
  7405                           ; Regs used in _EEP_SaveAutoTime: [wreg+status,2+status,0+pclath+cstack]
  7406                           
  7407                           
  7408                           ;eeprom.c: 35:     eeprom_write(0x00, _timeAuto);
  7409     0C26  0878               	movf	__timeAuto,w
  7410     0C27  00F4               	movwf	eeprom_write@value
  7411     0C28  3000               	movlw	0
  7412     0C29  318E  268F  318C   	fcall	_eeprom_write
  7413                           
  7414                           ;eeprom.c: 36:     eeprom_write(0x01, _timeAuto >> 8);
  7415     0C2C  0879               	movf	__timeAuto+1,w
  7416     0C2D  00F4               	movwf	eeprom_write@value
  7417     0C2E  3001               	movlw	1
  7418     0C2F  318E  268F  318C   	fcall	_eeprom_write
  7419     0C32                     l446:
  7420     0C32  0008               	return
  7421     0C33                     __end_of_EEP_SaveAutoTime:
  7422                           
  7423                           	psect	text30
  7424     0E8F                     __ptext30:	
  7425 ;; *************** function _eeprom_write *****************
  7426 ;; Defined at:
  7427 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  addr            1    wreg     unsigned char 
  7430 ;;  value           1    4[COMMON] unsigned char 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  addr            1    5[COMMON] unsigned char 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7442 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;Total ram usage:        4 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 3
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_EEP_SaveAutoTime
  7453 ;;		_EEP_SaveCupTotal
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457     0E8F                     _eeprom_write:	
  7458                           ;psect for function _eeprom_write
  7459                           
  7460                           
  7461                           ;incstack = 0
  7462                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  7463                           ;eeprom_write@addr stored from wreg
  7464     0E8F  00F5               	movwf	eeprom_write@addr
  7465     0E90                     l632:	
  7466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  7467                           
  7468     0E90                     l633:
  7469     0E90  0023               	movlb	3	; select bank3
  7470     0E91  1895               	btfsc	21,1	;volsfr
  7471     0E92  2E94               	goto	u2591
  7472     0E93  2E95               	goto	u2590
  7473     0E94                     u2591:
  7474     0E94  2E90               	goto	l633
  7475     0E95                     u2590:
  7476     0E95                     l3113:
  7477     0E95  0875               	movf	eeprom_write@addr,w
  7478     0E96  0020               	movlb	0	; select bank0
  7479     0E97  00A0               	movwf	??_eeprom_write
  7480     0E98  01A1               	clrf	??_eeprom_write+1
  7481     0E99  0820               	movf	??_eeprom_write,w
  7482     0E9A  0023               	movlb	3	; select bank3
  7483     0E9B  0091               	movwf	17	;volatile
  7484     0E9C  0020               	movlb	0	; select bank0
  7485     0E9D  0821               	movf	??_eeprom_write+1,w
  7486     0E9E  0023               	movlb	3	; select bank3
  7487     0E9F  0092               	movwf	18	;volatile
  7488     0EA0  0874               	movf	eeprom_write@value,w
  7489     0EA1  0093               	movwf	19	;volatile
  7490     0EA2                     l3115:
  7491     0EA2  303F               	movlw	63
  7492     0EA3  0020               	movlb	0	; select bank0
  7493     0EA4  00A0               	movwf	??_eeprom_write
  7494     0EA5  0820               	movf	??_eeprom_write,w
  7495     0EA6  0023               	movlb	3	; select bank3
  7496     0EA7  0595               	andwf	21,f	;volsfr
  7497     0EA8                     l3117:
  7498     0EA8  0020               	movlb	0	; select bank0
  7499     0EA9  1003               	bcf	3,0	;volatile
  7500     0EAA                     l3119:
  7501     0EAA  1F8B               	btfss	11,7	;volatile
  7502     0EAB  2EAD               	goto	u2601
  7503     0EAC  2EAE               	goto	u2600
  7504     0EAD                     u2601:
  7505     0EAD  2EAF               	goto	l636
  7506     0EAE                     u2600:
  7507     0EAE                     l3121:
  7508     0EAE  1403               	bsf	3,0	;volatile
  7509     0EAF                     l636:
  7510     0EAF  138B               	bcf	11,7	;volatile
  7511     0EB0  0023               	movlb	3	; select bank3
  7512     0EB1  1515               	bsf	21,2	;volsfr
  7513     0EB2                     l3123:
  7514     0EB2  3055               	movlw	85
  7515     0EB3  0096               	movwf	22	;volsfr
  7516     0EB4  30AA               	movlw	170
  7517     0EB5  0096               	movwf	22	;volsfr
  7518     0EB6                     l3125:
  7519     0EB6  1495               	bsf	21,1	;volsfr
  7520     0EB7                     l3127:
  7521     0EB7  1115               	bcf	21,2	;volsfr
  7522     0EB8                     l3129:
  7523     0EB8  0020               	movlb	0	; select bank0
  7524     0EB9  1C03               	btfss	3,0	;volatile
  7525     0EBA  2EBC               	goto	u2611
  7526     0EBB  2EBD               	goto	u2610
  7527     0EBC                     u2611:
  7528     0EBC  2EBE               	goto	l639
  7529     0EBD                     u2610:
  7530     0EBD                     l3131:
  7531     0EBD  178B               	bsf	11,7	;volatile
  7532     0EBE                     l639:
  7533     0EBE  0008               	return
  7534     0EBF                     __end_of_eeprom_write:
  7535                           
  7536                           	psect	text31
  7537     0C33                     __ptext31:	
  7538 ;; *************** function _BTN_IsPressed_s *****************
  7539 ;; Defined at:
  7540 ;;		line 67 in file "button.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  index           1    wreg     unsigned char 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  index           1    4[COMMON] unsigned char 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      unsigned char 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;Total ram usage:        1 bytes
  7559 ;; Hardware stack levels used: 1
  7560 ;; Hardware stack levels required when called: 3
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		_FSM_ModeControl
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568     0C33                     _BTN_IsPressed_s:	
  7569                           ;psect for function _BTN_IsPressed_s
  7570                           
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in _BTN_IsPressed_s: [wreg+fsr1l+fsr1h+status,2+status,0]
  7574                           ;BTN_IsPressed_s@index stored from wreg
  7575     0C33  00F4               	movwf	BTN_IsPressed_s@index
  7576     0C34                     l2409:
  7577                           
  7578                           ;button.c: 68:     if(index >= 4) return 0;
  7579     0C34  3004               	movlw	4
  7580     0C35  0274               	subwf	BTN_IsPressed_s@index,w
  7581     0C36  1C03               	skipc
  7582     0C37  2C39               	goto	u1901
  7583     0C38  2C3A               	goto	u1900
  7584     0C39                     u1901:
  7585     0C39  2C3C               	goto	l2415
  7586     0C3A                     u1900:
  7587     0C3A                     l2411:
  7588     0C3A  3000               	movlw	0
  7589     0C3B  2C41               	goto	l51
  7590     0C3C                     l2415:
  7591                           
  7592                           ;button.c: 69:     return flagForButtonPress_s[index];
  7593     0C3C  0874               	movf	BTN_IsPressed_s@index,w
  7594     0C3D  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  7595     0C3E  0086               	movwf	6
  7596     0C3F  0187               	clrf	7
  7597     0C40  0801               	movf	1,w
  7598     0C41                     l51:
  7599     0C41  0008               	return
  7600     0C42                     __end_of_BTN_IsPressed_s:
  7601                           
  7602                           	psect	text32
  7603     0E0A                     __ptext32:	
  7604 ;; *************** function _BTN_IsPressed_ms *****************
  7605 ;; Defined at:
  7606 ;;		line 72 in file "button.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  index           1    wreg     unsigned char 
  7609 ;;  milisec         2   12[BANK0 ] unsigned int 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;  index           1   16[BANK0 ] unsigned char 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      unsigned char 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;Total ram usage:        5 bytes
  7626 ;; Hardware stack levels used: 1
  7627 ;; Hardware stack levels required when called: 4
  7628 ;; This function calls:
  7629 ;;		___lwdiv
  7630 ;; This function is called by:
  7631 ;;		_FSM_ModeControl
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635     0E0A                     _BTN_IsPressed_ms:	
  7636                           ;psect for function _BTN_IsPressed_ms
  7637                           
  7638                           
  7639                           ;incstack = 0
  7640                           ; Regs used in _BTN_IsPressed_ms: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7641                           ;BTN_IsPressed_ms@index stored from wreg
  7642     0E0A  0020               	movlb	0	; select bank0
  7643     0E0B  00B0               	movwf	BTN_IsPressed_ms@index
  7644     0E0C                     l2419:
  7645                           
  7646                           ;button.c: 73:     if(index >= 4) return 0;
  7647     0E0C  3004               	movlw	4
  7648     0E0D  0230               	subwf	BTN_IsPressed_ms@index,w
  7649     0E0E  1C03               	skipc
  7650     0E0F  2E11               	goto	u1911
  7651     0E10  2E12               	goto	u1910
  7652     0E11                     u1911:
  7653     0E11  2E14               	goto	l2425
  7654     0E12                     u1910:
  7655     0E12                     l2421:
  7656     0E12  3000               	movlw	0
  7657     0E13  2E34               	goto	l55
  7658     0E14                     l2425:
  7659                           
  7660                           ;button.c: 74:     return counterForButtonPress[index] > milisec / 10;
  7661     0E14  3530               	lslf	BTN_IsPressed_ms@index,w
  7662     0E15  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  7663     0E16  0086               	movwf	6
  7664     0E17  0187               	clrf	7
  7665     0E18  3F40               	moviw [0]fsr1
  7666     0E19  00AE               	movwf	??_BTN_IsPressed_ms
  7667     0E1A  3F41               	moviw [1]fsr1
  7668     0E1B  00AF               	movwf	??_BTN_IsPressed_ms+1
  7669     0E1C  300A               	movlw	10
  7670     0E1D  00A4               	movwf	___lwdiv@divisor
  7671     0E1E  3000               	movlw	0
  7672     0E1F  00A5               	movwf	___lwdiv@divisor+1
  7673     0E20  082D               	movf	BTN_IsPressed_ms@milisec+1,w
  7674     0E21  00A7               	movwf	___lwdiv@dividend+1
  7675     0E22  082C               	movf	BTN_IsPressed_ms@milisec,w
  7676     0E23  00A6               	movwf	___lwdiv@dividend
  7677     0E24  3187  2799  318E   	fcall	___lwdiv
  7678     0E27  0020               	movlb	0	; select bank0
  7679     0E28  082F               	movf	??_BTN_IsPressed_ms+1,w
  7680     0E29  0225               	subwf	?___lwdiv+1,w
  7681     0E2A  1D03               	skipz
  7682     0E2B  2E2E               	goto	u1925
  7683     0E2C  082E               	movf	??_BTN_IsPressed_ms,w
  7684     0E2D  0224               	subwf	?___lwdiv,w
  7685     0E2E                     u1925:
  7686     0E2E  1C03               	skipc
  7687     0E2F  2E31               	goto	u1921
  7688     0E30  2E33               	goto	u1920
  7689     0E31                     u1921:
  7690     0E31  3001               	movlw	1
  7691     0E32  2E34               	goto	u1930
  7692     0E33                     u1920:
  7693     0E33  3000               	movlw	0
  7694     0E34                     u1930:
  7695     0E34                     l55:
  7696     0E34  0008               	return
  7697     0E35                     __end_of_BTN_IsPressed_ms:
  7698                           
  7699                           	psect	text33
  7700     0799                     __ptext33:	
  7701 ;; *************** function ___lwdiv *****************
  7702 ;; Defined at:
  7703 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  divisor         2    4[BANK0 ] unsigned int 
  7706 ;;  dividend        2    6[BANK0 ] unsigned int 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  quotient        2    9[BANK0 ] unsigned int 
  7709 ;;  counter         1   11[BANK0 ] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  2    4[BANK0 ] unsigned int 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;Total ram usage:        8 bytes
  7724 ;; Hardware stack levels used: 1
  7725 ;; Hardware stack levels required when called: 3
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_BTN_IsPressed_ms
  7730 ;;		_TMR1_SetTime_ms
  7731 ;;		_LcdPrintFloatS
  7732 ;;		_FSM_ModeControl
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736     0799                     ___lwdiv:	
  7737                           ;psect for function ___lwdiv
  7738                           
  7739     0799                     l2301:	
  7740                           ;incstack = 0
  7741                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7742                           
  7743     0799  0020               	movlb	0	; select bank0
  7744     079A  01A9               	clrf	___lwdiv@quotient
  7745     079B  01AA               	clrf	___lwdiv@quotient+1
  7746     079C                     l2303:
  7747     079C  0824               	movf	___lwdiv@divisor,w
  7748     079D  0425               	iorwf	___lwdiv@divisor+1,w
  7749     079E  1903               	btfsc	3,2
  7750     079F  2FA1               	goto	u1671
  7751     07A0  2FA2               	goto	u1670
  7752     07A1                     u1671:
  7753     07A1  2FD1               	goto	l2323
  7754     07A2                     u1670:
  7755     07A2                     l2305:
  7756     07A2  01AB               	clrf	___lwdiv@counter
  7757     07A3  0AAB               	incf	___lwdiv@counter,f
  7758     07A4  2FAE               	goto	l2311
  7759     07A5                     l2307:
  7760     07A5  3001               	movlw	1
  7761     07A6                     u1685:
  7762     07A6  35A4               	lslf	___lwdiv@divisor,f
  7763     07A7  0DA5               	rlf	___lwdiv@divisor+1,f
  7764     07A8  0B89               	decfsz	9,f
  7765     07A9  2FA6               	goto	u1685
  7766     07AA                     l2309:
  7767     07AA  3001               	movlw	1
  7768     07AB  00A8               	movwf	??___lwdiv
  7769     07AC  0828               	movf	??___lwdiv,w
  7770     07AD  07AB               	addwf	___lwdiv@counter,f
  7771     07AE                     l2311:
  7772     07AE  1FA5               	btfss	___lwdiv@divisor+1,7
  7773     07AF  2FB1               	goto	u1691
  7774     07B0  2FB2               	goto	u1690
  7775     07B1                     u1691:
  7776     07B1  2FA5               	goto	l2307
  7777     07B2                     u1690:
  7778     07B2                     l2313:
  7779     07B2  3001               	movlw	1
  7780     07B3                     u1705:
  7781     07B3  35A9               	lslf	___lwdiv@quotient,f
  7782     07B4  0DAA               	rlf	___lwdiv@quotient+1,f
  7783     07B5  0B89               	decfsz	9,f
  7784     07B6  2FB3               	goto	u1705
  7785     07B7  0825               	movf	___lwdiv@divisor+1,w
  7786     07B8  0227               	subwf	___lwdiv@dividend+1,w
  7787     07B9  1D03               	skipz
  7788     07BA  2FBD               	goto	u1715
  7789     07BB  0824               	movf	___lwdiv@divisor,w
  7790     07BC  0226               	subwf	___lwdiv@dividend,w
  7791     07BD                     u1715:
  7792     07BD  1C03               	skipc
  7793     07BE  2FC0               	goto	u1711
  7794     07BF  2FC1               	goto	u1710
  7795     07C0                     u1711:
  7796     07C0  2FC6               	goto	l2319
  7797     07C1                     u1710:
  7798     07C1                     l2315:
  7799     07C1  0824               	movf	___lwdiv@divisor,w
  7800     07C2  02A6               	subwf	___lwdiv@dividend,f
  7801     07C3  0825               	movf	___lwdiv@divisor+1,w
  7802     07C4  3BA7               	subwfb	___lwdiv@dividend+1,f
  7803     07C5                     l2317:
  7804     07C5  1429               	bsf	___lwdiv@quotient,0
  7805     07C6                     l2319:
  7806     07C6  3001               	movlw	1
  7807     07C7                     u1725:
  7808     07C7  36A5               	lsrf	___lwdiv@divisor+1,f
  7809     07C8  0CA4               	rrf	___lwdiv@divisor,f
  7810     07C9  0B89               	decfsz	9,f
  7811     07CA  2FC7               	goto	u1725
  7812     07CB                     l2321:
  7813     07CB  3001               	movlw	1
  7814     07CC  02AB               	subwf	___lwdiv@counter,f
  7815     07CD  1D03               	btfss	3,2
  7816     07CE  2FD0               	goto	u1731
  7817     07CF  2FD1               	goto	u1730
  7818     07D0                     u1731:
  7819     07D0  2FB2               	goto	l2313
  7820     07D1                     u1730:
  7821     07D1                     l2323:
  7822     07D1  082A               	movf	___lwdiv@quotient+1,w
  7823     07D2  00A5               	movwf	?___lwdiv+1
  7824     07D3  0829               	movf	___lwdiv@quotient,w
  7825     07D4  00A4               	movwf	?___lwdiv
  7826     07D5                     l923:
  7827     07D5  0008               	return
  7828     07D6                     __end_of___lwdiv:
  7829                           
  7830                           	psect	text34
  7831     0C7A                     __ptext34:	
  7832 ;; *************** function _BTN_IsPressed *****************
  7833 ;; Defined at:
  7834 ;;		line 59 in file "button.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  index           1    wreg     unsigned char 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  index           1    5[COMMON] unsigned char 
  7839 ;;  result          1    4[COMMON] unsigned char 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      unsigned char 
  7842 ;; Registers used:
  7843 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;Total ram usage:        2 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 3
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_FSM_ModeControl
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863     0C7A                     _BTN_IsPressed:	
  7864                           ;psect for function _BTN_IsPressed
  7865                           
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _BTN_IsPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  7869                           ;BTN_IsPressed@index stored from wreg
  7870     0C7A  00F5               	movwf	BTN_IsPressed@index
  7871     0C7B                     l2395:
  7872                           
  7873                           ;button.c: 60:     unsigned char result = flagForButtonPress[index];
  7874     0C7B  0875               	movf	BTN_IsPressed@index,w
  7875     0C7C  3E56               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  7876     0C7D  0086               	movwf	6
  7877     0C7E  0187               	clrf	7
  7878     0C7F  0801               	movf	1,w
  7879     0C80  00F4               	movwf	BTN_IsPressed@result
  7880     0C81                     l2397:
  7881                           
  7882                           ;button.c: 61:     if(index >= 4) return 0;
  7883     0C81  3004               	movlw	4
  7884     0C82  0275               	subwf	BTN_IsPressed@index,w
  7885     0C83  1C03               	skipc
  7886     0C84  2C86               	goto	u1891
  7887     0C85  2C87               	goto	u1890
  7888     0C86                     u1891:
  7889     0C86  2C89               	goto	l2403
  7890     0C87                     u1890:
  7891     0C87                     l2399:
  7892     0C87  3000               	movlw	0
  7893     0C88  2C8F               	goto	l47
  7894     0C89                     l2403:
  7895                           
  7896                           ;button.c: 63:     flagForButtonPress[index] = 0;
  7897     0C89  0875               	movf	BTN_IsPressed@index,w
  7898     0C8A  3E56               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  7899     0C8B  0086               	movwf	6
  7900     0C8C  0187               	clrf	7
  7901     0C8D  0181               	clrf	1
  7902     0C8E                     l2405:
  7903                           
  7904                           ;button.c: 64:     return result;
  7905     0C8E  0874               	movf	BTN_IsPressed@result,w
  7906     0C8F                     l47:
  7907     0C8F  0008               	return
  7908     0C90                     __end_of_BTN_IsPressed:
  7909                           
  7910                           	psect	text35
  7911     0CBD                     __ptext35:	
  7912 ;; *************** function _BTN_IsHeld *****************
  7913 ;; Defined at:
  7914 ;;		line 53 in file "button.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  index           1    wreg     unsigned char 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  index           1    0[BANK0 ] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      unsigned char 
  7921 ;; Registers used:
  7922 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;Total ram usage:        3 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; Hardware stack levels required when called: 3
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_FSM_ModeControl
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942     0CBD                     _BTN_IsHeld:	
  7943                           ;psect for function _BTN_IsHeld
  7944                           
  7945                           
  7946                           ;incstack = 0
  7947                           ; Regs used in _BTN_IsHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
  7948                           ;BTN_IsHeld@index stored from wreg
  7949     0CBD  0020               	movlb	0	; select bank0
  7950     0CBE  00A0               	movwf	BTN_IsHeld@index
  7951     0CBF                     l3241:
  7952                           
  7953                           ;button.c: 54:     if(index >= 4) return 0;
  7954     0CBF  3004               	movlw	4
  7955     0CC0  0220               	subwf	BTN_IsHeld@index,w
  7956     0CC1  1C03               	skipc
  7957     0CC2  2CC4               	goto	u2881
  7958     0CC3  2CC5               	goto	u2880
  7959     0CC4                     u2881:
  7960     0CC4  2CC7               	goto	l3247
  7961     0CC5                     u2880:
  7962     0CC5                     l3243:
  7963     0CC5  3000               	movlw	0
  7964     0CC6  2CD3               	goto	l43
  7965     0CC7                     l3247:
  7966                           
  7967                           ;button.c: 56:     return counterForButtonPress[index] > 0;
  7968     0CC7  3520               	lslf	BTN_IsHeld@index,w
  7969     0CC8  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  7970     0CC9  0086               	movwf	6
  7971     0CCA  0187               	clrf	7
  7972     0CCB  0016               	moviw fsr1++
  7973     0CCC  0401               	iorwf	1,w
  7974     0CCD  1D03               	btfss	3,2
  7975     0CCE  2CD0               	goto	u2891
  7976     0CCF  2CD2               	goto	u2890
  7977     0CD0                     u2891:
  7978     0CD0  3001               	movlw	1
  7979     0CD1  2CD3               	goto	u2900
  7980     0CD2                     u2890:
  7981     0CD2  3000               	movlw	0
  7982     0CD3                     u2900:
  7983     0CD3                     l43:
  7984     0CD3  0008               	return
  7985     0CD4                     __end_of_BTN_IsHeld:
  7986                           
  7987                           	psect	text36
  7988     0F58                     __ptext36:	
  7989 ;; *************** function _DisplayLcdScreen *****************
  7990 ;; Defined at:
  7991 ;;		line 142 in file "lcd.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;		None
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  i               1   14[BANK0 ] unsigned char 
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  1    wreg      void 
  7998 ;; Registers used:
  7999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;Total ram usage:        2 bytes
  8010 ;; Hardware stack levels used: 1
  8011 ;; Hardware stack levels required when called: 7
  8012 ;; This function calls:
  8013 ;;		_lcd_print_char
  8014 ;;		_lcd_set_cursor
  8015 ;; This function is called by:
  8016 ;;		_main
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020     0F58                     _DisplayLcdScreen:	
  8021                           ;psect for function _DisplayLcdScreen
  8022                           
  8023     0F58                     l3659:	
  8024                           ;incstack = 0
  8025                           ; Regs used in _DisplayLcdScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8026                           
  8027                           
  8028                           ;lcd.c: 144:      unsigned char i;;lcd.c: 145:     lcd_set_cursor (0,0);
  8029     0F58  0020               	movlb	0	; select bank0
  8030     0F59  01A8               	clrf	lcd_set_cursor@column
  8031     0F5A  3000               	movlw	0
  8032     0F5B  318D  257A  318F   	fcall	_lcd_set_cursor
  8033     0F5E                     l3661:
  8034                           
  8035                           ;lcd.c: 146:     for (i = 0; i<16; i++)
  8036     0F5E  0020               	movlb	0	; select bank0
  8037     0F5F  01AE               	clrf	DisplayLcdScreen@i
  8038     0F60                     l3667:
  8039                           
  8040                           ;lcd.c: 147:         lcd_print_char(LcdScreen[0][i]);
  8041     0F60  082E               	movf	DisplayLcdScreen@i,w
  8042     0F61  3EA0               	addlw	(low (_LcdScreen| 0))& (0+255)
  8043     0F62  0086               	movwf	6
  8044     0F63  0187               	clrf	7
  8045     0F64  0801               	movf	1,w
  8046     0F65  318C  2409  318F   	fcall	_lcd_print_char
  8047     0F68                     l3669:
  8048     0F68  3001               	movlw	1
  8049     0F69  0020               	movlb	0	; select bank0
  8050     0F6A  00AD               	movwf	??_DisplayLcdScreen
  8051     0F6B  082D               	movf	??_DisplayLcdScreen,w
  8052     0F6C  07AE               	addwf	DisplayLcdScreen@i,f
  8053     0F6D                     l3671:
  8054     0F6D  3010               	movlw	16
  8055     0F6E  022E               	subwf	DisplayLcdScreen@i,w
  8056     0F6F  1C03               	skipc
  8057     0F70  2F72               	goto	u3311
  8058     0F71  2F73               	goto	u3310
  8059     0F72                     u3311:
  8060     0F72  2F60               	goto	l3667
  8061     0F73                     u3310:
  8062     0F73                     l3673:
  8063                           
  8064                           ;lcd.c: 148:     lcd_set_cursor (1,0);
  8065     0F73  01A8               	clrf	lcd_set_cursor@column
  8066     0F74  3001               	movlw	1
  8067     0F75  318D  257A  318F   	fcall	_lcd_set_cursor
  8068     0F78                     l3675:
  8069                           
  8070                           ;lcd.c: 149:     for (i = 0; i<16; i++)
  8071     0F78  0020               	movlb	0	; select bank0
  8072     0F79  01AE               	clrf	DisplayLcdScreen@i
  8073     0F7A                     l3681:
  8074                           
  8075                           ;lcd.c: 150:         lcd_print_char(LcdScreen[1][i]);
  8076     0F7A  082E               	movf	DisplayLcdScreen@i,w
  8077     0F7B  3EB0               	addlw	(low ((_LcdScreen| 0+16)))& (0+255)
  8078     0F7C  0086               	movwf	6
  8079     0F7D  0187               	clrf	7
  8080     0F7E  0801               	movf	1,w
  8081     0F7F  318C  2409  318F   	fcall	_lcd_print_char
  8082     0F82                     l3683:
  8083     0F82  3001               	movlw	1
  8084     0F83  0020               	movlb	0	; select bank0
  8085     0F84  00AD               	movwf	??_DisplayLcdScreen
  8086     0F85  082D               	movf	??_DisplayLcdScreen,w
  8087     0F86  07AE               	addwf	DisplayLcdScreen@i,f
  8088     0F87                     l3685:
  8089     0F87  3010               	movlw	16
  8090     0F88  022E               	subwf	DisplayLcdScreen@i,w
  8091     0F89  1C03               	skipc
  8092     0F8A  2F8C               	goto	u3321
  8093     0F8B  2F8D               	goto	u3320
  8094     0F8C                     u3321:
  8095     0F8C  2F7A               	goto	l3681
  8096     0F8D                     u3320:
  8097     0F8D                     l389:
  8098     0F8D  0008               	return
  8099     0F8E                     __end_of_DisplayLcdScreen:
  8100                           
  8101                           	psect	text37
  8102     0D7A                     __ptext37:	
  8103 ;; *************** function _lcd_set_cursor *****************
  8104 ;; Defined at:
  8105 ;;		line 118 in file "lcd.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  row             1    wreg     unsigned char 
  8108 ;;  column          1    8[BANK0 ] unsigned char 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  row             1   11[BANK0 ] unsigned char 
  8111 ;;  address         1   12[BANK0 ] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  1    wreg      void 
  8114 ;; Registers used:
  8115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8121 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;Total ram usage:        5 bytes
  8126 ;; Hardware stack levels used: 1
  8127 ;; Hardware stack levels required when called: 6
  8128 ;; This function calls:
  8129 ;;		_lcd_write_cmd
  8130 ;; This function is called by:
  8131 ;;		_DisplayLcdScreen
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135     0D7A                     _lcd_set_cursor:	
  8136                           ;psect for function _lcd_set_cursor
  8137                           
  8138                           
  8139                           ;incstack = 0
  8140                           ; Regs used in _lcd_set_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8141                           ;lcd_set_cursor@row stored from wreg
  8142     0D7A  0020               	movlb	0	; select bank0
  8143     0D7B  00AB               	movwf	lcd_set_cursor@row
  8144     0D7C                     l3395:
  8145                           
  8146                           ;lcd.c: 118: void lcd_set_cursor (unsigned char row, unsigned char column);lcd.c: 119: {
      +                          ;lcd.c: 120:     unsigned char address;;lcd.c: 122:     switch(row)
  8147     0D7C  2D83               	goto	l3403
  8148     0D7D                     l3397:
  8149     0D7D  3080               	movlw	128
  8150     0D7E  00AC               	movwf	lcd_set_cursor@address
  8151     0D7F  2D93               	goto	l3405
  8152     0D80                     l3399:
  8153     0D80  30C0               	movlw	192
  8154     0D81  00AC               	movwf	lcd_set_cursor@address
  8155     0D82  2D93               	goto	l3405
  8156     0D83                     l3403:
  8157     0D83  082B               	movf	lcd_set_cursor@row,w
  8158     0D84  00A9               	movwf	??_lcd_set_cursor
  8159     0D85  01AA               	clrf	??_lcd_set_cursor+1
  8160                           
  8161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8162                           ; Switch size 1, requested type "simple"
  8163                           ; Number of cases is 1, Range of values is 0 to 0
  8164                           ; switch strategies available:
  8165                           ; Name         Instructions Cycles
  8166                           ; simple_byte            4     3 (average)
  8167                           ; direct_byte            8     6 (fixed)
  8168                           ; jumptable            260     6 (fixed)
  8169                           ;	Chosen strategy is simple_byte
  8170     0D86  082A               	movf	??_lcd_set_cursor+1,w
  8171     0D87  3A00               	xorlw	0	; case 0
  8172     0D88  1903               	skipnz
  8173     0D89  2D8B               	goto	l3793
  8174     0D8A  2D93               	goto	l3405
  8175     0D8B                     l3793:
  8176                           
  8177                           ; Switch size 1, requested type "simple"
  8178                           ; Number of cases is 2, Range of values is 0 to 1
  8179                           ; switch strategies available:
  8180                           ; Name         Instructions Cycles
  8181                           ; simple_byte            7     4 (average)
  8182                           ; direct_byte           10     6 (fixed)
  8183                           ; jumptable            260     6 (fixed)
  8184                           ;	Chosen strategy is simple_byte
  8185     0D8B  0829               	movf	??_lcd_set_cursor,w
  8186     0D8C  3A00               	xorlw	0	; case 0
  8187     0D8D  1903               	skipnz
  8188     0D8E  2D7D               	goto	l3397
  8189     0D8F  3A01               	xorlw	1	; case 1
  8190     0D90  1903               	skipnz
  8191     0D91  2D80               	goto	l3399
  8192     0D92  2D93               	goto	l3405
  8193     0D93                     l3405:
  8194                           
  8195                           ;lcd.c: 127:     address = address + column;
  8196     0D93  082C               	movf	lcd_set_cursor@address,w
  8197     0D94  0728               	addwf	lcd_set_cursor@column,w
  8198     0D95  00AC               	movwf	lcd_set_cursor@address
  8199     0D96                     l3407:
  8200                           
  8201                           ;lcd.c: 128:     lcd_write_cmd(address);
  8202     0D96  082C               	movf	lcd_set_cursor@address,w
  8203     0D97  318D  2520  318D   	fcall	_lcd_write_cmd
  8204     0D9A                     l379:
  8205     0D9A  0008               	return
  8206     0D9B                     __end_of_lcd_set_cursor:
  8207                           
  8208                           	psect	text38
  8209     0D20                     __ptext38:	
  8210 ;; *************** function _lcd_write_cmd *****************
  8211 ;; Defined at:
  8212 ;;		line 101 in file "lcd.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  cmd             1    wreg     unsigned char 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  cmd             1    7[BANK0 ] unsigned char 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1    wreg      void 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0, pclath, cstack
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;Total ram usage:        2 bytes
  8231 ;; Hardware stack levels used: 1
  8232 ;; Hardware stack levels required when called: 5
  8233 ;; This function calls:
  8234 ;;		_lcd_delay
  8235 ;;		_lcd_write_4bits
  8236 ;; This function is called by:
  8237 ;;		_lcd_set_cursor
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241     0D20                     _lcd_write_cmd:	
  8242                           ;psect for function _lcd_write_cmd
  8243                           
  8244                           
  8245                           ;incstack = 0
  8246                           ; Regs used in _lcd_write_cmd: [wreg+status,2+status,0+pclath+cstack]
  8247                           ;lcd_write_cmd@cmd stored from wreg
  8248     0D20  0020               	movlb	0	; select bank0
  8249     0D21  00A7               	movwf	lcd_write_cmd@cmd
  8250     0D22                     l3083:
  8251     0D22                     l3087:	
  8252                           ;lcd.c: 101: void lcd_write_cmd(unsigned char cmd);lcd.c: 102: {;lcd.c: 103:  ( (0) ? ( 
      +                          PORTC |= (1<<2) ) : ( PORTC &= ~(1<<2) ) );
  8253                           
  8254     0D22  30FB               	movlw	251
  8255     0D23  00A6               	movwf	??_lcd_write_cmd
  8256     0D24  0826               	movf	??_lcd_write_cmd,w
  8257     0D25  058E               	andwf	14,f	;volatile
  8258     0D26                     l3089:
  8259                           
  8260                           ;lcd.c: 104:     lcd_delay(1);
  8261     0D26  3001               	movlw	1
  8262     0D27  318E  2662  318D   	fcall	_lcd_delay
  8263     0D2A                     l3091:
  8264                           
  8265                           ;lcd.c: 105:  lcd_write_4bits(cmd);
  8266     0D2A  0020               	movlb	0	; select bank0
  8267     0D2B  0827               	movf	lcd_write_cmd@cmd,w
  8268     0D2C  318C  24EC  318D   	fcall	_lcd_write_4bits
  8269     0D2F                     l3093:
  8270                           
  8271                           ;lcd.c: 106:  lcd_write_4bits(cmd<<4);
  8272     0D2F  0020               	movlb	0	; select bank0
  8273     0D30  0827               	movf	lcd_write_cmd@cmd,w
  8274     0D31  00A6               	movwf	??_lcd_write_cmd
  8275     0D32  3003               	movlw	3
  8276     0D33                     u2565:
  8277     0D33  35A6               	lslf	??_lcd_write_cmd,f
  8278     0D34  3EFF               	addlw	-1
  8279     0D35  1D03               	skipz
  8280     0D36  2D33               	goto	u2565
  8281     0D37  3526               	lslf	??_lcd_write_cmd,w
  8282     0D38  318C  24EC  318D   	fcall	_lcd_write_4bits
  8283     0D3B                     l361:
  8284     0D3B  0008               	return
  8285     0D3C                     __end_of_lcd_write_cmd:
  8286                           
  8287                           	psect	text39
  8288     0C09                     __ptext39:	
  8289 ;; *************** function _lcd_print_char *****************
  8290 ;; Defined at:
  8291 ;;		line 137 in file "lcd.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  c               1    wreg     unsigned char 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  c               1    8[BANK0 ] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0, pclath, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8308 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;Total ram usage:        1 bytes
  8310 ;; Hardware stack levels used: 1
  8311 ;; Hardware stack levels required when called: 6
  8312 ;; This function calls:
  8313 ;;		_lcd_write_data
  8314 ;; This function is called by:
  8315 ;;		_DisplayLcdScreen
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319     0C09                     _lcd_print_char:	
  8320                           ;psect for function _lcd_print_char
  8321                           
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in _lcd_print_char: [wreg+status,2+status,0+pclath+cstack]
  8325                           ;lcd_print_char@c stored from wreg
  8326     0C09  0020               	movlb	0	; select bank0
  8327     0C0A  00A8               	movwf	lcd_print_char@c
  8328     0C0B                     l3415:
  8329                           
  8330                           ;lcd.c: 137: void lcd_print_char (char c);lcd.c: 138: {;lcd.c: 139:     lcd_write_data (
      +                          c);
  8331     0C0B  0828               	movf	lcd_print_char@c,w
  8332     0C0C  318D  253C  318C   	fcall	_lcd_write_data
  8333     0C0F                     l382:
  8334     0C0F  0008               	return
  8335     0C10                     __end_of_lcd_print_char:
  8336                           
  8337                           	psect	text40
  8338     0D3C                     __ptext40:	
  8339 ;; *************** function _lcd_write_data *****************
  8340 ;; Defined at:
  8341 ;;		line 109 in file "lcd.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  data            1    wreg     unsigned char 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  data            1    7[BANK0 ] unsigned char 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0, pclath, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;Total ram usage:        2 bytes
  8360 ;; Hardware stack levels used: 1
  8361 ;; Hardware stack levels required when called: 5
  8362 ;; This function calls:
  8363 ;;		_lcd_delay
  8364 ;;		_lcd_write_4bits
  8365 ;; This function is called by:
  8366 ;;		_lcd_print_char
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370     0D3C                     _lcd_write_data:	
  8371                           ;psect for function _lcd_write_data
  8372                           
  8373                           
  8374                           ;incstack = 0
  8375                           ; Regs used in _lcd_write_data: [wreg+status,2+status,0+pclath+cstack]
  8376                           ;lcd_write_data@data stored from wreg
  8377     0D3C  0020               	movlb	0	; select bank0
  8378     0D3D  00A7               	movwf	lcd_write_data@data
  8379     0D3E                     l3095:
  8380     0D3E  150E               	bsf	14,2	;volatile
  8381     0D3F                     l3099:
  8382                           
  8383                           ;lcd.c: 112:     lcd_delay(1);
  8384     0D3F  3001               	movlw	1
  8385     0D40  318E  2662  318D   	fcall	_lcd_delay
  8386     0D43                     l3101:
  8387                           
  8388                           ;lcd.c: 113:  lcd_write_4bits(data);
  8389     0D43  0020               	movlb	0	; select bank0
  8390     0D44  0827               	movf	lcd_write_data@data,w
  8391     0D45  318C  24EC  318D   	fcall	_lcd_write_4bits
  8392     0D48                     l3103:
  8393                           
  8394                           ;lcd.c: 114:     lcd_write_4bits(data<<4);
  8395     0D48  0020               	movlb	0	; select bank0
  8396     0D49  0827               	movf	lcd_write_data@data,w
  8397     0D4A  00A6               	movwf	??_lcd_write_data
  8398     0D4B  3003               	movlw	3
  8399     0D4C                     u2575:
  8400     0D4C  35A6               	lslf	??_lcd_write_data,f
  8401     0D4D  3EFF               	addlw	-1
  8402     0D4E  1D03               	skipz
  8403     0D4F  2D4C               	goto	u2575
  8404     0D50  3526               	lslf	??_lcd_write_data,w
  8405     0D51  318C  24EC  318D   	fcall	_lcd_write_4bits
  8406     0D54                     l3107:	
  8407                           ;lcd.c: 115:     ( (0) ? ( PORTC |= (1<<2) ) : ( PORTC &= ~(1<<2) ) );
  8408                           
  8409     0D54  30FB               	movlw	251
  8410     0D55  0020               	movlb	0	; select bank0
  8411     0D56  00A6               	movwf	??_lcd_write_data
  8412     0D57  0826               	movf	??_lcd_write_data,w
  8413     0D58  058E               	andwf	14,f	;volatile
  8414     0D59                     l372:
  8415     0D59  0008               	return
  8416     0D5A                     __end_of_lcd_write_data:
  8417                           
  8418                           	psect	text41
  8419     0CEC                     __ptext41:	
  8420 ;; *************** function _lcd_write_4bits *****************
  8421 ;; Defined at:
  8422 ;;		line 92 in file "lcd.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  dat             1    wreg     unsigned char 
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;  dat             1    5[BANK0 ] unsigned char 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      void 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0, pclath, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;Total ram usage:        2 bytes
  8441 ;; Hardware stack levels used: 1
  8442 ;; Hardware stack levels required when called: 4
  8443 ;; This function calls:
  8444 ;;		_lcd_delay
  8445 ;; This function is called by:
  8446 ;;		_lcd_write_cmd
  8447 ;;		_lcd_write_data
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451     0CEC                     _lcd_write_4bits:	
  8452                           ;psect for function _lcd_write_4bits
  8453                           
  8454                           
  8455                           ;incstack = 0
  8456                           ; Regs used in _lcd_write_4bits: [wreg+status,2+status,0+pclath+cstack]
  8457                           ;lcd_write_4bits@dat stored from wreg
  8458     0CEC  0020               	movlb	0	; select bank0
  8459     0CED  00A5               	movwf	lcd_write_4bits@dat
  8460     0CEE                     l3023:
  8461                           
  8462                           ;lcd.c: 92: void lcd_write_4bits(unsigned char dat);lcd.c: 93: {;lcd.c: 95:     PORTC &=
      +                           0x0F; PORTC |= (dat);;
  8463     0CEE  300F               	movlw	15
  8464     0CEF  00F5               	movwf	??_lcd_write_4bits
  8465     0CF0  0875               	movf	??_lcd_write_4bits,w
  8466     0CF1  058E               	andwf	14,f	;volatile
  8467                           
  8468                           ;lcd.c: 96:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  8469     0CF2  0825               	movf	lcd_write_4bits@dat,w	;volatile
  8470     0CF3  00F5               	movwf	??_lcd_write_4bits
  8471     0CF4  0875               	movf	??_lcd_write_4bits,w
  8472     0CF5  048E               	iorwf	14,f	;volatile
  8473     0CF6                     l3025:
  8474     0CF6  158E               	bsf	14,3	;volatile
  8475     0CF7                     l3029:
  8476                           
  8477                           ;lcd.c: 97:     lcd_delay(1);
  8478     0CF7  3001               	movlw	1
  8479     0CF8  318E  2662  318C   	fcall	_lcd_delay
  8480     0CFB                     l3033:	
  8481                           ;lcd.c: 98:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  8482                           
  8483     0CFB  30F7               	movlw	247
  8484     0CFC  00F5               	movwf	??_lcd_write_4bits
  8485     0CFD  0875               	movf	??_lcd_write_4bits,w
  8486     0CFE  0020               	movlb	0	; select bank0
  8487     0CFF  058E               	andwf	14,f	;volatile
  8488     0D00                     l3035:
  8489                           
  8490                           ;lcd.c: 99:     lcd_delay(1);
  8491     0D00  3001               	movlw	1
  8492     0D01  318E  2662  318C   	fcall	_lcd_delay
  8493     0D04                     l354:
  8494     0D04  0008               	return
  8495     0D05                     __end_of_lcd_write_4bits:
  8496                           
  8497                           	psect	text42
  8498     0E62                     __ptext42:	
  8499 ;; *************** function _lcd_delay *****************
  8500 ;; Defined at:
  8501 ;;		line 9 in file "lcd.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  time            1    wreg     unsigned char 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  time            1    0[BANK0 ] unsigned char 
  8506 ;;  j               2    3[BANK0 ] int 
  8507 ;;  i               2    1[BANK0 ] int 
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  1    wreg      void 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8518 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;Total ram usage:        6 bytes
  8522 ;; Hardware stack levels used: 1
  8523 ;; Hardware stack levels required when called: 3
  8524 ;; This function calls:
  8525 ;;		Nothing
  8526 ;; This function is called by:
  8527 ;;		_lcd_write_4bits
  8528 ;;		_lcd_write_cmd
  8529 ;;		_lcd_write_data
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533     0E62                     _lcd_delay:	
  8534                           ;psect for function _lcd_delay
  8535                           
  8536                           
  8537                           ;incstack = 0
  8538                           ; Regs used in _lcd_delay: [wreg+status,2]
  8539                           ;lcd_delay@time stored from wreg
  8540     0E62  0020               	movlb	0	; select bank0
  8541     0E63  00A0               	movwf	lcd_delay@time
  8542     0E64                     l2999:
  8543                           
  8544                           ;lcd.c: 9: void lcd_delay(unsigned char time);lcd.c: 10: {;lcd.c: 11:     int i,j;;lcd.c
      +                          : 12:     for(i=0;i<time;i++)
  8545     0E64  01A1               	clrf	lcd_delay@i
  8546     0E65  01A2               	clrf	lcd_delay@i+1
  8547     0E66  2E81               	goto	l286
  8548     0E67                     l3001:
  8549                           
  8550                           ;lcd.c: 13:         for(j=0;j<1;j++);
  8551     0E67  0020               	movlb	0	; select bank0
  8552     0E68  01A3               	clrf	lcd_delay@j
  8553     0E69  01A4               	clrf	lcd_delay@j+1
  8554     0E6A                     l3007:
  8555     0E6A  3001               	movlw	1
  8556     0E6B  0020               	movlb	0	; select bank0
  8557     0E6C  07A3               	addwf	lcd_delay@j,f
  8558     0E6D  3000               	movlw	0
  8559     0E6E  3DA4               	addwfc	lcd_delay@j+1,f
  8560     0E6F  0824               	movf	lcd_delay@j+1,w
  8561     0E70  3A80               	xorlw	128
  8562     0E71  00F4               	movwf	??_lcd_delay
  8563     0E72  3080               	movlw	128
  8564     0E73  0274               	subwf	??_lcd_delay,w
  8565     0E74  1D03               	skipz
  8566     0E75  2E78               	goto	u2465
  8567     0E76  3001               	movlw	1
  8568     0E77  0223               	subwf	lcd_delay@j,w
  8569     0E78                     u2465:
  8570     0E78  1C03               	skipc
  8571     0E79  2E7B               	goto	u2461
  8572     0E7A  2E7C               	goto	u2460
  8573     0E7B                     u2461:
  8574     0E7B  2E6A               	goto	l3007
  8575     0E7C                     u2460:
  8576     0E7C                     l3009:
  8577     0E7C  3001               	movlw	1
  8578     0E7D  0020               	movlb	0	; select bank0
  8579     0E7E  07A1               	addwf	lcd_delay@i,f
  8580     0E7F  3000               	movlw	0
  8581     0E80  3DA2               	addwfc	lcd_delay@i+1,f
  8582     0E81                     l286:
  8583     0E81  0822               	movf	lcd_delay@i+1,w
  8584     0E82  3A80               	xorlw	128
  8585     0E83  00F4               	movwf	??_lcd_delay
  8586     0E84  3080               	movlw	128
  8587     0E85  0274               	subwf	??_lcd_delay,w
  8588     0E86  1D03               	skipz
  8589     0E87  2E8A               	goto	u2475
  8590     0E88  0820               	movf	lcd_delay@time,w
  8591     0E89  0221               	subwf	lcd_delay@i,w
  8592     0E8A                     u2475:
  8593     0E8A  1C03               	skipc
  8594     0E8B  2E8D               	goto	u2471
  8595     0E8C  2E8E               	goto	u2470
  8596     0E8D                     u2471:
  8597     0E8D  2E67               	goto	l3001
  8598     0E8E                     u2470:
  8599     0E8E                     l291:
  8600     0E8E  0008               	return
  8601     0E8F                     __end_of_lcd_delay:
  8602                           
  8603                           	psect	text43
  8604     0E35                     __ptext43:	
  8605 ;; *************** function _Delay_ms *****************
  8606 ;; Defined at:
  8607 ;;		line 65 in file "main.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  time            1    wreg     unsigned char 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  time            1    0[BANK0 ] unsigned char 
  8612 ;;  j               2    3[BANK0 ] int 
  8613 ;;  i               2    1[BANK0 ] int 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      void 
  8616 ;; Registers used:
  8617 ;;		wreg, status,2
  8618 ;; Tracked objects:
  8619 ;;		On entry : 0/0
  8620 ;;		On exit  : 0/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8624 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;Total ram usage:        6 bytes
  8628 ;; Hardware stack levels used: 1
  8629 ;; Hardware stack levels required when called: 3
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_main
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637     0E35                     _Delay_ms:	
  8638                           ;psect for function _Delay_ms
  8639                           
  8640                           
  8641                           ;incstack = 0
  8642                           ; Regs used in _Delay_ms: [wreg+status,2]
  8643                           ;Delay_ms@time stored from wreg
  8644     0E35  0020               	movlb	0	; select bank0
  8645     0E36  00A0               	movwf	Delay_ms@time
  8646     0E37                     l3687:
  8647                           
  8648                           ;main.c: 65: void Delay_ms(unsigned char time);main.c: 66: {;main.c: 67:     int i,j;;ma
      +                          in.c: 68:     for(i=0;i<time;i++)
  8649     0E37  01A1               	clrf	Delay_ms@i
  8650     0E38  01A2               	clrf	Delay_ms@i+1
  8651     0E39  2E54               	goto	l268
  8652     0E3A                     l3689:
  8653                           
  8654                           ;main.c: 69:         for(j=0;j<1;j++);
  8655     0E3A  0020               	movlb	0	; select bank0
  8656     0E3B  01A3               	clrf	Delay_ms@j
  8657     0E3C  01A4               	clrf	Delay_ms@j+1
  8658     0E3D                     l3695:
  8659     0E3D  3001               	movlw	1
  8660     0E3E  0020               	movlb	0	; select bank0
  8661     0E3F  07A3               	addwf	Delay_ms@j,f
  8662     0E40  3000               	movlw	0
  8663     0E41  3DA4               	addwfc	Delay_ms@j+1,f
  8664     0E42  0824               	movf	Delay_ms@j+1,w
  8665     0E43  3A80               	xorlw	128
  8666     0E44  00F4               	movwf	??_Delay_ms
  8667     0E45  3080               	movlw	128
  8668     0E46  0274               	subwf	??_Delay_ms,w
  8669     0E47  1D03               	skipz
  8670     0E48  2E4B               	goto	u3335
  8671     0E49  3001               	movlw	1
  8672     0E4A  0223               	subwf	Delay_ms@j,w
  8673     0E4B                     u3335:
  8674     0E4B  1C03               	skipc
  8675     0E4C  2E4E               	goto	u3331
  8676     0E4D  2E4F               	goto	u3330
  8677     0E4E                     u3331:
  8678     0E4E  2E3D               	goto	l3695
  8679     0E4F                     u3330:
  8680     0E4F                     l3697:
  8681     0E4F  3001               	movlw	1
  8682     0E50  0020               	movlb	0	; select bank0
  8683     0E51  07A1               	addwf	Delay_ms@i,f
  8684     0E52  3000               	movlw	0
  8685     0E53  3DA2               	addwfc	Delay_ms@i+1,f
  8686     0E54                     l268:
  8687     0E54  0822               	movf	Delay_ms@i+1,w
  8688     0E55  3A80               	xorlw	128
  8689     0E56  00F4               	movwf	??_Delay_ms
  8690     0E57  3080               	movlw	128
  8691     0E58  0274               	subwf	??_Delay_ms,w
  8692     0E59  1D03               	skipz
  8693     0E5A  2E5D               	goto	u3345
  8694     0E5B  0820               	movf	Delay_ms@time,w
  8695     0E5C  0221               	subwf	Delay_ms@i,w
  8696     0E5D                     u3345:
  8697     0E5D  1C03               	skipc
  8698     0E5E  2E60               	goto	u3341
  8699     0E5F  2E61               	goto	u3340
  8700     0E60                     u3341:
  8701     0E60  2E3A               	goto	l3689
  8702     0E61                     u3340:
  8703     0E61                     l273:
  8704     0E61  0008               	return
  8705     0E62                     __end_of_Delay_ms:
  8706                           
  8707                           	psect	intentry
  8708     0004                     __pintentry:	
  8709 ;; *************** function _isr *****************
  8710 ;; Defined at:
  8711 ;;		line 8 in file "interrupt.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;		None
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      void 
  8718 ;; Registers used:
  8719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;Total ram usage:        0 bytes
  8730 ;; Hardware stack levels used: 1
  8731 ;; Hardware stack levels required when called: 2
  8732 ;; This function calls:
  8733 ;;		_TMR1_Isr
  8734 ;;		_TMR1_Start
  8735 ;;		_TMR1_Stop
  8736 ;; This function is called by:
  8737 ;;		Interrupt level 1
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741     0004                     _isr:
  8742                           
  8743                           ;incstack = 0
  8744     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8745                           
  8746                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8747     0005  3180               	pagesel	$
  8748     0006                     i1l2937:
  8749                           
  8750                           ;interrupt.c: 9:     if(TMR1IF == 1 && TMR1IE == 1){
  8751     0006  0020               	movlb	0	; select bank0
  8752     0007  1C11               	btfss	17,0	;volatile
  8753     0008  280A               	goto	u244_21
  8754     0009  280B               	goto	u244_20
  8755     000A                     u244_21:
  8756     000A  281B               	goto	i1l435
  8757     000B                     u244_20:
  8758     000B                     i1l2939:
  8759     000B  0021               	movlb	1	; select bank1
  8760     000C  1C11               	btfss	17,0	;volatile
  8761     000D  280F               	goto	u245_21
  8762     000E  2810               	goto	u245_20
  8763     000F                     u245_21:
  8764     000F  281B               	goto	i1l435
  8765     0010                     u245_20:
  8766     0010                     i1l2941:
  8767                           
  8768                           ;interrupt.c: 10:         TMR1_Stop();
  8769     0010  318B  23EB  3180   	fcall	_TMR1_Stop
  8770     0013                     i1l2943:
  8771                           
  8772                           ;interrupt.c: 11:         TMR1IF = 0;
  8773     0013  0020               	movlb	0	; select bank0
  8774     0014  1011               	bcf	17,0	;volatile
  8775     0015                     i1l2945:
  8776                           
  8777                           ;interrupt.c: 12:         TMR1_Start();
  8778     0015  318C  2402  3180   	fcall	_TMR1_Start
  8779     0018                     i1l2947:
  8780                           
  8781                           ;interrupt.c: 13:         TMR1_Isr();
  8782     0018  318C  24A6  3180   	fcall	_TMR1_Isr
  8783     001B                     i1l435:
  8784     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8785     001C  0009               	retfie
  8786     001D                     __end_of_isr:
  8787                           
  8788                           	psect	text45
  8789     0BEB                     __ptext45:	
  8790 ;; *************** function _TMR1_Stop *****************
  8791 ;; Defined at:
  8792 ;;		line 32 in file "timer.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		None
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;Total ram usage:        0 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; This function calls:
  8813 ;;		Nothing
  8814 ;; This function is called by:
  8815 ;;		_isr
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819     0BEB                     _TMR1_Stop:	
  8820                           ;psect for function _TMR1_Stop
  8821                           
  8822     0BEB                     i1l1873:	
  8823                           ;incstack = 0
  8824                           ; Regs used in _TMR1_Stop: []
  8825                           
  8826                           
  8827                           ;timer.c: 34:  T1CONbits.TMR1ON = 0;
  8828     0BEB  0020               	movlb	0	; select bank0
  8829     0BEC  1018               	bcf	24,0	;volatile
  8830     0BED                     i1l191:
  8831     0BED  0008               	return
  8832     0BEE                     __end_of_TMR1_Stop:
  8833                           
  8834                           	psect	text46
  8835     0C02                     __ptext46:	
  8836 ;; *************** function _TMR1_Start *****************
  8837 ;; Defined at:
  8838 ;;		line 26 in file "timer.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;Total ram usage:        0 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_isr
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865     0C02                     _TMR1_Start:	
  8866                           ;psect for function _TMR1_Start
  8867                           
  8868     0C02                     i1l2831:	
  8869                           ;incstack = 0
  8870                           ; Regs used in _TMR1_Start: [wreg]
  8871                           
  8872                           
  8873                           ;timer.c: 28:     TMR1 = timer1_value;
  8874     0C02  0020               	movlb	0	; select bank0
  8875     0C03  086C               	movf	_timer1_value+1,w
  8876     0C04  0097               	movwf	23	;volatile
  8877     0C05  086B               	movf	_timer1_value,w
  8878     0C06  0096               	movwf	22	;volatile
  8879     0C07                     i1l2833:
  8880                           
  8881                           ;timer.c: 29:  T1CONbits.TMR1ON = 1;
  8882     0C07  1418               	bsf	24,0	;volatile
  8883     0C08                     i1l188:
  8884     0C08  0008               	return
  8885     0C09                     __end_of_TMR1_Start:
  8886                           
  8887                           	psect	text47
  8888     0CA6                     __ptext47:	
  8889 ;; *************** function _TMR1_Isr *****************
  8890 ;; Defined at:
  8891 ;;		line 38 in file "timer.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;		None
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;		None
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;Total ram usage:        0 bytes
  8910 ;; Hardware stack levels used: 1
  8911 ;; Hardware stack levels required when called: 1
  8912 ;; This function calls:
  8913 ;;		_BTN_Reading
  8914 ;; This function is called by:
  8915 ;;		_isr
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919     0CA6                     _TMR1_Isr:	
  8920                           ;psect for function _TMR1_Isr
  8921                           
  8922     0CA6                     i1l2835:	
  8923                           ;incstack = 0
  8924                           ; Regs used in _TMR1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8925                           
  8926                           
  8927                           ;timer.c: 40:  timer1_cnt ++;
  8928     0CA6  3001               	movlw	1
  8929     0CA7  0020               	movlb	0	; select bank0
  8930     0CA8  07E2               	addwf	_timer1_cnt,f
  8931     0CA9  3000               	movlw	0
  8932     0CAA  3DE3               	addwfc	_timer1_cnt+1,f
  8933                           
  8934                           ;timer.c: 41:  if (timer1_cnt >= timer1_MUL)
  8935     0CAB  086E               	movf	_timer1_MUL+1,w
  8936     0CAC  0263               	subwf	_timer1_cnt+1,w
  8937     0CAD  1D03               	skipz
  8938     0CAE  2CB1               	goto	u236_25
  8939     0CAF  086D               	movf	_timer1_MUL,w
  8940     0CB0  0262               	subwf	_timer1_cnt,w
  8941     0CB1                     u236_25:
  8942     0CB1  1C03               	skipc
  8943     0CB2  2CB4               	goto	u236_21
  8944     0CB3  2CB5               	goto	u236_20
  8945     0CB4                     u236_21:
  8946     0CB4  2CB9               	goto	i1l2841
  8947     0CB5                     u236_20:
  8948     0CB5                     i1l2837:
  8949                           
  8950                           ;timer.c: 42:  {;timer.c: 43:   timer1_cnt = 0;
  8951     0CB5  01E2               	clrf	_timer1_cnt
  8952     0CB6  01E3               	clrf	_timer1_cnt+1
  8953     0CB7                     i1l2839:
  8954                           
  8955                           ;timer.c: 44:   flag_timer1 = 1;
  8956     0CB7  01E8               	clrf	_flag_timer1
  8957     0CB8  0AE8               	incf	_flag_timer1,f
  8958     0CB9                     i1l2841:
  8959                           
  8960                           ;timer.c: 48:     BTN_Reading();
  8961     0CB9  3184  24A4  318C   	fcall	_BTN_Reading
  8962     0CBC                     i1l195:
  8963     0CBC  0008               	return
  8964     0CBD                     __end_of_TMR1_Isr:
  8965                           
  8966                           	psect	text48
  8967     04A4                     __ptext48:	
  8968 ;; *************** function _BTN_Reading *****************
  8969 ;; Defined at:
  8970 ;;		line 27 in file "button.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;		None
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;  i               1    3[COMMON] unsigned char 
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;Total ram usage:        4 bytes
  8989 ;; Hardware stack levels used: 1
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		_TMR1_Isr
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997     04A4                     _BTN_Reading:	
  8998                           ;psect for function _BTN_Reading
  8999                           
  9000     04A4                     i1l2353:	
  9001                           ;incstack = 0
  9002                           ; Regs used in _BTN_Reading: [wreg-fsr1h+status,2+status,0]
  9003                           
  9004                           
  9005                           ;button.c: 28:     unsigned char i;;button.c: 29:     for(i = 0; i < 4; i++){
  9006     04A4  01F3               	clrf	BTN_Reading@i
  9007     04A5                     i1l2359:
  9008                           
  9009                           ;button.c: 30:         debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
  9010     04A5  0873               	movf	BTN_Reading@i,w
  9011     04A6  3EC8               	addlw	(low (_debounceButtonBuffer2| 0))& (0+255)
  9012     04A7  0086               	movwf	6
  9013     04A8  0187               	clrf	7
  9014     04A9  0873               	movf	BTN_Reading@i,w
  9015     04AA  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  9016     04AB  0084               	movwf	4
  9017     04AC  0185               	clrf	5
  9018     04AD  0800               	movf	0,w
  9019     04AE  0081               	movwf	1
  9020                           
  9021                           ;button.c: 31:         debounceButtonBuffer1[i] = PORTA & buttonInputMask[i];
  9022     04AF  0873               	movf	BTN_Reading@i,w
  9023     04B0  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  9024     04B1  0086               	movwf	6
  9025     04B2  0187               	clrf	7
  9026     04B3  0873               	movf	BTN_Reading@i,w
  9027     04B4  3EC4               	addlw	(low (_buttonInputMask| 0))& (0+255)
  9028     04B5  0084               	movwf	4
  9029     04B6  0185               	clrf	5
  9030     04B7  0800               	movf	0,w
  9031     04B8  0020               	movlb	0	; select bank0
  9032     04B9  050C               	andwf	12,w	;volatile
  9033     04BA  0081               	movwf	1
  9034                           
  9035                           ;button.c: 33:         if(debounceButtonBuffer1[i] == debounceButtonBuffer2[i]){
  9036     04BB  0873               	movf	BTN_Reading@i,w
  9037     04BC  3EC8               	addlw	(low (_debounceButtonBuffer2| 0))& (0+255)
  9038     04BD  0086               	movwf	6
  9039     04BE  0187               	clrf	7
  9040     04BF  0873               	movf	BTN_Reading@i,w
  9041     04C0  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  9042     04C1  0084               	movwf	4
  9043     04C2  0185               	clrf	5
  9044     04C3  0800               	movf	0,w
  9045     04C4  0601               	xorwf	1,w
  9046     04C5  1D03               	skipz
  9047     04C6  2CC8               	goto	u180_21
  9048     04C7  2CC9               	goto	u180_20
  9049     04C8                     u180_21:
  9050     04C8  2D26               	goto	i1l2381
  9051     04C9                     u180_20:
  9052     04C9                     i1l2361:
  9053                           
  9054                           ;button.c: 34:             buttonBuffer[i] = debounceButtonBuffer1[i];
  9055     04C9  0873               	movf	BTN_Reading@i,w
  9056     04CA  3EC0               	addlw	(low (_buttonBuffer| 0))& (0+255)
  9057     04CB  0086               	movwf	6
  9058     04CC  0187               	clrf	7
  9059     04CD  0873               	movf	BTN_Reading@i,w
  9060     04CE  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  9061     04CF  0084               	movwf	4
  9062     04D0  0185               	clrf	5
  9063     04D1  0800               	movf	0,w
  9064     04D2  0081               	movwf	1
  9065     04D3                     i1l2363:
  9066                           
  9067                           ;button.c: 35:             if(buttonBuffer[i] == 0){
  9068     04D3  0873               	movf	BTN_Reading@i,w
  9069     04D4  3EC0               	addlw	(low (_buttonBuffer| 0))& (0+255)
  9070     04D5  0086               	movwf	6
  9071     04D6  0187               	clrf	7
  9072     04D7  0801               	movf	1,w
  9073     04D8  1D03               	btfss	3,2
  9074     04D9  2CDB               	goto	u181_21
  9075     04DA  2CDC               	goto	u181_20
  9076     04DB                     u181_21:
  9077     04DB  2CFE               	goto	i1l2371
  9078     04DC                     u181_20:
  9079     04DC                     i1l2365:
  9080                           
  9081                           ;button.c: 36:                 if(counterForButtonPress[i] < 200){
  9082     04DC  3573               	lslf	BTN_Reading@i,w
  9083     04DD  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  9084     04DE  0086               	movwf	6
  9085     04DF  0187               	clrf	7
  9086     04E0  3F40               	moviw [0]fsr1
  9087     04E1  00F0               	movwf	??_BTN_Reading
  9088     04E2  3F41               	moviw [1]fsr1
  9089     04E3  00F1               	movwf	??_BTN_Reading+1
  9090     04E4  3000               	movlw	0
  9091     04E5  0271               	subwf	??_BTN_Reading+1,w
  9092     04E6  30C8               	movlw	200
  9093     04E7  1903               	skipnz
  9094     04E8  0270               	subwf	??_BTN_Reading,w
  9095     04E9  1803               	skipnc
  9096     04EA  2CEC               	goto	u182_21
  9097     04EB  2CED               	goto	u182_20
  9098     04EC                     u182_21:
  9099     04EC  2CF7               	goto	i1l2369
  9100     04ED                     u182_20:
  9101     04ED                     i1l2367:
  9102                           
  9103                           ;button.c: 37:                     counterForButtonPress[i]++;
  9104     04ED  3573               	lslf	BTN_Reading@i,w
  9105     04EE  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  9106     04EF  0086               	movwf	6
  9107     04F0  0187               	clrf	7
  9108     04F1  3001               	movlw	1
  9109     04F2  0781               	addwf	1,f
  9110     04F3  3141               	addfsr 1,1
  9111     04F4  1803               	skipnc
  9112     04F5  0A81               	incf	1,f
  9113                           
  9114                           ;button.c: 38:                 }
  9115     04F6  2D26               	goto	i1l2381
  9116     04F7                     i1l2369:
  9117     04F7  0873               	movf	BTN_Reading@i,w
  9118     04F8  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  9119     04F9  0086               	movwf	6
  9120     04FA  0187               	clrf	7
  9121     04FB  0181               	clrf	1
  9122     04FC  0A81               	incf	1,f
  9123     04FD  2D26               	goto	i1l2381
  9124     04FE                     i1l2371:
  9125                           
  9126                           ;button.c: 43:                 flagForButtonPress[i] = counterForButtonPress[i] && (!fla
      +                          gForButtonPress_s[i]);
  9127     04FE  01F2               	clrf	_BTN_Reading$37
  9128     04FF                     i1l2373:
  9129     04FF  3573               	lslf	BTN_Reading@i,w
  9130     0500  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  9131     0501  0086               	movwf	6
  9132     0502  0187               	clrf	7
  9133     0503  0016               	moviw fsr1++
  9134     0504  0401               	iorwf	1,w
  9135     0505  1903               	btfsc	3,2
  9136     0506  2D08               	goto	u183_21
  9137     0507  2D09               	goto	u183_20
  9138     0508                     u183_21:
  9139     0508  2D14               	goto	i1l2379
  9140     0509                     u183_20:
  9141     0509                     i1l2375:
  9142     0509  0873               	movf	BTN_Reading@i,w
  9143     050A  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  9144     050B  0086               	movwf	6
  9145     050C  0187               	clrf	7
  9146     050D  0801               	movf	1,w
  9147     050E  1D03               	btfss	3,2
  9148     050F  2D11               	goto	u184_21
  9149     0510  2D12               	goto	u184_20
  9150     0511                     u184_21:
  9151     0511  2D14               	goto	i1l2379
  9152     0512                     u184_20:
  9153     0512                     i1l2377:
  9154     0512  01F2               	clrf	_BTN_Reading$37
  9155     0513  0AF2               	incf	_BTN_Reading$37,f
  9156     0514                     i1l2379:
  9157     0514  0873               	movf	BTN_Reading@i,w
  9158     0515  3E56               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  9159     0516  0086               	movwf	6
  9160     0517  0187               	clrf	7
  9161     0518  0872               	movf	_BTN_Reading$37,w
  9162     0519  0081               	movwf	1
  9163                           
  9164                           ;button.c: 44:                 counterForButtonPress[i] = 0;
  9165     051A  3573               	lslf	BTN_Reading@i,w
  9166     051B  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  9167     051C  0086               	movwf	6
  9168     051D  0187               	clrf	7
  9169     051E  3000               	movlw	0
  9170     051F  3FC0               	movwi [0]fsr1
  9171     0520  3FC1               	movwi [1]fsr1
  9172                           
  9173                           ;button.c: 45:                 flagForButtonPress_s[i] = 0;
  9174     0521  0873               	movf	BTN_Reading@i,w
  9175     0522  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  9176     0523  0086               	movwf	6
  9177     0524  0187               	clrf	7
  9178     0525  0181               	clrf	1
  9179     0526                     i1l2381:
  9180                           
  9181                           ;button.c: 48:     }
  9182     0526  3001               	movlw	1
  9183     0527  00F0               	movwf	??_BTN_Reading
  9184     0528  0870               	movf	??_BTN_Reading,w
  9185     0529  07F3               	addwf	BTN_Reading@i,f
  9186     052A                     i1l2383:
  9187     052A  3004               	movlw	4
  9188     052B  0273               	subwf	BTN_Reading@i,w
  9189     052C  1C03               	skipc
  9190     052D  2D2F               	goto	u185_21
  9191     052E  2D30               	goto	u185_20
  9192     052F                     u185_21:
  9193     052F  2CA5               	goto	i1l2359
  9194     0530                     u185_20:
  9195     0530                     i1l39:
  9196     0530  0008               	return
  9197     0531                     __end_of_BTN_Reading:
  9198     007E                     btemp	set	126	;btemp
  9199     007E                     int$flags	set	126
  9200     007E                     wtemp0	set	126
  9201                           
  9202                           	psect	idloc
  9203                           
  9204                           ;Config register IDLOC0 @ 0x8000
  9205                           ;	unspecified, using default values
  9206     8000                     	org	32768
  9207     8000  3FFF               	dw	16383
  9208                           
  9209                           ;Config register IDLOC1 @ 0x8001
  9210                           ;	unspecified, using default values
  9211     8001                     	org	32769
  9212     8001  3FFF               	dw	16383
  9213                           
  9214                           ;Config register IDLOC2 @ 0x8002
  9215                           ;	unspecified, using default values
  9216     8002                     	org	32770
  9217     8002  3FFF               	dw	16383
  9218                           
  9219                           ;Config register IDLOC3 @ 0x8003
  9220                           ;	unspecified, using default values
  9221     8003                     	org	32771
  9222     8003  3FFF               	dw	16383
  9223                           
  9224                           	psect	config
  9225                           
  9226                           ;Config register CONFIG1 @ 0x8007
  9227                           ;	Oscillator Selection
  9228                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9229                           ;	Watchdog Timer Enable
  9230                           ;	WDTE = OFF, WDT disabled
  9231                           ;	Power-up Timer Enable
  9232                           ;	PWRTE = OFF, PWRT disabled
  9233                           ;	MCLR Pin Function Select
  9234                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  9235                           ;	Flash Program Memory Code Protection
  9236                           ;	CP = OFF, Program memory code protection is disabled
  9237                           ;	Data Memory Code Protection
  9238                           ;	CPD = OFF, Data memory code protection is disabled
  9239                           ;	Brown-out Reset Enable
  9240                           ;	BOREN = OFF, Brown-out Reset disabled
  9241                           ;	Clock Out Enable
  9242                           ;	CLKOUTEN = 0x1, unprogrammed default
  9243                           ;	Internal/External Switchover
  9244                           ;	IESO = 0x1, unprogrammed default
  9245                           ;	Fail-Safe Clock Monitor Enable
  9246                           ;	FCMEN = 0x1, unprogrammed default
  9247     8007                     	org	32775
  9248     8007  39A4               	dw	14756
  9249                           
  9250                           ;Config register CONFIG2 @ 0x8008
  9251                           ;	Flash Memory Self-Write Protection
  9252                           ;	WRT = 0x3, unprogrammed default
  9253                           ;	PLL Enable
  9254                           ;	PLLEN = 0x1, unprogrammed default
  9255                           ;	Stack Overflow/Underflow Reset Enable
  9256                           ;	STVREN = 0x1, unprogrammed default
  9257                           ;	Brown-out Reset Voltage Selection
  9258                           ;	BORV = 0x1, unprogrammed default
  9259                           ;	Low-Voltage Programming Enable
  9260                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9261     8008                     	org	32776
  9262     8008  1FFF               	dw	8191

Data Sizes:
    Strings     170
    Constant    0
    Data        44
    BSS         39
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     42      79
    BANK1            80      2      46
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    LcdPrintStringS@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LcdPrintStringS
    _SYS_Init->_TMR1_Init
    _init_lcd->_lcd_send_command
    _EEP_ReadCupTotal->_eeprom_read
    _EEP_ReadAutoTime->_eeprom_read
    _FSM_ModeControl->_BTN_IsHeld
    _FSM_ModeControl->_BTN_IsPressed
    _FSM_ModeControl->_LcdPrintCharS
    _FSM_ModeControl->_LcdPrintStringS
    _FSM_ModeControl->___wmul
    _LcdPrintStringS->_lcd_print_charS
    _LcdPrintNumS->___lldiv
    _LcdPrintNumS->___llmod
    ___llmod->_lcd_power_of
    ___lldiv->_lcd_power_of
    _LcdPrintFloatS->___lwmod
    _EEP_SaveCupTotal->_eeprom_write
    _EEP_SaveAutoTime->_eeprom_write
    ___lwdiv->___lwmod
    ___lwdiv->___wmul
    _lcd_write_cmd->_lcd_write_4bits
    _lcd_write_data->_lcd_write_4bits
    _lcd_write_4bits->_lcd_delay

Critical Paths under _isr in COMMON

    _TMR1_Isr->_BTN_Reading

Critical Paths under _main in BANK0

    _SYS_Init->_TMR1_SetTime_ms
    _SYS_Init->_init_lcd
    _init_lcd->_lcd_send_command
    _lcd_send_command->_v_timer0
    _TMR1_SetTime_ms->___lwdiv
    _EEP_ReadCupTotal->_eeprom_read
    _EEP_ReadAutoTime->_eeprom_read
    _FSM_ModeControl->_LcdPrintNumS
    _LcdPrintStringS->_lcd_print_charS
    _LcdPrintNumS->___lldiv
    _lcd_power_of->___lmul
    ___llmod->_lcd_power_of
    ___lldiv->_lcd_power_of
    _LcdPrintFloatS->___lwdiv
    _EEP_SaveCupTotal->_eeprom_write
    _EEP_SaveAutoTime->_eeprom_write
    _BTN_IsPressed_ms->___lwdiv
    ___lwdiv->___lwmod
    ___lwdiv->___wmul
    _DisplayLcdScreen->_lcd_set_cursor
    _lcd_set_cursor->_lcd_write_cmd
    _lcd_write_cmd->_lcd_write_4bits
    _lcd_print_char->_lcd_write_data
    _lcd_write_data->_lcd_write_4bits
    _lcd_write_4bits->_lcd_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_FSM_ModeControl

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21865
                           _Delay_ms
                   _DisplayLcdScreen
                    _FSM_ModeControl
                    _LcdPrintStringS
                           _SYS_Init
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0    3704
                           _BTN_Init
                   _EEP_ReadAutoTime
                   _EEP_ReadCupTotal
                           _FSM_Init
                           _INT_Init
                          _TMR1_Init
                    _TMR1_SetTime_ms
                           _init_lcd
 ---------------------------------------------------------------------------------
 (2) _init_lcd                                             1     1      0    2674
                                             13 BANK0      1     1      0
                   _lcd_send_command
                           _v_timer0
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     3     3      0    1368
                                              4 COMMON     2     2      0
                                             12 BANK0      1     1      0
                           _v_timer0
 ---------------------------------------------------------------------------------
 (3) _v_timer0                                            12     8      4    1306
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetTime_ms                                      2     0      2     870
                                             12 BANK0      2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _TMR1_Init                                            2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FSM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEP_ReadCupTotal                                     4     4      0      31
                                              3 BANK0      4     4      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _EEP_ReadAutoTime                                     4     4      0      31
                                              3 BANK0      4     4      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _BTN_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM_ModeControl                                      2     2      0   13535
                                              0 BANK1      2     2      0
                         _BTN_IsHeld
                      _BTN_IsPressed
                   _BTN_IsPressed_ms
                    _BTN_IsPressed_s
                   _EEP_SaveAutoTime
                   _EEP_SaveCupTotal
                      _LcdPrintCharS
                     _LcdPrintFloatS
                       _LcdPrintNumS
                    _LcdPrintStringS
                            _MTR_Set
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _MTR_Set                                              1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LcdPrintStringS                                      6     3      3    3218
                                              5 COMMON     1     1      0
                                              3 BANK0      5     2      3
                    _lcd_print_charS
 ---------------------------------------------------------------------------------
 (2) _LcdPrintNumS                                         8     5      3    2758
                                             34 BANK0      8     5      3
                            ___lldiv
                            ___llmod
                       _lcd_power_of
                    _lcd_print_charS
 ---------------------------------------------------------------------------------
 (3) _lcd_power_of                                        10     6      4    1023
                                              4 COMMON     1     1      0
                                             12 BANK0      9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              5 COMMON     1     1      0
                                             21 BANK0      9     1      8
                       _lcd_power_of (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                             21 BANK0     13     5      8
                       _lcd_power_of (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcdPrintFloatS                                       8     5      3    4147
                                             12 BANK0      8     5      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                    _lcd_print_charS
 ---------------------------------------------------------------------------------
 (2) _lcd_print_charS                                      4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LcdPrintCharS                                        6     4      2     273
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _EEP_SaveCupTotal                                     0     0      0     422
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _EEP_SaveAutoTime                                     0     0      0     422
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         4     3      1     422
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _BTN_IsPressed_s                                      1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BTN_IsPressed_ms                                     5     3      2     990
                                             12 BANK0      5     3      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     772
                                              4 BANK0      8     4      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _BTN_IsPressed                                        2     2      0      89
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BTN_IsHeld                                           3     3      0      62
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisplayLcdScreen                                     2     2      0    1272
                                             13 BANK0      2     2      0
                     _lcd_print_char
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       5     4      1     678
                                              8 BANK0      5     4      1
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd                                        2     2      0     365
                                              6 BANK0      2     2      0
                          _lcd_delay
                    _lcd_write_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_print_char                                       1     1      0     396
                                              8 BANK0      1     1      0
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       2     2      0     365
                                              6 BANK0      2     2      0
                          _lcd_delay
                    _lcd_write_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_write_4bits                                      2     2      0     167
                                              5 COMMON     1     1      0
                                              5 BANK0      1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (5) _lcd_delay                                            6     6      0     136
                                              4 COMMON     1     1      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             6     6      0     136
                                              4 COMMON     1     1      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  0     0      0     444
                           _TMR1_Isr
                         _TMR1_Start
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (7) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_Isr                                             0     0      0     444
                        _BTN_Reading
 ---------------------------------------------------------------------------------
 (8) _BTN_Reading                                          4     4      0     444
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _DisplayLcdScreen
     _lcd_print_char
       _lcd_write_data
         _lcd_delay
         _lcd_write_4bits
           _lcd_delay
     _lcd_set_cursor
       _lcd_write_cmd
         _lcd_delay
         _lcd_write_4bits
   _FSM_ModeControl
     _BTN_IsHeld
     _BTN_IsPressed
     _BTN_IsPressed_ms
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
     _BTN_IsPressed_s
     _EEP_SaveAutoTime
       _eeprom_write
     _EEP_SaveCupTotal
       _eeprom_write
     _LcdPrintCharS
     _LcdPrintFloatS
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _lcd_print_charS
     _LcdPrintNumS
       ___lldiv
         _lcd_power_of (ARG)
           ___lmul
       ___llmod
         _lcd_power_of (ARG)
       _lcd_power_of
       _lcd_print_charS
     _LcdPrintStringS
       _lcd_print_charS
     _MTR_Set
     ___lwdiv
     ___wmul
   _LcdPrintStringS
   _SYS_Init
     _BTN_Init
     _EEP_ReadAutoTime
       _eeprom_read
     _EEP_ReadCupTotal
       _eeprom_read
     _FSM_Init
     _INT_Init
     _TMR1_Init
     _TMR1_SetTime_ms
       ___lwdiv
     _init_lcd
       _lcd_send_command
         _v_timer0
       _v_timer0

 _isr (ROOT)
   _TMR1_Isr
     _BTN_Reading
   _TMR1_Start
   _TMR1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      2E       7       57.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      87      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      87      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 12 08:40:35 2023

          ?_EEP_SaveCupTotal 0070            ?_EEP_SaveAutoTime 0070                           l43 0CD3  
                         l51 0C41                           l27 0C25                           l47 0C8F  
                         l55 0E34                           l94 0BF5                 ___awdiv@sign 0025  
                ?_BTN_IsHeld 0070          ___wmul@multiplicand 0022           ??_EEP_SaveCupTotal 0076  
              ?_lcd_power_of 002C           ??_EEP_SaveAutoTime 0076                          l103 00B8  
                        l203 0C1A                          l305 0798                          l403 04A3  
                        l156 034A                          l308 06B7                          l414 07FF  
                        l343 03FA                          l273 0E61                          l361 0D3B  
                        l185 0C64                          l265 0EEE                          l354 0D04  
                        l291 0E8E                          l268 0E54                          l372 0D59  
                        l613 0D06                          l453 0DBD                          l429 0BF0  
                        l286 0E81                          l382 0C0F                          l446 0C32  
                        l198 0C79                          l294 0FAB                          l615 0D1F  
                        l632 0E90                          l392 0CEB                          l456 0CA5  
                        l633 0E90                          l449 0C50                          l379 0D9A  
                        l395 0DE1                          l643 0D65                          l299 0FC6  
                        l636 0EAF                          l389 0F8D                          l645 0D79  
                        l398 0585                          l639 0EBE                          l399 05A8  
                        l809 070B                          l657 0F22                          l923 07D5  
                        l933 0F57                          l679 0663                          l873 0756  
                        l796 0608                          _isr 0004                 ___awmod@sign 0025  
                        wreg 0009                 MTR_Set@state 0074              _TMR1_SetTime_ms 0C65  
               ?_BTN_Reading 0070                lcd_delay@time 0020              ?_lcd_set_cursor 0028  
                       l3001 0E67                         l3011 0F8E                         l3101 0D43  
                       l2301 0799                         l3021 0FA6                         l3013 0F92  
                       l3007 0E6A                         l3023 0CEE                         l3103 0D48  
                       l2311 07AE                         l2303 079C                         l3111 0CE7  
                       l3009 0E7C                         l3033 0CFB                         l3025 0CF6  
                       l2321 07CB                         l2313 07B2                         l2305 07A2  
                       l3121 0EAE                         l3113 0E95                         l3201 06E0  
                       l3041 0EFC                         l3035 0D00                         l3107 0D54  
                       l2403 0C89                         l2315 07C1                         l2307 07A5  
                       l2323 07D1                         l2411 0C3A                         l3131 0EBD  
                       l3123 0EB2                         l3115 0EA2                         l3203 06E4  
                       l3211 06FD                         l3043 0F04                         l3051 0757  
                       l3019 0F94                         l3029 0CF7                         l2405 0C8E  
                       l2317 07C5                         l2309 07AA                         l2421 0E12  
                       l3125 0EB6                         l3117 0EA8                         l3141 05AF  
                       l3213 0702                         l3205 06EE                         l3221 0F2A  
                       l3109 0CD5                         l2181 0628                         l3045 0F0B  
                       l3037 0EEF                         l3061 078F                         l3053 0760  
                       l3301 049E                         l3133 0D0C                         l2501 0C5D  
                       l2319 07C6                         l2415 0C3C                         l3127 0EB7  
                       l3119 0EAA                         l3303 0C26                         l3151 05C3  
                       l3143 05B4                         l3215 0707                         l3207 06F2  
                       l3231 0F44                         l3223 0F2D                         l2191 064E  
                       l2183 062C                         l2175 0609                         l3047 0F1A  
                       l3039 0EF8                         l3055 0762                         l2351 0C1F  
                       l2503 0C5E                         l2511 0C65                         l3071 067B  
                       l3311 034B                         l3241 0CBF                         l2425 0E14  
                       l2409 0C34                         l3129 0EB8                         l3305 0DC0  
                       l3161 05D7                         l3153 05C5                         l3145 05B6  
                       l3137 05A9                         l3209 06F7                         l3233 0F48  
                       l3225 0F32                         l2193 0655                         l2185 0633  
                       l2177 061A                         l2281 070C                         l3057 0780  
                       l2505 0C5F                         l2513 0C76                         l3081 06AC  
                       l3073 068B                         l3065 0666                         l3321 0366  
                       l3313 034D                         l3091 0D2A                         l3083 0D22  
                       l3403 0D83                         l3243 0CC5                         l2419 0E0C  
                       l3307 0DD0                         l3171 05F4                         l3163 05DB  
                       l3155 05CB                         l3147 05BA                         l3139 05AB  
                       l3235 0F4D                         l3227 0F36                         l3219 0F23  
                       l2187 0645                         l2179 061D                         l2195 065B  
                       l2291 0739                         l2283 0715                         l3059 0784  
                       l3251 07D7                         l2507 0C60                         l2515 0C78  
                       l3075 0690                         l3067 066F                         l3331 0376  
                       l3323 036A                         l3315 0359                         l3093 0D2F  
                       l3405 0D93                         l3309 0C42                         l3165 05EA  
                       l3157 05CE                         l3173 05FA                         l3149 05BF  
                       l3181 06B8                         l3229 0F3A                         l3237 0F53  
                       l3261 0543                         l2189 064D                         l2293 0741  
                       l2285 0718                         l3253 07E9                         l3421 0D61  
                       l3501 0173                         l2349 0C1B                         l2429 0BF1  
                       l2517 0BEE                         l2509 0C62                         l3077 069B  
                       l3069 0670                         l3333 037B                         l3317 035E  
                       l3095 0D3E                         l3415 0C0B                         l3087 0D22  
                       l3407 0D96                         l3247 0CC7                         l3175 05FF  
                       l3167 05EE                         l3159 05D3                         l3191 06C9  
                       l3183 06BA                         l3263 0551                         l2295 0748  
                       l2287 0723                         l3271 03FE                         l3255 07F1  
                       l2439 0C11                         l3423 0D6A                         l3511 0197  
                       l3503 0177                         l3431 004E                         l3079 06A7  
                       l3351 03AB                         l3343 0390                         l3335 0386  
                       l3327 036B                         l3319 0362                         l3089 0D26  
                       l3177 0604                         l3169 05EF                         l3193 06CE  
                       l3185 06BE                         l3265 056B                         l2289 0727  
                       l2297 074E                         l3281 0419                         l3273 0406  
                       l3257 07F6                         l3425 0D6F                         l3417 0D5A  
                       l3601 0303                         l3521 01C5                         l3513 01A2  
                       l3505 0180                         l3441 0074                         l3433 004F  
                       l3353 03B0                         l3337 038B                         l3099 0D3F  
                       l2395 0C7B                         l3195 06D4                         l3187 06C3  
                       l3267 0571                         l3259 0533                         l3291 0446  
                       l3275 040E                         l3427 0D75                         l3419 0D5C  
                       l3611 0320                         l3603 030C                         l3531 01ED  
                       l3523 01C7                         l3507 0183                         l3451 00A5  
                       l3443 0079                         l3435 0063                         l3371 03D6  
                       l3363 03C0                         l3355 03B4                         l3347 039B  
                       l3339 038F                         l2397 0C81                         l3197 06D7  
                       l3189 06C5                         l3293 046D                         l3277 0414  
                       l3269 03FD                         l3605 030F                         l3541 0215  
                       l3525 01D7                         l3533 01F0                         l3517 01B2  
                       l3509 018D                         l3461 00D6                         l3453 00B0  
                       l3445 007D                         l3437 0067                         l2493 0C51  
                       l3381 03E7                         l3365 03C5                         l3349 03A0  
                       l3701 0FCA                         l2399 0C87                         l3199 06DC  
                       l3295 0472                         l3287 041B                         l3607 0318  
                       l3551 0238                         l3543 0219                         l3535 01F9  
                       l3527 01DE                         l3519 01C0                         l3471 0100  
                       l3463 00DB                         l3455 00B4                         l3447 0086  
                       l3439 006B                         l3391 0DB9                         l2495 0C53  
                       l3383 03F2                         l3375 03D7                         l3367 03D0  
                       l3359 03B5                         l3631 0EC6                         l3711 0FE5  
                       l3703 0FD4                         l3297 0476                         l3289 0444  
                       l3609 031D                         l3553 0243                         l3561 0258  
                       l3537 01FE                         l3529 01E2                         l3481 012D  
                       l3465 00DF                         l3457 00B9                         l3449 009A  
                       l3617 0326                         l3393 0C90                         l2497 0C57  
                       l3385 03F6                         l3369 03D5                         l3641 0ECB  
                       l3633 0EC7                         l3713 0FE8                         l3705 0FDB  
                       l3395 0D7C                         l3299 049C                         l3571 0278  
                       l3563 0261                         l3555 0246                         l3547 0225  
                       l3539 020E                         l3491 015B                         l3483 0131  
                       l3475 0105                         l3459 00C2                         l3467 00E3  
                       l3387 0D9B                         l2499 0C5B                         l3379 03E2  
                       l3651 0EDD                         l3643 0ECD                         l3635 0EC8  
                       l3627 0EBF                         l3715 0FF2                         l3707 0FDE  
                       l3397 0D7D                         l3661 0F5E                         l3581 02B1  
                       l3565 0266                         l3557 024C                         l3549 0233  
                       l3493 0164                         l3485 013A                         l3477 010E  
                       l3469 00EC                         l3389 0DB0                         l3653 0EE0  
                       l3645 0ED0                         l3637 0EC9                         l3629 0EC4  
                       l3717 0FF6                         l3709 0FE4                         l3399 0D80  
                       l3671 0F6D                         l3591 02DF                         l3583 02B5  
                       l3575 0284                         l3567 026F                         l3495 0165  
                       l3487 0143                         l3479 0122                         l3655 0EE8  
                       l3647 0ED7                         l3639 0ECA                         l3719 0FFB  
                       l3681 0F7A                         l3673 0F73                         l3593 02EA  
                       l3585 02B8                         l3577 02A2                         l3569 0272  
                       l3497 0169                         l3489 0157                         l3657 0EEB  
                       l3649 0EDA                         l3683 0F82                         l3675 0F78  
                       l3667 0F60                         l3659 0F58                         l3595 02F5  
                       l3587 02C2                         l3579 02AA                         l3499 0172  
                       l3685 0F87                         l3669 0F68                         l3589 02CB  
                       l3695 0E3D                         l3687 0E37                         l3791 0330  
                       l3599 02FA                         l3697 0E4F                         l3689 0E3A  
                       l3793 0D8B                         l3699 0FC7                         l2999 0E64  
                       ?_isr 0070        _counterForButtonPress 004A                         STR_1 1077  
                       STR_2 1033                         STR_3 1099                         STR_4 1000  
                       STR_5 1044                         STR_6 1011                         STR_7 1077  
                       STR_8 1033                         STR_9 1088                         u1410 065B  
                       u1411 065A                         u3020 0D75                         u3100 0164  
                       u1405 064F                         u3021 0D74                         u3005 0D66  
                       u3101 0163                         u1350 061A                         u3110 0172  
                       u3030 0074                         u1351 0619                         u3015 0D6B  
                       u3111 0171                         u3031 0073                         u3200 0238  
                       u3120 0180                         u3040 0086                         u3201 0237  
                       u3121 017F                         u3041 0085                         u1370 062C  
                       u1610 0715                         u3210 0243                         u3130 01C0  
                       u3050 00C2                         u1371 062B                         u1611 0714  
                       u3211 0242                         u3131 01BF                         u3051 00C1  
                       u2500 0EFC                         u3300 0318                         u3220 0261  
                       u3140 01C5                         u3060 00EC                         u1365 061E  
                       u2501 0EFB                         u3301 0317                         u3221 0260  
                       u3141 01C4                         u3061 00EB                         u3310 0F73  
                       u1710 07C1                         u1390 0645                         u1630 0727  
                       u3230 0266                         u3150 01D7                         u3070 010E  
                       u3311 0F72                         u1711 07C0                         u1391 0644  
                       u1631 0726                         u3231 0265                         u3151 01D6  
                       u3071 010D                         u3320 0F8D                         u2600 0EAE  
                       u1640 0739                         u3240 026F                         u3160 01F9  
                       u3080 013A                         u3321 0F8C                         u1705 07B3  
                       u2601 0EAD                         u1385 062D                         u1641 0738  
                       u1625 0719                         u3241 026E                         u3161 01F8  
                       u3081 0139                         u3330 0E4F                         u1730 07D1  
                       u2610 0EBD                         u2530 0F1A                         u3250 02B1  
                       u3170 01FE                         u3090 0143                         u3331 0E4E  
                       u1731 07D0                         u1715 07BD                         u2611 0EBC  
                       u1395 0641                         u2531 0F19                         u2515 0F05  
                       u3251 02B0                         u3171 01FD                         u3091 0142  
                       u3340 0E61                         u2460 0E7C                         u1900 0C3A  
                       u1660 074E                         u2540 078F                         u3260 02C2  
                       u3180 020E                         u2620 0D0C                         u3341 0E60  
                       u2461 0E7B                         u1725 07C7                         u1901 0C39  
                       u1661 074D                         u1645 0735                         u2525 0F0C  
                       u2541 078E                         u3261 02C1                         u3181 020D  
                       u2621 0D0B                         u2470 0E8E                         u1670 07A2  
                       u1910 0E12                         u2710 05FA                         u2630 05AF  
                       u3270 02CB                         u3190 0233                         u3350 0FE4  
                       u3335 0E4B                         u2471 0E8D                         u1671 07A1  
                       u1911 0E11                         u2711 05F9                         u2631 05AE  
                       u1655 0742                         u3271 02CA                         u3191 0232  
                       u3351 0FE3                         u1920 0E33                         u2720 05FF  
                       u2640 05BA                         u2800 06FD                         u3280 0303  
                       u2480 0FA6                         u3360 0FF2                         u3345 0E5D  
                       u2465 0E78                         u1921 0E31                         u2721 05FE  
                       u2705 05F0                         u2641 05B9                         u2801 06FC  
                       u2545 078B                         u3281 0302                         u2481 0FA5  
                       u3361 0FF1                         u1690 07B2                         u1930 0E34  
                       u2650 05CB                         u2810 0702                         u2730 06BE  
                       u3290 030C                         u2490 0FC6                         u3370 0FFB  
                       u2475 0E8A                         u1691 07B1                         u2651 05CA  
                       u2811 0701                         u2731 06BD                         u3291 030B  
                       u2491 0FC5                         u2555 0693                         u3371 0FFA  
                       u2900 0CD3                         u2740 06C9                         u2820 0F2A  
                       u2565 0D33                         u1685 07A6                         u1925 0E2E  
                       u2741 06C8                         u2821 0F29                         u2485 0FA2  
                       u2590 0E95                         u2670 05DB                         u2750 06D4  
                       u2910 07FF                         u1950 0C18                         u2575 0D4C  
                       u2591 0E94                         u2671 05DA                         u2751 06D3  
                       u2911 07FE                         u1951 0C15                         u2495 0FC2  
                       u2840 0F3A                         u2920 0571                         u2665 05CF  
                       u2841 0F39                         u2585 0CD9                         u2921 0570  
                       u1890 0C87                         u2690 05EA                         u2770 06E4  
                       u2850 0F44                         u2930 0414                         u1891 0C86  
                       u2691 05E9                         u2771 06E3                         u2851 0F43  
                       u2835 0F2E                         u2931 0413                         u2780 06EE  
                       u2940 0444                         u1964 0C1A                         u2685 05DC  
                       u2781 06ED                         u2765 06D8                         u2941 0443  
                       u2870 0F53                         u2950 0472                         u2695 05E6  
                       u2871 0F52                         u2855 0F40                         u2951 0471  
                       u2880 0CC5                         u2960 04A3                         u2881 0CC4  
                       u2785 06EA                         u2865 0F49                         u2961 04A2  
                       u2890 0CD2                         u2891 0CD0                         u2795 06F3  
                       u2980 0DB9                         u2981 0DB8                         u2990 0D61  
                       i1l39 0530                         u2975 0DD3                         u2991 0D60  
                       _TMR1 0016               ??_eeprom_write 0020       __end_of_lcd_write_data 0D5A  
                       _main 0FC7           _flagForButtonPress 0056                         _mode 0069  
            __end_of_MTR_Set 0C1B                         fsr0h 0005                         fsr1h 0007  
                       indf0 0000                         fsr0l 0004                         indf1 0001  
                       fsr1l 0006                         btemp 007E                _BTN_IsPressed 0C7A  
             ?_lcd_write_cmd 0070                         start 001D              ?_lcd_print_char 0070  
                      ??_isr 0074               ??_lcd_power_of 0074             __end_of_BTN_Init 0C26  
                      ?_main 0070              __end_of___awdiv 0609                        _EEADR 0191  
                      STR_10 1055                        STR_11 1022                        STR_12 1066  
                      STR_13 1099                        STR_14 1000                        STR_15 1099  
                      STR_16 1000                        STR_17 1077              __end_of___awmod 070C  
                      _ANSA0 0C60                        _ANSA1 0C61                        _ANSA2 0C62  
                      _ANSC0 0C70                        _ANSC1 0C71                        _ANSC2 0C72  
                      _ANSC3 0C73                        _ANSC6 0C76                        _ANSC7 0C77  
           __end_of_FSM_Init 0BF6              __end_of___lldiv 0664              ___awdiv@divisor 0020  
    __end_of_lcd_write_4bits 0D05              __end_of___llmod 0757              __end_of___lwdiv 07D6  
                      i1l191 0BED              __end_of___lwmod 0F58                        i1l195 0CBC  
                      i1l435 001B                        i1l188 0C08              ___awdiv@counter 0024  
          ?_lcd_send_command 0070                        _PORTA 000C                        _PORTC 000E  
           __end_of_INT_Init 0BF1                        _TRISA 008C                        _TRISC 008E  
           lcd_write_cmd@cmd 0027         __end_of_LcdPrintNumS 04A4          ___lmul@multiplicand 0024  
         ??_lcd_send_command 0074             __end_of_TMR1_Isr 0CBD                  ?_TMR1_Start 0070  
LcdPrintFloatS@decimalPlaces 0032              ?_lcd_write_data 0070               ?_BTN_IsPressed 0070  
                      status 0003                        wtemp0 007E             ?_lcd_print_charS 0070  
           __end_of_SYS_Init 0EEF             __end_of_Delay_ms 0E62              __initialization 001F  
               __end_of_main 1000               _BTN_Reading$37 0072      BTN_IsPressed_ms@milisec 002C  
    __end_of_TMR1_SetTime_ms 0C7A                       ??_main 0076              _FSM_ModeControl 004E  
                  ??_MTR_Set 0074             ___llmod@dividend 0039                       _EEDATA 0193  
                     _EECON1 0195                       _EECON2 0196             ___awdiv@dividend 0022  
         BTN_IsPressed@index 0075               LcdPrintCharS@c 0075               LcdPrintCharS@x 0023  
             LcdPrintCharS@y 0074                       i1l2361 04C9                       i1l2353 04A4  
                     i1l2371 04FE                       i1l2363 04D3                       i1l2373 04FF  
                     i1l2365 04DC                       i1l2381 0526                       i1l2383 052A  
                     i1l2375 0509                       i1l2367 04ED                       i1l2359 04A5  
                     i1l2377 0512                       i1l2369 04F7                       i1l2379 0514  
                     i1l2831 0C02                       i1l2841 0CB9                       i1l2833 0C07  
                     i1l1873 0BEB                       i1l2835 0CA6                       i1l2837 0CB5  
                     i1l2941 0010                       i1l2839 0CB7                       i1l2943 0013  
                     i1l2945 0015                       i1l2937 0006                       i1l2947 0018  
                     i1l2939 000B                       u180_20 04C9                       u236_20 0CB5  
                     u244_20 000B                       u180_21 04C8                       u236_21 0CB4  
                     u244_21 000A                       u236_25 0CB1                       u181_20 04DC  
                     u245_20 0010                       u181_21 04DB                       u245_21 000F  
                     u182_20 04ED                       u182_21 04EC                       u183_20 0509  
                     u183_21 0508                       u184_20 0512                       u184_21 0511  
                     u185_20 0530                       u185_21 052F                       _TMR1IE 0488  
                     _TMR1IF 0088              ??_lcd_write_cmd 0026           lcd_write_4bits@dat 0025  
      __end_of_LcdPrintCharS 0DE2                       ___lmul 0EEF            __end_of_TMR1_Init 0C65  
                     ___wmul 0D5A            __end_of_TMR1_Stop 0BEE                    ??___awdiv 0074  
                  ??___awmod 0074                 BTN_Reading@i 0073                    ??___lldiv 0075  
                  ??___llmod 0075                    ??___lwdiv 0028                    ??___lwmod 0074  
              lcd_power_of@A 002C                lcd_power_of@i 0030                lcd_power_of@x 002E  
       _flagForButtonPress_s 0052             __end_of_init_lcd 03FB              _buttonInputMask 00C4  
           ___awdiv@quotient 0026              ___awmod@divisor 0020         __end_of_eeprom_write 0EBF  
            ___awmod@counter 0024              _BTN_IsPressed_s 0C33             ?_lcd_write_4bits 0070  
               __pdataCOMMON 0078             __end_of_v_timer0 0FC7              ??_BTN_IsPressed 0074  
       __end_of_lcd_power_of 0799      __end_of__initialization 004A              eeprom_read@addr 0074  
                  ?_BTN_Init 0070                    ?_FSM_Init 0070                    ?_INT_Init 0070  
             __pcstackCOMMON 0070                 __pidataBANK0 0BE9                 __pidataBANK1 0DE2  
    __end_of_FSM_ModeControl 034B                    ?_TMR1_Isr 0070                 ??_BTN_IsHeld 0074  
           ?_TMR1_SetTime_ms 002C             ??_lcd_set_cursor 0029                    ?_SYS_Init 0070  
                  ?_Delay_ms 0070            eeprom_write@value 0074         lcd_set_cursor@column 0028  
                 __countAuto 0064                   __pbssBANK0 004A                   __pbssBANK1 00C8  
           ??_lcd_print_char 0076          TMR1_SetTime_ms@time 002C                   ??_BTN_Init 0074  
         __end_of_BTN_IsHeld 0CD4               _LcdPrintFloatS 0531                   ??_FSM_Init 0074  
               _LcdPrintNumS 03FB                   ??_INT_Init 0074                   __pmaintext 0FC7  
                    ?___lmul 0020      __end_of_BTN_IsPressed_s 0C42                      ?___wmul 0020  
                 ??_TMR1_Isr 0074                   __pintentry 0004               ___lmul@product 0028  
           _EEP_ReadCupTotal 0C90             _EEP_ReadAutoTime 0D9B          BTN_IsPressed@result 0074  
                 ??_SYS_Init 0076                   ??_Delay_ms 0074             ??_lcd_write_data 0026  
               ??_TMR1_Start 0070              LcdPrintFloatS@x 0031              LcdPrintFloatS@y 002C  
                    _MTR_Set 0C10              BTN_IsHeld@index 0020           lcd_write_data@data 0027  
     __end_of_LcdPrintFloatS 05A9                    ?_init_lcd 0070        LcdPrintStringS@string 0024  
            LcdPrintNumS@num 0043            __end_of_lcd_delay 0E8F                    ?_v_timer0 0020  
                    ___awdiv 05A9                      ___awmod 06B8             _DisplayLcdScreen 0F58  
                    ___lldiv 0609                      ___llmod 070C             ?_FSM_ModeControl 0070  
                    ___lwdiv 0799                      ___lwmod 0F23           __end_of_TMR1_Start 0C09  
                    __ptext1 0EBF                      __ptext2 034B                      __ptext3 0664  
                    __ptext4 0F8E                      __ptext5 0C65                      __ptext6 0C51  
                    __ptext7 0BEE                      __ptext8 0BF1                      __ptext9 0C90  
          ??_LcdPrintStringS 0026                    _T1CONbits 0018             ___awmod@dividend 0022  
                    clrloop0 0BF7                __counterDelay 0077         end_of_initialization 004A  
           _BTN_IsPressed_ms 0E0A              ?_LcdPrintFloatS 002C                    Delay_ms@i 0021  
                  Delay_ms@j 0023        _debounceButtonBuffer1 005A        _debounceButtonBuffer2 00C8  
                    init_ram 0BFC                   ??_init_lcd 002D                 _eeprom_write 0E8F  
                    initloop 0BFD              ___lldiv@divisor 0035              ___lldiv@counter 0041  
                 ??_v_timer0 0024                   _timer1_MUL 006D                   _timer1_cnt 0062  
           ?_BTN_IsPressed_s 0070                    _TMR1_Init 0C51                    _PORTAbits 000C  
               _lcd_power_of 0757                    _TMR1_Stop 0BEB            LcdPrintFloatS@num 002D  
       LcdPrintNumS@num_flag 0048             _EEP_SaveCupTotal 0C42                   lcd_delay@i 0021  
                 lcd_delay@j 0023             _EEP_SaveAutoTime 0C26               TMR1_Init@count 0074  
              ??_eeprom_read 0020        __end_of_lcd_write_cmd 0D3C        BTN_IsPressed_ms@index 0030  
                  _LcdScreen 00A0               __end_of___lmul 0F23               __end_of___wmul 0D7A  
              __pidataCOMMON 0002                   ?_TMR1_Init 0074                   ?_TMR1_Stop 0070  
        start_initialization 001F                ??_BTN_Reading 0070                  __end_of_isr 001D  
      __end_of_BTN_IsPressed 0C90             _lcd_send_command 0664              ___llmod@divisor 0035  
   __end_of_EEP_ReadCupTotal 0CA6              ___llmod@counter 003D     __end_of_EEP_ReadAutoTime 0DBE  
      lcd_set_cursor@address 002C                LcdPrintNumS@i 0049                LcdPrintNumS@x 0047  
              LcdPrintNumS@y 0042    LcdPrintFloatS@integerPart 0033                     ??___lmul 0074  
                   ??___wmul 0074          __end_of_eeprom_read 0D20                 Delay_ms@time 0020  
                __pdataBANK0 006D                  __pdataBANK1 00A0            ??_lcd_print_charS 0020  
                __pbssCOMMON 0076                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00CC             lcd_print_charS@c 0074                     ?_MTR_Set 0070  
   __end_of_DisplayLcdScreen 0F8E             eeprom_write@addr 0075                 _buttonBuffer 00C0  
                  __cupTotal 0066          __end_of_BTN_Reading 0531                    __pnvBANK0 006B  
              _LcdPrintCharS 0DBE             ___lwdiv@dividend 0026              _LcdPrintStringS 07D6  
                  __timeAuto 0078                     ?___awdiv 0020                     ?___awmod 0020  
                   ?___lldiv 0035                     ?___llmod 0035                     ?___lwdiv 0024  
                   ?___lwmod 0020     __end_of_BTN_IsPressed_ms 0E35                    _lcd_delay 0E62  
        lcd_send_command@cmd 002C                  ??_TMR1_Init 0076                  ??_TMR1_Stop 0070  
           lcd_power_of@temp 0031                    _index_lcd 006A             ??_LcdPrintFloatS 002F  
                _flag_timer1 0068             ___lwdiv@quotient 0029               ___wmul@product 0074  
                   _BTN_Init 0C1B               ?_LcdPrintCharS 0074                    clear_ram0 0BF6  
                _eeprom_read 0D05                     _FSM_Init 0BF1            ??_lcd_write_4bits 0075  
                   _INT_Init 0BEE     __end_of_EEP_SaveCupTotal 0C51     __end_of_EEP_SaveAutoTime 0C33  
                   _TMR1_Isr 0CA6                   ?_lcd_delay 0070            ___wmul@multiplier 0020  
       BTN_IsPressed_s@index 0074                     _SYS_Init 0EBF                     _Delay_ms 0E35  
                _BTN_Reading 04A4            ___lmul@multiplier 0020      __end_of_LcdPrintStringS 0800  
          ??_TMR1_SetTime_ms 0076                   _EECON1bits 0195              lcd_print_char@c 0028  
   __end_of_lcd_send_command 06B8             LcdPrintStringS@x 0075             LcdPrintStringS@y 0023  
                _current_col 005E                  _current_row 0060              ___lwdiv@divisor 0024  
            ___lwdiv@counter 002B                     __ptext10 0D9B                     __ptext11 0D05  
                   __ptext20 070C                     __ptext12 0C1B                     __ptext21 0609  
                   __ptext13 004E                     __ptext30 0E8F                     __ptext22 0531  
                   __ptext14 0D5A                     __ptext31 0C33                     __ptext23 0CD4  
                   __ptext15 0C10                     __ptext40 0D3C                     __ptext32 0E0A  
                   __ptext24 0F23                     __ptext16 07D6                     __ptext41 0CEC  
                   __ptext33 0799                     __ptext25 06B8                     __ptext17 03FB  
                   __ptext42 0E62                     __ptext34 0C7A                     __ptext26 05A9  
                   __ptext18 0757                     __ptext43 0E35                     __ptext35 0CBD  
                   __ptext27 0DBE                     __ptext19 0EEF                     __ptext36 0F58  
                   __ptext28 0C42                     __ptext45 0BEB                     __ptext37 0D7A  
                   __ptext29 0C26                     __ptext46 0C02                     __ptext38 0D20  
                   __ptext47 0CA6                     __ptext39 0C09                     __ptext48 04A4  
            ??_LcdPrintCharS 0020                     _init_lcd 034B            ?_EEP_ReadCupTotal 0070  
          ?_EEP_ReadAutoTime 0070                ?_LcdPrintNumS 0042                    v_timer0@i 0028  
                  v_timer0@j 002A           ??_EEP_ReadCupTotal 0023              _lcd_print_charS 0CD4  
                   _v_timer0 0F8E           ??_EEP_ReadAutoTime 0023                     int$flags 007E  
                ??_lcd_delay 0074                   _BTN_IsHeld 0CBD                 _timer1_value 006B  
                 _INTCONbits 000B               __pstringtext10 1099               __pstringtext11 0000  
          ?_DisplayLcdScreen 0070                     intlevel1 0000               _lcd_set_cursor 0D7A  
          ??_FSM_ModeControl 00CC            lcd_set_cursor@row 002B             ?_LcdPrintStringS 0023  
           ___lwmod@dividend 0022           ??_DisplayLcdScreen 002D             ___lldiv@dividend 0039  
               v_timer0@time 0020               ??_LcdPrintNumS 0045                   _OSCCONbits 0099  
             _lcd_print_char 0C09            ?_BTN_IsPressed_ms 002C            DisplayLcdScreen@i 002E  
              __pstringtext1 1000                __pstringtext2 1011                __pstringtext3 1022  
              __pstringtext4 1033                __pstringtext5 1044                __pstringtext6 1055  
              __pstringtext7 1066                __pstringtext8 1077                __pstringtext9 1088  
         ??_BTN_IsPressed_ms 002E             ___lldiv@quotient 003D              ___lwmod@divisor 0020  
            ___lwmod@counter 0075              _flagPressAdjust 0076       __end_of_lcd_set_cursor 0D9B  
                 _TMR1_Start 0C02              _lcd_write_4bits 0CEC            ??_BTN_IsPressed_s 0074  
              ?_eeprom_write 0074      __end_of_lcd_print_charS 0CEC                   _STATUSbits 0003  
               ?_eeprom_read 0070               _lcd_write_data 0D3C       __end_of_lcd_print_char 0C10  
              _lcd_write_cmd 0D20  
