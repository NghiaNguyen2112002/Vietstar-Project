

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jan 29 13:49:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text27,local,class=CODE,merge=1,delta=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2
    61                           	psect	text30,local,class=CODE,merge=1,delta=2
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    81                           	dabs	1,0x7E,2
    82     0000                     
    83                           ; Version 2.40
    84                           ; Generated 17/11/2021 GMT
    85                           ; 
    86                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC16F1829 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009B                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     0111                     	;# 
   170     0112                     	;# 
   171     0113                     	;# 
   172     0114                     	;# 
   173     0115                     	;# 
   174     0116                     	;# 
   175     0117                     	;# 
   176     0118                     	;# 
   177     0119                     	;# 
   178     011A                     	;# 
   179     011B                     	;# 
   180     011D                     	;# 
   181     011E                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184     018E                     	;# 
   185     0191                     	;# 
   186     0191                     	;# 
   187     0192                     	;# 
   188     0193                     	;# 
   189     0193                     	;# 
   190     0193                     	;# 
   191     0194                     	;# 
   192     0195                     	;# 
   193     0196                     	;# 
   194     0199                     	;# 
   195     019A                     	;# 
   196     019B                     	;# 
   197     019B                     	;# 
   198     019C                     	;# 
   199     019D                     	;# 
   200     019E                     	;# 
   201     019F                     	;# 
   202     020C                     	;# 
   203     020D                     	;# 
   204     020E                     	;# 
   205     0211                     	;# 
   206     0211                     	;# 
   207     0212                     	;# 
   208     0212                     	;# 
   209     0213                     	;# 
   210     0213                     	;# 
   211     0214                     	;# 
   212     0214                     	;# 
   213     0215                     	;# 
   214     0215                     	;# 
   215     0215                     	;# 
   216     0216                     	;# 
   217     0216                     	;# 
   218     0217                     	;# 
   219     0217                     	;# 
   220     0219                     	;# 
   221     021A                     	;# 
   222     021B                     	;# 
   223     021C                     	;# 
   224     021D                     	;# 
   225     021E                     	;# 
   226     021F                     	;# 
   227     0291                     	;# 
   228     0291                     	;# 
   229     0292                     	;# 
   230     0293                     	;# 
   231     0294                     	;# 
   232     0295                     	;# 
   233     0295                     	;# 
   234     0296                     	;# 
   235     0298                     	;# 
   236     0298                     	;# 
   237     0299                     	;# 
   238     029A                     	;# 
   239     029B                     	;# 
   240     029C                     	;# 
   241     029D                     	;# 
   242     029E                     	;# 
   243     0311                     	;# 
   244     0311                     	;# 
   245     0312                     	;# 
   246     0313                     	;# 
   247     0318                     	;# 
   248     0318                     	;# 
   249     0319                     	;# 
   250     031A                     	;# 
   251     038C                     	;# 
   252     038D                     	;# 
   253     038E                     	;# 
   254     0391                     	;# 
   255     0392                     	;# 
   256     0393                     	;# 
   257     0394                     	;# 
   258     0395                     	;# 
   259     0396                     	;# 
   260     039A                     	;# 
   261     039C                     	;# 
   262     039D                     	;# 
   263     039E                     	;# 
   264     039F                     	;# 
   265     0415                     	;# 
   266     0416                     	;# 
   267     0417                     	;# 
   268     041C                     	;# 
   269     041D                     	;# 
   270     041E                     	;# 
   271     0FE4                     	;# 
   272     0FE5                     	;# 
   273     0FE6                     	;# 
   274     0FE7                     	;# 
   275     0FE8                     	;# 
   276     0FE9                     	;# 
   277     0FEA                     	;# 
   278     0FEB                     	;# 
   279     0FED                     	;# 
   280     0FEE                     	;# 
   281     0FEF                     	;# 
   282     0000                     	;# 
   283     0001                     	;# 
   284     0002                     	;# 
   285     0003                     	;# 
   286     0004                     	;# 
   287     0005                     	;# 
   288     0006                     	;# 
   289     0007                     	;# 
   290     0008                     	;# 
   291     0009                     	;# 
   292     000A                     	;# 
   293     000B                     	;# 
   294     000C                     	;# 
   295     000D                     	;# 
   296     000E                     	;# 
   297     0011                     	;# 
   298     0012                     	;# 
   299     0013                     	;# 
   300     0014                     	;# 
   301     0015                     	;# 
   302     0016                     	;# 
   303     0016                     	;# 
   304     0017                     	;# 
   305     0018                     	;# 
   306     0019                     	;# 
   307     001A                     	;# 
   308     001B                     	;# 
   309     001C                     	;# 
   310     001E                     	;# 
   311     001F                     	;# 
   312     008C                     	;# 
   313     008D                     	;# 
   314     008E                     	;# 
   315     0091                     	;# 
   316     0092                     	;# 
   317     0093                     	;# 
   318     0094                     	;# 
   319     0095                     	;# 
   320     0096                     	;# 
   321     0097                     	;# 
   322     0098                     	;# 
   323     0099                     	;# 
   324     009A                     	;# 
   325     009B                     	;# 
   326     009B                     	;# 
   327     009C                     	;# 
   328     009D                     	;# 
   329     009E                     	;# 
   330     010C                     	;# 
   331     010D                     	;# 
   332     010E                     	;# 
   333     0111                     	;# 
   334     0112                     	;# 
   335     0113                     	;# 
   336     0114                     	;# 
   337     0115                     	;# 
   338     0116                     	;# 
   339     0117                     	;# 
   340     0118                     	;# 
   341     0119                     	;# 
   342     011A                     	;# 
   343     011B                     	;# 
   344     011D                     	;# 
   345     011E                     	;# 
   346     018C                     	;# 
   347     018D                     	;# 
   348     018E                     	;# 
   349     0191                     	;# 
   350     0191                     	;# 
   351     0192                     	;# 
   352     0193                     	;# 
   353     0193                     	;# 
   354     0193                     	;# 
   355     0194                     	;# 
   356     0195                     	;# 
   357     0196                     	;# 
   358     0199                     	;# 
   359     019A                     	;# 
   360     019B                     	;# 
   361     019B                     	;# 
   362     019C                     	;# 
   363     019D                     	;# 
   364     019E                     	;# 
   365     019F                     	;# 
   366     020C                     	;# 
   367     020D                     	;# 
   368     020E                     	;# 
   369     0211                     	;# 
   370     0211                     	;# 
   371     0212                     	;# 
   372     0212                     	;# 
   373     0213                     	;# 
   374     0213                     	;# 
   375     0214                     	;# 
   376     0214                     	;# 
   377     0215                     	;# 
   378     0215                     	;# 
   379     0215                     	;# 
   380     0216                     	;# 
   381     0216                     	;# 
   382     0217                     	;# 
   383     0217                     	;# 
   384     0219                     	;# 
   385     021A                     	;# 
   386     021B                     	;# 
   387     021C                     	;# 
   388     021D                     	;# 
   389     021E                     	;# 
   390     021F                     	;# 
   391     0291                     	;# 
   392     0291                     	;# 
   393     0292                     	;# 
   394     0293                     	;# 
   395     0294                     	;# 
   396     0295                     	;# 
   397     0295                     	;# 
   398     0296                     	;# 
   399     0298                     	;# 
   400     0298                     	;# 
   401     0299                     	;# 
   402     029A                     	;# 
   403     029B                     	;# 
   404     029C                     	;# 
   405     029D                     	;# 
   406     029E                     	;# 
   407     0311                     	;# 
   408     0311                     	;# 
   409     0312                     	;# 
   410     0313                     	;# 
   411     0318                     	;# 
   412     0318                     	;# 
   413     0319                     	;# 
   414     031A                     	;# 
   415     038C                     	;# 
   416     038D                     	;# 
   417     038E                     	;# 
   418     0391                     	;# 
   419     0392                     	;# 
   420     0393                     	;# 
   421     0394                     	;# 
   422     0395                     	;# 
   423     0396                     	;# 
   424     039A                     	;# 
   425     039C                     	;# 
   426     039D                     	;# 
   427     039E                     	;# 
   428     039F                     	;# 
   429     0415                     	;# 
   430     0416                     	;# 
   431     0417                     	;# 
   432     041C                     	;# 
   433     041D                     	;# 
   434     041E                     	;# 
   435     0FE4                     	;# 
   436     0FE5                     	;# 
   437     0FE6                     	;# 
   438     0FE7                     	;# 
   439     0FE8                     	;# 
   440     0FE9                     	;# 
   441     0FEA                     	;# 
   442     0FEB                     	;# 
   443     0FED                     	;# 
   444     0FEE                     	;# 
   445     0FEF                     	;# 
   446     0000                     	;# 
   447     0001                     	;# 
   448     0002                     	;# 
   449     0003                     	;# 
   450     0004                     	;# 
   451     0005                     	;# 
   452     0006                     	;# 
   453     0007                     	;# 
   454     0008                     	;# 
   455     0009                     	;# 
   456     000A                     	;# 
   457     000B                     	;# 
   458     000C                     	;# 
   459     000D                     	;# 
   460     000E                     	;# 
   461     0011                     	;# 
   462     0012                     	;# 
   463     0013                     	;# 
   464     0014                     	;# 
   465     0015                     	;# 
   466     0016                     	;# 
   467     0016                     	;# 
   468     0017                     	;# 
   469     0018                     	;# 
   470     0019                     	;# 
   471     001A                     	;# 
   472     001B                     	;# 
   473     001C                     	;# 
   474     001E                     	;# 
   475     001F                     	;# 
   476     008C                     	;# 
   477     008D                     	;# 
   478     008E                     	;# 
   479     0091                     	;# 
   480     0092                     	;# 
   481     0093                     	;# 
   482     0094                     	;# 
   483     0095                     	;# 
   484     0096                     	;# 
   485     0097                     	;# 
   486     0098                     	;# 
   487     0099                     	;# 
   488     009A                     	;# 
   489     009B                     	;# 
   490     009B                     	;# 
   491     009C                     	;# 
   492     009D                     	;# 
   493     009E                     	;# 
   494     010C                     	;# 
   495     010D                     	;# 
   496     010E                     	;# 
   497     0111                     	;# 
   498     0112                     	;# 
   499     0113                     	;# 
   500     0114                     	;# 
   501     0115                     	;# 
   502     0116                     	;# 
   503     0117                     	;# 
   504     0118                     	;# 
   505     0119                     	;# 
   506     011A                     	;# 
   507     011B                     	;# 
   508     011D                     	;# 
   509     011E                     	;# 
   510     018C                     	;# 
   511     018D                     	;# 
   512     018E                     	;# 
   513     0191                     	;# 
   514     0191                     	;# 
   515     0192                     	;# 
   516     0193                     	;# 
   517     0193                     	;# 
   518     0193                     	;# 
   519     0194                     	;# 
   520     0195                     	;# 
   521     0196                     	;# 
   522     0199                     	;# 
   523     019A                     	;# 
   524     019B                     	;# 
   525     019B                     	;# 
   526     019C                     	;# 
   527     019D                     	;# 
   528     019E                     	;# 
   529     019F                     	;# 
   530     020C                     	;# 
   531     020D                     	;# 
   532     020E                     	;# 
   533     0211                     	;# 
   534     0211                     	;# 
   535     0212                     	;# 
   536     0212                     	;# 
   537     0213                     	;# 
   538     0213                     	;# 
   539     0214                     	;# 
   540     0214                     	;# 
   541     0215                     	;# 
   542     0215                     	;# 
   543     0215                     	;# 
   544     0216                     	;# 
   545     0216                     	;# 
   546     0217                     	;# 
   547     0217                     	;# 
   548     0219                     	;# 
   549     021A                     	;# 
   550     021B                     	;# 
   551     021C                     	;# 
   552     021D                     	;# 
   553     021E                     	;# 
   554     021F                     	;# 
   555     0291                     	;# 
   556     0291                     	;# 
   557     0292                     	;# 
   558     0293                     	;# 
   559     0294                     	;# 
   560     0295                     	;# 
   561     0295                     	;# 
   562     0296                     	;# 
   563     0298                     	;# 
   564     0298                     	;# 
   565     0299                     	;# 
   566     029A                     	;# 
   567     029B                     	;# 
   568     029C                     	;# 
   569     029D                     	;# 
   570     029E                     	;# 
   571     0311                     	;# 
   572     0311                     	;# 
   573     0312                     	;# 
   574     0313                     	;# 
   575     0318                     	;# 
   576     0318                     	;# 
   577     0319                     	;# 
   578     031A                     	;# 
   579     038C                     	;# 
   580     038D                     	;# 
   581     038E                     	;# 
   582     0391                     	;# 
   583     0392                     	;# 
   584     0393                     	;# 
   585     0394                     	;# 
   586     0395                     	;# 
   587     0396                     	;# 
   588     039A                     	;# 
   589     039C                     	;# 
   590     039D                     	;# 
   591     039E                     	;# 
   592     039F                     	;# 
   593     0415                     	;# 
   594     0416                     	;# 
   595     0417                     	;# 
   596     041C                     	;# 
   597     041D                     	;# 
   598     041E                     	;# 
   599     0FE4                     	;# 
   600     0FE5                     	;# 
   601     0FE6                     	;# 
   602     0FE7                     	;# 
   603     0FE8                     	;# 
   604     0FE9                     	;# 
   605     0FEA                     	;# 
   606     0FEB                     	;# 
   607     0FED                     	;# 
   608     0FEE                     	;# 
   609     0FEF                     	;# 
   610     0000                     	;# 
   611     0001                     	;# 
   612     0002                     	;# 
   613     0003                     	;# 
   614     0004                     	;# 
   615     0005                     	;# 
   616     0006                     	;# 
   617     0007                     	;# 
   618     0008                     	;# 
   619     0009                     	;# 
   620     000A                     	;# 
   621     000B                     	;# 
   622     000C                     	;# 
   623     000D                     	;# 
   624     000E                     	;# 
   625     0011                     	;# 
   626     0012                     	;# 
   627     0013                     	;# 
   628     0014                     	;# 
   629     0015                     	;# 
   630     0016                     	;# 
   631     0016                     	;# 
   632     0017                     	;# 
   633     0018                     	;# 
   634     0019                     	;# 
   635     001A                     	;# 
   636     001B                     	;# 
   637     001C                     	;# 
   638     001E                     	;# 
   639     001F                     	;# 
   640     008C                     	;# 
   641     008D                     	;# 
   642     008E                     	;# 
   643     0091                     	;# 
   644     0092                     	;# 
   645     0093                     	;# 
   646     0094                     	;# 
   647     0095                     	;# 
   648     0096                     	;# 
   649     0097                     	;# 
   650     0098                     	;# 
   651     0099                     	;# 
   652     009A                     	;# 
   653     009B                     	;# 
   654     009B                     	;# 
   655     009C                     	;# 
   656     009D                     	;# 
   657     009E                     	;# 
   658     010C                     	;# 
   659     010D                     	;# 
   660     010E                     	;# 
   661     0111                     	;# 
   662     0112                     	;# 
   663     0113                     	;# 
   664     0114                     	;# 
   665     0115                     	;# 
   666     0116                     	;# 
   667     0117                     	;# 
   668     0118                     	;# 
   669     0119                     	;# 
   670     011A                     	;# 
   671     011B                     	;# 
   672     011D                     	;# 
   673     011E                     	;# 
   674     018C                     	;# 
   675     018D                     	;# 
   676     018E                     	;# 
   677     0191                     	;# 
   678     0191                     	;# 
   679     0192                     	;# 
   680     0193                     	;# 
   681     0193                     	;# 
   682     0193                     	;# 
   683     0194                     	;# 
   684     0195                     	;# 
   685     0196                     	;# 
   686     0199                     	;# 
   687     019A                     	;# 
   688     019B                     	;# 
   689     019B                     	;# 
   690     019C                     	;# 
   691     019D                     	;# 
   692     019E                     	;# 
   693     019F                     	;# 
   694     020C                     	;# 
   695     020D                     	;# 
   696     020E                     	;# 
   697     0211                     	;# 
   698     0211                     	;# 
   699     0212                     	;# 
   700     0212                     	;# 
   701     0213                     	;# 
   702     0213                     	;# 
   703     0214                     	;# 
   704     0214                     	;# 
   705     0215                     	;# 
   706     0215                     	;# 
   707     0215                     	;# 
   708     0216                     	;# 
   709     0216                     	;# 
   710     0217                     	;# 
   711     0217                     	;# 
   712     0219                     	;# 
   713     021A                     	;# 
   714     021B                     	;# 
   715     021C                     	;# 
   716     021D                     	;# 
   717     021E                     	;# 
   718     021F                     	;# 
   719     0291                     	;# 
   720     0291                     	;# 
   721     0292                     	;# 
   722     0293                     	;# 
   723     0294                     	;# 
   724     0295                     	;# 
   725     0295                     	;# 
   726     0296                     	;# 
   727     0298                     	;# 
   728     0298                     	;# 
   729     0299                     	;# 
   730     029A                     	;# 
   731     029B                     	;# 
   732     029C                     	;# 
   733     029D                     	;# 
   734     029E                     	;# 
   735     0311                     	;# 
   736     0311                     	;# 
   737     0312                     	;# 
   738     0313                     	;# 
   739     0318                     	;# 
   740     0318                     	;# 
   741     0319                     	;# 
   742     031A                     	;# 
   743     038C                     	;# 
   744     038D                     	;# 
   745     038E                     	;# 
   746     0391                     	;# 
   747     0392                     	;# 
   748     0393                     	;# 
   749     0394                     	;# 
   750     0395                     	;# 
   751     0396                     	;# 
   752     039A                     	;# 
   753     039C                     	;# 
   754     039D                     	;# 
   755     039E                     	;# 
   756     039F                     	;# 
   757     0415                     	;# 
   758     0416                     	;# 
   759     0417                     	;# 
   760     041C                     	;# 
   761     041D                     	;# 
   762     041E                     	;# 
   763     0FE4                     	;# 
   764     0FE5                     	;# 
   765     0FE6                     	;# 
   766     0FE7                     	;# 
   767     0FE8                     	;# 
   768     0FE9                     	;# 
   769     0FEA                     	;# 
   770     0FEB                     	;# 
   771     0FED                     	;# 
   772     0FEE                     	;# 
   773     0FEF                     	;# 
   774     0000                     	;# 
   775     0001                     	;# 
   776     0002                     	;# 
   777     0003                     	;# 
   778     0004                     	;# 
   779     0005                     	;# 
   780     0006                     	;# 
   781     0007                     	;# 
   782     0008                     	;# 
   783     0009                     	;# 
   784     000A                     	;# 
   785     000B                     	;# 
   786     000C                     	;# 
   787     000D                     	;# 
   788     000E                     	;# 
   789     0011                     	;# 
   790     0012                     	;# 
   791     0013                     	;# 
   792     0014                     	;# 
   793     0015                     	;# 
   794     0016                     	;# 
   795     0016                     	;# 
   796     0017                     	;# 
   797     0018                     	;# 
   798     0019                     	;# 
   799     001A                     	;# 
   800     001B                     	;# 
   801     001C                     	;# 
   802     001E                     	;# 
   803     001F                     	;# 
   804     008C                     	;# 
   805     008D                     	;# 
   806     008E                     	;# 
   807     0091                     	;# 
   808     0092                     	;# 
   809     0093                     	;# 
   810     0094                     	;# 
   811     0095                     	;# 
   812     0096                     	;# 
   813     0097                     	;# 
   814     0098                     	;# 
   815     0099                     	;# 
   816     009A                     	;# 
   817     009B                     	;# 
   818     009B                     	;# 
   819     009C                     	;# 
   820     009D                     	;# 
   821     009E                     	;# 
   822     010C                     	;# 
   823     010D                     	;# 
   824     010E                     	;# 
   825     0111                     	;# 
   826     0112                     	;# 
   827     0113                     	;# 
   828     0114                     	;# 
   829     0115                     	;# 
   830     0116                     	;# 
   831     0117                     	;# 
   832     0118                     	;# 
   833     0119                     	;# 
   834     011A                     	;# 
   835     011B                     	;# 
   836     011D                     	;# 
   837     011E                     	;# 
   838     018C                     	;# 
   839     018D                     	;# 
   840     018E                     	;# 
   841     0191                     	;# 
   842     0191                     	;# 
   843     0192                     	;# 
   844     0193                     	;# 
   845     0193                     	;# 
   846     0193                     	;# 
   847     0194                     	;# 
   848     0195                     	;# 
   849     0196                     	;# 
   850     0199                     	;# 
   851     019A                     	;# 
   852     019B                     	;# 
   853     019B                     	;# 
   854     019C                     	;# 
   855     019D                     	;# 
   856     019E                     	;# 
   857     019F                     	;# 
   858     020C                     	;# 
   859     020D                     	;# 
   860     020E                     	;# 
   861     0211                     	;# 
   862     0211                     	;# 
   863     0212                     	;# 
   864     0212                     	;# 
   865     0213                     	;# 
   866     0213                     	;# 
   867     0214                     	;# 
   868     0214                     	;# 
   869     0215                     	;# 
   870     0215                     	;# 
   871     0215                     	;# 
   872     0216                     	;# 
   873     0216                     	;# 
   874     0217                     	;# 
   875     0217                     	;# 
   876     0219                     	;# 
   877     021A                     	;# 
   878     021B                     	;# 
   879     021C                     	;# 
   880     021D                     	;# 
   881     021E                     	;# 
   882     021F                     	;# 
   883     0291                     	;# 
   884     0291                     	;# 
   885     0292                     	;# 
   886     0293                     	;# 
   887     0294                     	;# 
   888     0295                     	;# 
   889     0295                     	;# 
   890     0296                     	;# 
   891     0298                     	;# 
   892     0298                     	;# 
   893     0299                     	;# 
   894     029A                     	;# 
   895     029B                     	;# 
   896     029C                     	;# 
   897     029D                     	;# 
   898     029E                     	;# 
   899     0311                     	;# 
   900     0311                     	;# 
   901     0312                     	;# 
   902     0313                     	;# 
   903     0318                     	;# 
   904     0318                     	;# 
   905     0319                     	;# 
   906     031A                     	;# 
   907     038C                     	;# 
   908     038D                     	;# 
   909     038E                     	;# 
   910     0391                     	;# 
   911     0392                     	;# 
   912     0393                     	;# 
   913     0394                     	;# 
   914     0395                     	;# 
   915     0396                     	;# 
   916     039A                     	;# 
   917     039C                     	;# 
   918     039D                     	;# 
   919     039E                     	;# 
   920     039F                     	;# 
   921     0415                     	;# 
   922     0416                     	;# 
   923     0417                     	;# 
   924     041C                     	;# 
   925     041D                     	;# 
   926     041E                     	;# 
   927     0FE4                     	;# 
   928     0FE5                     	;# 
   929     0FE6                     	;# 
   930     0FE7                     	;# 
   931     0FE8                     	;# 
   932     0FE9                     	;# 
   933     0FEA                     	;# 
   934     0FEB                     	;# 
   935     0FED                     	;# 
   936     0FEE                     	;# 
   937     0FEF                     	;# 
   938     0000                     	;# 
   939     0001                     	;# 
   940     0002                     	;# 
   941     0003                     	;# 
   942     0004                     	;# 
   943     0005                     	;# 
   944     0006                     	;# 
   945     0007                     	;# 
   946     0008                     	;# 
   947     0009                     	;# 
   948     000A                     	;# 
   949     000B                     	;# 
   950     000C                     	;# 
   951     000D                     	;# 
   952     000E                     	;# 
   953     0011                     	;# 
   954     0012                     	;# 
   955     0013                     	;# 
   956     0014                     	;# 
   957     0015                     	;# 
   958     0016                     	;# 
   959     0016                     	;# 
   960     0017                     	;# 
   961     0018                     	;# 
   962     0019                     	;# 
   963     001A                     	;# 
   964     001B                     	;# 
   965     001C                     	;# 
   966     001E                     	;# 
   967     001F                     	;# 
   968     008C                     	;# 
   969     008D                     	;# 
   970     008E                     	;# 
   971     0091                     	;# 
   972     0092                     	;# 
   973     0093                     	;# 
   974     0094                     	;# 
   975     0095                     	;# 
   976     0096                     	;# 
   977     0097                     	;# 
   978     0098                     	;# 
   979     0099                     	;# 
   980     009A                     	;# 
   981     009B                     	;# 
   982     009B                     	;# 
   983     009C                     	;# 
   984     009D                     	;# 
   985     009E                     	;# 
   986     010C                     	;# 
   987     010D                     	;# 
   988     010E                     	;# 
   989     0111                     	;# 
   990     0112                     	;# 
   991     0113                     	;# 
   992     0114                     	;# 
   993     0115                     	;# 
   994     0116                     	;# 
   995     0117                     	;# 
   996     0118                     	;# 
   997     0119                     	;# 
   998     011A                     	;# 
   999     011B                     	;# 
  1000     011D                     	;# 
  1001     011E                     	;# 
  1002     018C                     	;# 
  1003     018D                     	;# 
  1004     018E                     	;# 
  1005     0191                     	;# 
  1006     0191                     	;# 
  1007     0192                     	;# 
  1008     0193                     	;# 
  1009     0193                     	;# 
  1010     0193                     	;# 
  1011     0194                     	;# 
  1012     0195                     	;# 
  1013     0196                     	;# 
  1014     0199                     	;# 
  1015     019A                     	;# 
  1016     019B                     	;# 
  1017     019B                     	;# 
  1018     019C                     	;# 
  1019     019D                     	;# 
  1020     019E                     	;# 
  1021     019F                     	;# 
  1022     020C                     	;# 
  1023     020D                     	;# 
  1024     020E                     	;# 
  1025     0211                     	;# 
  1026     0211                     	;# 
  1027     0212                     	;# 
  1028     0212                     	;# 
  1029     0213                     	;# 
  1030     0213                     	;# 
  1031     0214                     	;# 
  1032     0214                     	;# 
  1033     0215                     	;# 
  1034     0215                     	;# 
  1035     0215                     	;# 
  1036     0216                     	;# 
  1037     0216                     	;# 
  1038     0217                     	;# 
  1039     0217                     	;# 
  1040     0219                     	;# 
  1041     021A                     	;# 
  1042     021B                     	;# 
  1043     021C                     	;# 
  1044     021D                     	;# 
  1045     021E                     	;# 
  1046     021F                     	;# 
  1047     0291                     	;# 
  1048     0291                     	;# 
  1049     0292                     	;# 
  1050     0293                     	;# 
  1051     0294                     	;# 
  1052     0295                     	;# 
  1053     0295                     	;# 
  1054     0296                     	;# 
  1055     0298                     	;# 
  1056     0298                     	;# 
  1057     0299                     	;# 
  1058     029A                     	;# 
  1059     029B                     	;# 
  1060     029C                     	;# 
  1061     029D                     	;# 
  1062     029E                     	;# 
  1063     0311                     	;# 
  1064     0311                     	;# 
  1065     0312                     	;# 
  1066     0313                     	;# 
  1067     0318                     	;# 
  1068     0318                     	;# 
  1069     0319                     	;# 
  1070     031A                     	;# 
  1071     038C                     	;# 
  1072     038D                     	;# 
  1073     038E                     	;# 
  1074     0391                     	;# 
  1075     0392                     	;# 
  1076     0393                     	;# 
  1077     0394                     	;# 
  1078     0395                     	;# 
  1079     0396                     	;# 
  1080     039A                     	;# 
  1081     039C                     	;# 
  1082     039D                     	;# 
  1083     039E                     	;# 
  1084     039F                     	;# 
  1085     0415                     	;# 
  1086     0416                     	;# 
  1087     0417                     	;# 
  1088     041C                     	;# 
  1089     041D                     	;# 
  1090     041E                     	;# 
  1091     0FE4                     	;# 
  1092     0FE5                     	;# 
  1093     0FE6                     	;# 
  1094     0FE7                     	;# 
  1095     0FE8                     	;# 
  1096     0FE9                     	;# 
  1097     0FEA                     	;# 
  1098     0FEB                     	;# 
  1099     0FED                     	;# 
  1100     0FEE                     	;# 
  1101     0FEF                     	;# 
  1102     0000                     	;# 
  1103     0001                     	;# 
  1104     0002                     	;# 
  1105     0003                     	;# 
  1106     0004                     	;# 
  1107     0005                     	;# 
  1108     0006                     	;# 
  1109     0007                     	;# 
  1110     0008                     	;# 
  1111     0009                     	;# 
  1112     000A                     	;# 
  1113     000B                     	;# 
  1114     000C                     	;# 
  1115     000D                     	;# 
  1116     000E                     	;# 
  1117     0011                     	;# 
  1118     0012                     	;# 
  1119     0013                     	;# 
  1120     0014                     	;# 
  1121     0015                     	;# 
  1122     0016                     	;# 
  1123     0016                     	;# 
  1124     0017                     	;# 
  1125     0018                     	;# 
  1126     0019                     	;# 
  1127     001A                     	;# 
  1128     001B                     	;# 
  1129     001C                     	;# 
  1130     001E                     	;# 
  1131     001F                     	;# 
  1132     008C                     	;# 
  1133     008D                     	;# 
  1134     008E                     	;# 
  1135     0091                     	;# 
  1136     0092                     	;# 
  1137     0093                     	;# 
  1138     0094                     	;# 
  1139     0095                     	;# 
  1140     0096                     	;# 
  1141     0097                     	;# 
  1142     0098                     	;# 
  1143     0099                     	;# 
  1144     009A                     	;# 
  1145     009B                     	;# 
  1146     009B                     	;# 
  1147     009C                     	;# 
  1148     009D                     	;# 
  1149     009E                     	;# 
  1150     010C                     	;# 
  1151     010D                     	;# 
  1152     010E                     	;# 
  1153     0111                     	;# 
  1154     0112                     	;# 
  1155     0113                     	;# 
  1156     0114                     	;# 
  1157     0115                     	;# 
  1158     0116                     	;# 
  1159     0117                     	;# 
  1160     0118                     	;# 
  1161     0119                     	;# 
  1162     011A                     	;# 
  1163     011B                     	;# 
  1164     011D                     	;# 
  1165     011E                     	;# 
  1166     018C                     	;# 
  1167     018D                     	;# 
  1168     018E                     	;# 
  1169     0191                     	;# 
  1170     0191                     	;# 
  1171     0192                     	;# 
  1172     0193                     	;# 
  1173     0193                     	;# 
  1174     0193                     	;# 
  1175     0194                     	;# 
  1176     0195                     	;# 
  1177     0196                     	;# 
  1178     0199                     	;# 
  1179     019A                     	;# 
  1180     019B                     	;# 
  1181     019B                     	;# 
  1182     019C                     	;# 
  1183     019D                     	;# 
  1184     019E                     	;# 
  1185     019F                     	;# 
  1186     020C                     	;# 
  1187     020D                     	;# 
  1188     020E                     	;# 
  1189     0211                     	;# 
  1190     0211                     	;# 
  1191     0212                     	;# 
  1192     0212                     	;# 
  1193     0213                     	;# 
  1194     0213                     	;# 
  1195     0214                     	;# 
  1196     0214                     	;# 
  1197     0215                     	;# 
  1198     0215                     	;# 
  1199     0215                     	;# 
  1200     0216                     	;# 
  1201     0216                     	;# 
  1202     0217                     	;# 
  1203     0217                     	;# 
  1204     0219                     	;# 
  1205     021A                     	;# 
  1206     021B                     	;# 
  1207     021C                     	;# 
  1208     021D                     	;# 
  1209     021E                     	;# 
  1210     021F                     	;# 
  1211     0291                     	;# 
  1212     0291                     	;# 
  1213     0292                     	;# 
  1214     0293                     	;# 
  1215     0294                     	;# 
  1216     0295                     	;# 
  1217     0295                     	;# 
  1218     0296                     	;# 
  1219     0298                     	;# 
  1220     0298                     	;# 
  1221     0299                     	;# 
  1222     029A                     	;# 
  1223     029B                     	;# 
  1224     029C                     	;# 
  1225     029D                     	;# 
  1226     029E                     	;# 
  1227     0311                     	;# 
  1228     0311                     	;# 
  1229     0312                     	;# 
  1230     0313                     	;# 
  1231     0318                     	;# 
  1232     0318                     	;# 
  1233     0319                     	;# 
  1234     031A                     	;# 
  1235     038C                     	;# 
  1236     038D                     	;# 
  1237     038E                     	;# 
  1238     0391                     	;# 
  1239     0392                     	;# 
  1240     0393                     	;# 
  1241     0394                     	;# 
  1242     0395                     	;# 
  1243     0396                     	;# 
  1244     039A                     	;# 
  1245     039C                     	;# 
  1246     039D                     	;# 
  1247     039E                     	;# 
  1248     039F                     	;# 
  1249     0415                     	;# 
  1250     0416                     	;# 
  1251     0417                     	;# 
  1252     041C                     	;# 
  1253     041D                     	;# 
  1254     041E                     	;# 
  1255     0FE4                     	;# 
  1256     0FE5                     	;# 
  1257     0FE6                     	;# 
  1258     0FE7                     	;# 
  1259     0FE8                     	;# 
  1260     0FE9                     	;# 
  1261     0FEA                     	;# 
  1262     0FEB                     	;# 
  1263     0FED                     	;# 
  1264     0FEE                     	;# 
  1265     0FEF                     	;# 
  1266     0000                     	;# 
  1267     0001                     	;# 
  1268     0002                     	;# 
  1269     0003                     	;# 
  1270     0004                     	;# 
  1271     0005                     	;# 
  1272     0006                     	;# 
  1273     0007                     	;# 
  1274     0008                     	;# 
  1275     0009                     	;# 
  1276     000A                     	;# 
  1277     000B                     	;# 
  1278     000C                     	;# 
  1279     000D                     	;# 
  1280     000E                     	;# 
  1281     0011                     	;# 
  1282     0012                     	;# 
  1283     0013                     	;# 
  1284     0014                     	;# 
  1285     0015                     	;# 
  1286     0016                     	;# 
  1287     0016                     	;# 
  1288     0017                     	;# 
  1289     0018                     	;# 
  1290     0019                     	;# 
  1291     001A                     	;# 
  1292     001B                     	;# 
  1293     001C                     	;# 
  1294     001E                     	;# 
  1295     001F                     	;# 
  1296     008C                     	;# 
  1297     008D                     	;# 
  1298     008E                     	;# 
  1299     0091                     	;# 
  1300     0092                     	;# 
  1301     0093                     	;# 
  1302     0094                     	;# 
  1303     0095                     	;# 
  1304     0096                     	;# 
  1305     0097                     	;# 
  1306     0098                     	;# 
  1307     0099                     	;# 
  1308     009A                     	;# 
  1309     009B                     	;# 
  1310     009B                     	;# 
  1311     009C                     	;# 
  1312     009D                     	;# 
  1313     009E                     	;# 
  1314     010C                     	;# 
  1315     010D                     	;# 
  1316     010E                     	;# 
  1317     0111                     	;# 
  1318     0112                     	;# 
  1319     0113                     	;# 
  1320     0114                     	;# 
  1321     0115                     	;# 
  1322     0116                     	;# 
  1323     0117                     	;# 
  1324     0118                     	;# 
  1325     0119                     	;# 
  1326     011A                     	;# 
  1327     011B                     	;# 
  1328     011D                     	;# 
  1329     011E                     	;# 
  1330     018C                     	;# 
  1331     018D                     	;# 
  1332     018E                     	;# 
  1333     0191                     	;# 
  1334     0191                     	;# 
  1335     0192                     	;# 
  1336     0193                     	;# 
  1337     0193                     	;# 
  1338     0193                     	;# 
  1339     0194                     	;# 
  1340     0195                     	;# 
  1341     0196                     	;# 
  1342     0199                     	;# 
  1343     019A                     	;# 
  1344     019B                     	;# 
  1345     019B                     	;# 
  1346     019C                     	;# 
  1347     019D                     	;# 
  1348     019E                     	;# 
  1349     019F                     	;# 
  1350     020C                     	;# 
  1351     020D                     	;# 
  1352     020E                     	;# 
  1353     0211                     	;# 
  1354     0211                     	;# 
  1355     0212                     	;# 
  1356     0212                     	;# 
  1357     0213                     	;# 
  1358     0213                     	;# 
  1359     0214                     	;# 
  1360     0214                     	;# 
  1361     0215                     	;# 
  1362     0215                     	;# 
  1363     0215                     	;# 
  1364     0216                     	;# 
  1365     0216                     	;# 
  1366     0217                     	;# 
  1367     0217                     	;# 
  1368     0219                     	;# 
  1369     021A                     	;# 
  1370     021B                     	;# 
  1371     021C                     	;# 
  1372     021D                     	;# 
  1373     021E                     	;# 
  1374     021F                     	;# 
  1375     0291                     	;# 
  1376     0291                     	;# 
  1377     0292                     	;# 
  1378     0293                     	;# 
  1379     0294                     	;# 
  1380     0295                     	;# 
  1381     0295                     	;# 
  1382     0296                     	;# 
  1383     0298                     	;# 
  1384     0298                     	;# 
  1385     0299                     	;# 
  1386     029A                     	;# 
  1387     029B                     	;# 
  1388     029C                     	;# 
  1389     029D                     	;# 
  1390     029E                     	;# 
  1391     0311                     	;# 
  1392     0311                     	;# 
  1393     0312                     	;# 
  1394     0313                     	;# 
  1395     0318                     	;# 
  1396     0318                     	;# 
  1397     0319                     	;# 
  1398     031A                     	;# 
  1399     038C                     	;# 
  1400     038D                     	;# 
  1401     038E                     	;# 
  1402     0391                     	;# 
  1403     0392                     	;# 
  1404     0393                     	;# 
  1405     0394                     	;# 
  1406     0395                     	;# 
  1407     0396                     	;# 
  1408     039A                     	;# 
  1409     039C                     	;# 
  1410     039D                     	;# 
  1411     039E                     	;# 
  1412     039F                     	;# 
  1413     0415                     	;# 
  1414     0416                     	;# 
  1415     0417                     	;# 
  1416     041C                     	;# 
  1417     041D                     	;# 
  1418     041E                     	;# 
  1419     0FE4                     	;# 
  1420     0FE5                     	;# 
  1421     0FE6                     	;# 
  1422     0FE7                     	;# 
  1423     0FE8                     	;# 
  1424     0FE9                     	;# 
  1425     0FEA                     	;# 
  1426     0FEB                     	;# 
  1427     0FED                     	;# 
  1428     0FEE                     	;# 
  1429     0FEF                     	;# 
  1430     0000                     	;# 
  1431     0001                     	;# 
  1432     0002                     	;# 
  1433     0003                     	;# 
  1434     0004                     	;# 
  1435     0005                     	;# 
  1436     0006                     	;# 
  1437     0007                     	;# 
  1438     0008                     	;# 
  1439     0009                     	;# 
  1440     000A                     	;# 
  1441     000B                     	;# 
  1442     000C                     	;# 
  1443     000D                     	;# 
  1444     000E                     	;# 
  1445     0011                     	;# 
  1446     0012                     	;# 
  1447     0013                     	;# 
  1448     0014                     	;# 
  1449     0015                     	;# 
  1450     0016                     	;# 
  1451     0016                     	;# 
  1452     0017                     	;# 
  1453     0018                     	;# 
  1454     0019                     	;# 
  1455     001A                     	;# 
  1456     001B                     	;# 
  1457     001C                     	;# 
  1458     001E                     	;# 
  1459     001F                     	;# 
  1460     008C                     	;# 
  1461     008D                     	;# 
  1462     008E                     	;# 
  1463     0091                     	;# 
  1464     0092                     	;# 
  1465     0093                     	;# 
  1466     0094                     	;# 
  1467     0095                     	;# 
  1468     0096                     	;# 
  1469     0097                     	;# 
  1470     0098                     	;# 
  1471     0099                     	;# 
  1472     009A                     	;# 
  1473     009B                     	;# 
  1474     009B                     	;# 
  1475     009C                     	;# 
  1476     009D                     	;# 
  1477     009E                     	;# 
  1478     010C                     	;# 
  1479     010D                     	;# 
  1480     010E                     	;# 
  1481     0111                     	;# 
  1482     0112                     	;# 
  1483     0113                     	;# 
  1484     0114                     	;# 
  1485     0115                     	;# 
  1486     0116                     	;# 
  1487     0117                     	;# 
  1488     0118                     	;# 
  1489     0119                     	;# 
  1490     011A                     	;# 
  1491     011B                     	;# 
  1492     011D                     	;# 
  1493     011E                     	;# 
  1494     018C                     	;# 
  1495     018D                     	;# 
  1496     018E                     	;# 
  1497     0191                     	;# 
  1498     0191                     	;# 
  1499     0192                     	;# 
  1500     0193                     	;# 
  1501     0193                     	;# 
  1502     0193                     	;# 
  1503     0194                     	;# 
  1504     0195                     	;# 
  1505     0196                     	;# 
  1506     0199                     	;# 
  1507     019A                     	;# 
  1508     019B                     	;# 
  1509     019B                     	;# 
  1510     019C                     	;# 
  1511     019D                     	;# 
  1512     019E                     	;# 
  1513     019F                     	;# 
  1514     020C                     	;# 
  1515     020D                     	;# 
  1516     020E                     	;# 
  1517     0211                     	;# 
  1518     0211                     	;# 
  1519     0212                     	;# 
  1520     0212                     	;# 
  1521     0213                     	;# 
  1522     0213                     	;# 
  1523     0214                     	;# 
  1524     0214                     	;# 
  1525     0215                     	;# 
  1526     0215                     	;# 
  1527     0215                     	;# 
  1528     0216                     	;# 
  1529     0216                     	;# 
  1530     0217                     	;# 
  1531     0217                     	;# 
  1532     0219                     	;# 
  1533     021A                     	;# 
  1534     021B                     	;# 
  1535     021C                     	;# 
  1536     021D                     	;# 
  1537     021E                     	;# 
  1538     021F                     	;# 
  1539     0291                     	;# 
  1540     0291                     	;# 
  1541     0292                     	;# 
  1542     0293                     	;# 
  1543     0294                     	;# 
  1544     0295                     	;# 
  1545     0295                     	;# 
  1546     0296                     	;# 
  1547     0298                     	;# 
  1548     0298                     	;# 
  1549     0299                     	;# 
  1550     029A                     	;# 
  1551     029B                     	;# 
  1552     029C                     	;# 
  1553     029D                     	;# 
  1554     029E                     	;# 
  1555     0311                     	;# 
  1556     0311                     	;# 
  1557     0312                     	;# 
  1558     0313                     	;# 
  1559     0318                     	;# 
  1560     0318                     	;# 
  1561     0319                     	;# 
  1562     031A                     	;# 
  1563     038C                     	;# 
  1564     038D                     	;# 
  1565     038E                     	;# 
  1566     0391                     	;# 
  1567     0392                     	;# 
  1568     0393                     	;# 
  1569     0394                     	;# 
  1570     0395                     	;# 
  1571     0396                     	;# 
  1572     039A                     	;# 
  1573     039C                     	;# 
  1574     039D                     	;# 
  1575     039E                     	;# 
  1576     039F                     	;# 
  1577     0415                     	;# 
  1578     0416                     	;# 
  1579     0417                     	;# 
  1580     041C                     	;# 
  1581     041D                     	;# 
  1582     041E                     	;# 
  1583     0FE4                     	;# 
  1584     0FE5                     	;# 
  1585     0FE6                     	;# 
  1586     0FE7                     	;# 
  1587     0FE8                     	;# 
  1588     0FE9                     	;# 
  1589     0FEA                     	;# 
  1590     0FEB                     	;# 
  1591     0FED                     	;# 
  1592     0FEE                     	;# 
  1593     0FEF                     	;# 
  1594     0000                     	;# 
  1595     0001                     	;# 
  1596     0002                     	;# 
  1597     0003                     	;# 
  1598     0004                     	;# 
  1599     0005                     	;# 
  1600     0006                     	;# 
  1601     0007                     	;# 
  1602     0008                     	;# 
  1603     0009                     	;# 
  1604     000A                     	;# 
  1605     000B                     	;# 
  1606     000C                     	;# 
  1607     000D                     	;# 
  1608     000E                     	;# 
  1609     0011                     	;# 
  1610     0012                     	;# 
  1611     0013                     	;# 
  1612     0014                     	;# 
  1613     0015                     	;# 
  1614     0016                     	;# 
  1615     0016                     	;# 
  1616     0017                     	;# 
  1617     0018                     	;# 
  1618     0019                     	;# 
  1619     001A                     	;# 
  1620     001B                     	;# 
  1621     001C                     	;# 
  1622     001E                     	;# 
  1623     001F                     	;# 
  1624     008C                     	;# 
  1625     008D                     	;# 
  1626     008E                     	;# 
  1627     0091                     	;# 
  1628     0092                     	;# 
  1629     0093                     	;# 
  1630     0094                     	;# 
  1631     0095                     	;# 
  1632     0096                     	;# 
  1633     0097                     	;# 
  1634     0098                     	;# 
  1635     0099                     	;# 
  1636     009A                     	;# 
  1637     009B                     	;# 
  1638     009B                     	;# 
  1639     009C                     	;# 
  1640     009D                     	;# 
  1641     009E                     	;# 
  1642     010C                     	;# 
  1643     010D                     	;# 
  1644     010E                     	;# 
  1645     0111                     	;# 
  1646     0112                     	;# 
  1647     0113                     	;# 
  1648     0114                     	;# 
  1649     0115                     	;# 
  1650     0116                     	;# 
  1651     0117                     	;# 
  1652     0118                     	;# 
  1653     0119                     	;# 
  1654     011A                     	;# 
  1655     011B                     	;# 
  1656     011D                     	;# 
  1657     011E                     	;# 
  1658     018C                     	;# 
  1659     018D                     	;# 
  1660     018E                     	;# 
  1661     0191                     	;# 
  1662     0191                     	;# 
  1663     0192                     	;# 
  1664     0193                     	;# 
  1665     0193                     	;# 
  1666     0193                     	;# 
  1667     0194                     	;# 
  1668     0195                     	;# 
  1669     0196                     	;# 
  1670     0199                     	;# 
  1671     019A                     	;# 
  1672     019B                     	;# 
  1673     019B                     	;# 
  1674     019C                     	;# 
  1675     019D                     	;# 
  1676     019E                     	;# 
  1677     019F                     	;# 
  1678     020C                     	;# 
  1679     020D                     	;# 
  1680     020E                     	;# 
  1681     0211                     	;# 
  1682     0211                     	;# 
  1683     0212                     	;# 
  1684     0212                     	;# 
  1685     0213                     	;# 
  1686     0213                     	;# 
  1687     0214                     	;# 
  1688     0214                     	;# 
  1689     0215                     	;# 
  1690     0215                     	;# 
  1691     0215                     	;# 
  1692     0216                     	;# 
  1693     0216                     	;# 
  1694     0217                     	;# 
  1695     0217                     	;# 
  1696     0219                     	;# 
  1697     021A                     	;# 
  1698     021B                     	;# 
  1699     021C                     	;# 
  1700     021D                     	;# 
  1701     021E                     	;# 
  1702     021F                     	;# 
  1703     0291                     	;# 
  1704     0291                     	;# 
  1705     0292                     	;# 
  1706     0293                     	;# 
  1707     0294                     	;# 
  1708     0295                     	;# 
  1709     0295                     	;# 
  1710     0296                     	;# 
  1711     0298                     	;# 
  1712     0298                     	;# 
  1713     0299                     	;# 
  1714     029A                     	;# 
  1715     029B                     	;# 
  1716     029C                     	;# 
  1717     029D                     	;# 
  1718     029E                     	;# 
  1719     0311                     	;# 
  1720     0311                     	;# 
  1721     0312                     	;# 
  1722     0313                     	;# 
  1723     0318                     	;# 
  1724     0318                     	;# 
  1725     0319                     	;# 
  1726     031A                     	;# 
  1727     038C                     	;# 
  1728     038D                     	;# 
  1729     038E                     	;# 
  1730     0391                     	;# 
  1731     0392                     	;# 
  1732     0393                     	;# 
  1733     0394                     	;# 
  1734     0395                     	;# 
  1735     0396                     	;# 
  1736     039A                     	;# 
  1737     039C                     	;# 
  1738     039D                     	;# 
  1739     039E                     	;# 
  1740     039F                     	;# 
  1741     0415                     	;# 
  1742     0416                     	;# 
  1743     0417                     	;# 
  1744     041C                     	;# 
  1745     041D                     	;# 
  1746     041E                     	;# 
  1747     0FE4                     	;# 
  1748     0FE5                     	;# 
  1749     0FE6                     	;# 
  1750     0FE7                     	;# 
  1751     0FE8                     	;# 
  1752     0FE9                     	;# 
  1753     0FEA                     	;# 
  1754     0FEB                     	;# 
  1755     0FED                     	;# 
  1756     0FEE                     	;# 
  1757     0FEF                     	;# 
  1758     0000                     	;# 
  1759     0001                     	;# 
  1760     0002                     	;# 
  1761     0003                     	;# 
  1762     0004                     	;# 
  1763     0005                     	;# 
  1764     0006                     	;# 
  1765     0007                     	;# 
  1766     0008                     	;# 
  1767     0009                     	;# 
  1768     000A                     	;# 
  1769     000B                     	;# 
  1770     000C                     	;# 
  1771     000D                     	;# 
  1772     000E                     	;# 
  1773     0011                     	;# 
  1774     0012                     	;# 
  1775     0013                     	;# 
  1776     0014                     	;# 
  1777     0015                     	;# 
  1778     0016                     	;# 
  1779     0016                     	;# 
  1780     0017                     	;# 
  1781     0018                     	;# 
  1782     0019                     	;# 
  1783     001A                     	;# 
  1784     001B                     	;# 
  1785     001C                     	;# 
  1786     001E                     	;# 
  1787     001F                     	;# 
  1788     008C                     	;# 
  1789     008D                     	;# 
  1790     008E                     	;# 
  1791     0091                     	;# 
  1792     0092                     	;# 
  1793     0093                     	;# 
  1794     0094                     	;# 
  1795     0095                     	;# 
  1796     0096                     	;# 
  1797     0097                     	;# 
  1798     0098                     	;# 
  1799     0099                     	;# 
  1800     009A                     	;# 
  1801     009B                     	;# 
  1802     009B                     	;# 
  1803     009C                     	;# 
  1804     009D                     	;# 
  1805     009E                     	;# 
  1806     010C                     	;# 
  1807     010D                     	;# 
  1808     010E                     	;# 
  1809     0111                     	;# 
  1810     0112                     	;# 
  1811     0113                     	;# 
  1812     0114                     	;# 
  1813     0115                     	;# 
  1814     0116                     	;# 
  1815     0117                     	;# 
  1816     0118                     	;# 
  1817     0119                     	;# 
  1818     011A                     	;# 
  1819     011B                     	;# 
  1820     011D                     	;# 
  1821     011E                     	;# 
  1822     018C                     	;# 
  1823     018D                     	;# 
  1824     018E                     	;# 
  1825     0191                     	;# 
  1826     0191                     	;# 
  1827     0192                     	;# 
  1828     0193                     	;# 
  1829     0193                     	;# 
  1830     0193                     	;# 
  1831     0194                     	;# 
  1832     0195                     	;# 
  1833     0196                     	;# 
  1834     0199                     	;# 
  1835     019A                     	;# 
  1836     019B                     	;# 
  1837     019B                     	;# 
  1838     019C                     	;# 
  1839     019D                     	;# 
  1840     019E                     	;# 
  1841     019F                     	;# 
  1842     020C                     	;# 
  1843     020D                     	;# 
  1844     020E                     	;# 
  1845     0211                     	;# 
  1846     0211                     	;# 
  1847     0212                     	;# 
  1848     0212                     	;# 
  1849     0213                     	;# 
  1850     0213                     	;# 
  1851     0214                     	;# 
  1852     0214                     	;# 
  1853     0215                     	;# 
  1854     0215                     	;# 
  1855     0215                     	;# 
  1856     0216                     	;# 
  1857     0216                     	;# 
  1858     0217                     	;# 
  1859     0217                     	;# 
  1860     0219                     	;# 
  1861     021A                     	;# 
  1862     021B                     	;# 
  1863     021C                     	;# 
  1864     021D                     	;# 
  1865     021E                     	;# 
  1866     021F                     	;# 
  1867     0291                     	;# 
  1868     0291                     	;# 
  1869     0292                     	;# 
  1870     0293                     	;# 
  1871     0294                     	;# 
  1872     0295                     	;# 
  1873     0295                     	;# 
  1874     0296                     	;# 
  1875     0298                     	;# 
  1876     0298                     	;# 
  1877     0299                     	;# 
  1878     029A                     	;# 
  1879     029B                     	;# 
  1880     029C                     	;# 
  1881     029D                     	;# 
  1882     029E                     	;# 
  1883     0311                     	;# 
  1884     0311                     	;# 
  1885     0312                     	;# 
  1886     0313                     	;# 
  1887     0318                     	;# 
  1888     0318                     	;# 
  1889     0319                     	;# 
  1890     031A                     	;# 
  1891     038C                     	;# 
  1892     038D                     	;# 
  1893     038E                     	;# 
  1894     0391                     	;# 
  1895     0392                     	;# 
  1896     0393                     	;# 
  1897     0394                     	;# 
  1898     0395                     	;# 
  1899     0396                     	;# 
  1900     039A                     	;# 
  1901     039C                     	;# 
  1902     039D                     	;# 
  1903     039E                     	;# 
  1904     039F                     	;# 
  1905     0415                     	;# 
  1906     0416                     	;# 
  1907     0417                     	;# 
  1908     041C                     	;# 
  1909     041D                     	;# 
  1910     041E                     	;# 
  1911     0FE4                     	;# 
  1912     0FE5                     	;# 
  1913     0FE6                     	;# 
  1914     0FE7                     	;# 
  1915     0FE8                     	;# 
  1916     0FE9                     	;# 
  1917     0FEA                     	;# 
  1918     0FEB                     	;# 
  1919     0FED                     	;# 
  1920     0FEE                     	;# 
  1921     0FEF                     	;# 
  1922     0000                     	;# 
  1923     0001                     	;# 
  1924     0002                     	;# 
  1925     0003                     	;# 
  1926     0004                     	;# 
  1927     0005                     	;# 
  1928     0006                     	;# 
  1929     0007                     	;# 
  1930     0008                     	;# 
  1931     0009                     	;# 
  1932     000A                     	;# 
  1933     000B                     	;# 
  1934     000C                     	;# 
  1935     000D                     	;# 
  1936     000E                     	;# 
  1937     0011                     	;# 
  1938     0012                     	;# 
  1939     0013                     	;# 
  1940     0014                     	;# 
  1941     0015                     	;# 
  1942     0016                     	;# 
  1943     0016                     	;# 
  1944     0017                     	;# 
  1945     0018                     	;# 
  1946     0019                     	;# 
  1947     001A                     	;# 
  1948     001B                     	;# 
  1949     001C                     	;# 
  1950     001E                     	;# 
  1951     001F                     	;# 
  1952     008C                     	;# 
  1953     008D                     	;# 
  1954     008E                     	;# 
  1955     0091                     	;# 
  1956     0092                     	;# 
  1957     0093                     	;# 
  1958     0094                     	;# 
  1959     0095                     	;# 
  1960     0096                     	;# 
  1961     0097                     	;# 
  1962     0098                     	;# 
  1963     0099                     	;# 
  1964     009A                     	;# 
  1965     009B                     	;# 
  1966     009B                     	;# 
  1967     009C                     	;# 
  1968     009D                     	;# 
  1969     009E                     	;# 
  1970     010C                     	;# 
  1971     010D                     	;# 
  1972     010E                     	;# 
  1973     0111                     	;# 
  1974     0112                     	;# 
  1975     0113                     	;# 
  1976     0114                     	;# 
  1977     0115                     	;# 
  1978     0116                     	;# 
  1979     0117                     	;# 
  1980     0118                     	;# 
  1981     0119                     	;# 
  1982     011A                     	;# 
  1983     011B                     	;# 
  1984     011D                     	;# 
  1985     011E                     	;# 
  1986     018C                     	;# 
  1987     018D                     	;# 
  1988     018E                     	;# 
  1989     0191                     	;# 
  1990     0191                     	;# 
  1991     0192                     	;# 
  1992     0193                     	;# 
  1993     0193                     	;# 
  1994     0193                     	;# 
  1995     0194                     	;# 
  1996     0195                     	;# 
  1997     0196                     	;# 
  1998     0199                     	;# 
  1999     019A                     	;# 
  2000     019B                     	;# 
  2001     019B                     	;# 
  2002     019C                     	;# 
  2003     019D                     	;# 
  2004     019E                     	;# 
  2005     019F                     	;# 
  2006     020C                     	;# 
  2007     020D                     	;# 
  2008     020E                     	;# 
  2009     0211                     	;# 
  2010     0211                     	;# 
  2011     0212                     	;# 
  2012     0212                     	;# 
  2013     0213                     	;# 
  2014     0213                     	;# 
  2015     0214                     	;# 
  2016     0214                     	;# 
  2017     0215                     	;# 
  2018     0215                     	;# 
  2019     0215                     	;# 
  2020     0216                     	;# 
  2021     0216                     	;# 
  2022     0217                     	;# 
  2023     0217                     	;# 
  2024     0219                     	;# 
  2025     021A                     	;# 
  2026     021B                     	;# 
  2027     021C                     	;# 
  2028     021D                     	;# 
  2029     021E                     	;# 
  2030     021F                     	;# 
  2031     0291                     	;# 
  2032     0291                     	;# 
  2033     0292                     	;# 
  2034     0293                     	;# 
  2035     0294                     	;# 
  2036     0295                     	;# 
  2037     0295                     	;# 
  2038     0296                     	;# 
  2039     0298                     	;# 
  2040     0298                     	;# 
  2041     0299                     	;# 
  2042     029A                     	;# 
  2043     029B                     	;# 
  2044     029C                     	;# 
  2045     029D                     	;# 
  2046     029E                     	;# 
  2047     0311                     	;# 
  2048     0311                     	;# 
  2049     0312                     	;# 
  2050     0313                     	;# 
  2051     0318                     	;# 
  2052     0318                     	;# 
  2053     0319                     	;# 
  2054     031A                     	;# 
  2055     038C                     	;# 
  2056     038D                     	;# 
  2057     038E                     	;# 
  2058     0391                     	;# 
  2059     0392                     	;# 
  2060     0393                     	;# 
  2061     0394                     	;# 
  2062     0395                     	;# 
  2063     0396                     	;# 
  2064     039A                     	;# 
  2065     039C                     	;# 
  2066     039D                     	;# 
  2067     039E                     	;# 
  2068     039F                     	;# 
  2069     0415                     	;# 
  2070     0416                     	;# 
  2071     0417                     	;# 
  2072     041C                     	;# 
  2073     041D                     	;# 
  2074     041E                     	;# 
  2075     0FE4                     	;# 
  2076     0FE5                     	;# 
  2077     0FE6                     	;# 
  2078     0FE7                     	;# 
  2079     0FE8                     	;# 
  2080     0FE9                     	;# 
  2081     0FEA                     	;# 
  2082     0FEB                     	;# 
  2083     0FED                     	;# 
  2084     0FEE                     	;# 
  2085     0FEF                     	;# 
  2086                           
  2087                           	psect	idataCOMMON
  2088     0002                     __pidataCOMMON:
  2089                           
  2090                           ;initializer for __timeAuto
  2091     0002  34E8               	retlw	232
  2092     0003  3403               	retlw	3
  2093                           
  2094                           	psect	idataBANK0
  2095     0C30                     __pidataBANK0:
  2096                           
  2097                           ;initializer for _timer1_MUL
  2098     0C30  3401               	retlw	1
  2099     0C31  3400               	retlw	0
  2100                           
  2101                           	psect	idataBANK1
  2102     0E78                     __pidataBANK1:
  2103                           
  2104                           ;initializer for _LcdScreen
  2105     0E78  3430               	retlw	48
  2106     0E79  3431               	retlw	49
  2107     0E7A  3432               	retlw	50
  2108     0E7B  3433               	retlw	51
  2109     0E7C  3434               	retlw	52
  2110     0E7D  3435               	retlw	53
  2111     0E7E  3436               	retlw	54
  2112     0E7F  3437               	retlw	55
  2113     0E80  3438               	retlw	56
  2114     0E81  3439               	retlw	57
  2115     0E82  3430               	retlw	48
  2116     0E83  3431               	retlw	49
  2117     0E84  3432               	retlw	50
  2118     0E85  3433               	retlw	51
  2119     0E86  3434               	retlw	52
  2120     0E87  3435               	retlw	53
  2121     0E88  3436               	retlw	54
  2122     0E89  3437               	retlw	55
  2123     0E8A  3438               	retlw	56
  2124     0E8B  3439               	retlw	57
  2125     0E8C  3430               	retlw	48
  2126     0E8D  3431               	retlw	49
  2127     0E8E  3432               	retlw	50
  2128     0E8F  3433               	retlw	51
  2129     0E90  3434               	retlw	52
  2130     0E91  3435               	retlw	53
  2131     0E92  3436               	retlw	54
  2132     0E93  3437               	retlw	55
  2133     0E94  3438               	retlw	56
  2134     0E95  3439               	retlw	57
  2135     0E96  3430               	retlw	48
  2136     0E97  3431               	retlw	49
  2137                           
  2138                           ;initializer for _buttonBuffer
  2139     0E98  3401               	retlw	1
  2140     0E99  3401               	retlw	1
  2141     0E9A  3401               	retlw	1
  2142     0E9B  3401               	retlw	1
  2143                           
  2144                           ;initializer for _buttonInputMask
  2145     0E9C  3401               	retlw	1
  2146     0E9D  3402               	retlw	2
  2147     0E9E  3404               	retlw	4
  2148     0E9F  3408               	retlw	8
  2149                           
  2150                           	psect	nvBANK0
  2151     006B                     __pnvBANK0:
  2152     006B                     _timer1_value:
  2153     006B                     	ds	2
  2154     0016                     _TMR1	set	22
  2155     0003                     _STATUSbits	set	3
  2156     000B                     _INTCONbits	set	11
  2157     000E                     _PORTC	set	14
  2158     000C                     _PORTAbits	set	12
  2159     0018                     _T1CONbits	set	24
  2160     000C                     _PORTA	set	12
  2161     0088                     _TMR1IF	set	136
  2162     008E                     _TRISC	set	142
  2163     0099                     _OSCCONbits	set	153
  2164     008C                     _TRISA	set	140
  2165     0488                     _TMR1IE	set	1160
  2166     0191                     _EEADR	set	401
  2167     0196                     _EECON2	set	406
  2168     0193                     _EEDATA	set	403
  2169     0195                     _EECON1	set	405
  2170     0195                     _EECON1bits	set	405
  2171     0C62                     _ANSA2	set	3170
  2172     0C61                     _ANSA1	set	3169
  2173     0C60                     _ANSA0	set	3168
  2174                           
  2175                           	psect	stringtext1
  2176     1000                     __pstringtext1:
  2177     1000                     STR_4:
  2178     1000  3443               	retlw	67	;'C'
  2179     1001  3455               	retlw	85	;'U'
  2180     1002  3450               	retlw	80	;'P'
  2181     1003  3420               	retlw	32	;' '
  2182     1004  3420               	retlw	32	;' '
  2183     1005  343A               	retlw	58	;':'
  2184     1006  3420               	retlw	32	;' '
  2185     1007  3420               	retlw	32	;' '
  2186     1008  3420               	retlw	32	;' '
  2187     1009  3420               	retlw	32	;' '
  2188     100A  3420               	retlw	32	;' '
  2189     100B  3420               	retlw	32	;' '
  2190     100C  3420               	retlw	32	;' '
  2191     100D  3420               	retlw	32	;' '
  2192     100E  3420               	retlw	32	;' '
  2193     100F  3420               	retlw	32	;' '
  2194     1010  3400               	retlw	0
  2195                           
  2196                           	psect	stringtext2
  2197     1011                     __pstringtext2:
  2198     1011                     STR_6:
  2199     1011  3420               	retlw	32	;' '
  2200     1012  3420               	retlw	32	;' '
  2201     1013  3420               	retlw	32	;' '
  2202     1014  3420               	retlw	32	;' '
  2203     1015  3420               	retlw	32	;' '
  2204     1016  345B               	retlw	91	;'['
  2205     1017  3453               	retlw	83	;'S'
  2206     1018  3454               	retlw	84	;'T'
  2207     1019  344F               	retlw	79	;'O'
  2208     101A  3450               	retlw	80	;'P'
  2209     101B  345D               	retlw	93	;']'
  2210     101C  3420               	retlw	32	;' '
  2211     101D  3420               	retlw	32	;' '
  2212     101E  3420               	retlw	32	;' '
  2213     101F  3420               	retlw	32	;' '
  2214     1020  3420               	retlw	32	;' '
  2215     1021  3400               	retlw	0
  2216                           
  2217                           	psect	stringtext3
  2218     1022                     __pstringtext3:
  2219     1022                     STR_11:
  2220     1022  3420               	retlw	32	;' '
  2221     1023  3444               	retlw	68	;'D'
  2222     1024  3465               	retlw	101	;'e'
  2223     1025  346C               	retlw	108	;'l'
  2224     1026  3465               	retlw	101	;'e'
  2225     1027  3474               	retlw	116	;'t'
  2226     1028  3465               	retlw	101	;'e'
  2227     1029  3420               	retlw	32	;' '
  2228     102A  3441               	retlw	65	;'A'
  2229     102B  346C               	retlw	108	;'l'
  2230     102C  346C               	retlw	108	;'l'
  2231     102D  3420               	retlw	32	;' '
  2232     102E  343F               	retlw	63	;'?'
  2233     102F  3420               	retlw	32	;' '
  2234     1030  3420               	retlw	32	;' '
  2235     1031  3420               	retlw	32	;' '
  2236     1032  3400               	retlw	0
  2237                           
  2238                           	psect	stringtext4
  2239     1033                     __pstringtext4:
  2240     1033                     STR_2:
  2241     1033  3420               	retlw	32	;' '
  2242     1034  3420               	retlw	32	;' '
  2243     1035  3420               	retlw	32	;' '
  2244     1036  3420               	retlw	32	;' '
  2245     1037  345F               	retlw	95	;'_'
  2246     1038  3420               	retlw	32	;' '
  2247     1039  344D               	retlw	77	;'M'
  2248     103A  3441               	retlw	65	;'A'
  2249     103B  344E               	retlw	78	;'N'
  2250     103C  3455               	retlw	85	;'U'
  2251     103D  3441               	retlw	65	;'A'
  2252     103E  344C               	retlw	76	;'L'
  2253     103F  3420               	retlw	32	;' '
  2254     1040  345F               	retlw	95	;'_'
  2255     1041  3420               	retlw	32	;' '
  2256     1042  3420               	retlw	32	;' '
  2257     1043  3400               	retlw	0
  2258                           
  2259                           	psect	stringtext5
  2260     1044                     __pstringtext5:
  2261     1044                     STR_5:
  2262     1044  3420               	retlw	32	;' '
  2263     1045  347C               	retlw	124	;'|'
  2264     1046  3420               	retlw	32	;' '
  2265     1047  3420               	retlw	32	;' '
  2266     1048  3420               	retlw	32	;' '
  2267     1049  3420               	retlw	32	;' '
  2268     104A  3420               	retlw	32	;' '
  2269     104B  3420               	retlw	32	;' '
  2270     104C  3420               	retlw	32	;' '
  2271     104D  3420               	retlw	32	;' '
  2272     104E  3420               	retlw	32	;' '
  2273     104F  3420               	retlw	32	;' '
  2274     1050  3420               	retlw	32	;' '
  2275     1051  3420               	retlw	32	;' '
  2276     1052  347C               	retlw	124	;'|'
  2277     1053  3420               	retlw	32	;' '
  2278     1054  3400               	retlw	0
  2279                           
  2280                           	psect	stringtext6
  2281     1055                     __pstringtext6:
  2282     1055                     STR_10:
  2283     1055  345B               	retlw	91	;'['
  2284     1056  342B               	retlw	43	;'+'
  2285     1057  345D               	retlw	93	;']'
  2286     1058  3420               	retlw	32	;' '
  2287     1059  3420               	retlw	32	;' '
  2288     105A  3420               	retlw	32	;' '
  2289     105B  345B               	retlw	91	;'['
  2290     105C  344F               	retlw	79	;'O'
  2291     105D  344B               	retlw	75	;'K'
  2292     105E  345D               	retlw	93	;']'
  2293     105F  3420               	retlw	32	;' '
  2294     1060  3420               	retlw	32	;' '
  2295     1061  3420               	retlw	32	;' '
  2296     1062  345B               	retlw	91	;'['
  2297     1063  342D               	retlw	45	;'-'
  2298     1064  345D               	retlw	93	;']'
  2299     1065  3400               	retlw	0
  2300                           
  2301                           	psect	stringtext7
  2302     1066                     __pstringtext7:
  2303     1066                     STR_12:
  2304     1066  345B               	retlw	91	;'['
  2305     1067  344E               	retlw	78	;'N'
  2306     1068  345D               	retlw	93	;']'
  2307     1069  3420               	retlw	32	;' '
  2308     106A  3420               	retlw	32	;' '
  2309     106B  3420               	retlw	32	;' '
  2310     106C  345B               	retlw	91	;'['
  2311     106D  344F               	retlw	79	;'O'
  2312     106E  344B               	retlw	75	;'K'
  2313     106F  345D               	retlw	93	;']'
  2314     1070  3420               	retlw	32	;' '
  2315     1071  3420               	retlw	32	;' '
  2316     1072  3420               	retlw	32	;' '
  2317     1073  345B               	retlw	91	;'['
  2318     1074  344E               	retlw	78	;'N'
  2319     1075  345D               	retlw	93	;']'
  2320     1076  3400               	retlw	0
  2321                           
  2322                           	psect	stringtext8
  2323     1077                     __pstringtext8:
  2324     1077                     STR_1:
  2325     1077  3456               	retlw	86	;'V'
  2326     1078  3469               	retlw	105	;'i'
  2327     1079  3465               	retlw	101	;'e'
  2328     107A  3474               	retlw	116	;'t'
  2329     107B  3473               	retlw	115	;'s'
  2330     107C  3474               	retlw	116	;'t'
  2331     107D  3461               	retlw	97	;'a'
  2332     107E  3472               	retlw	114	;'r'
  2333     107F  3420               	retlw	32	;' '
  2334     1080  3420               	retlw	32	;' '
  2335     1081  3443               	retlw	67	;'C'
  2336     1082  346F               	retlw	111	;'o'
  2337     1083  3466               	retlw	102	;'f'
  2338     1084  3466               	retlw	102	;'f'
  2339     1085  3465               	retlw	101	;'e'
  2340     1086  3465               	retlw	101	;'e'
  2341     1087  3400               	retlw	0
  2342                           
  2343                           	psect	stringtext9
  2344     1088                     __pstringtext9:
  2345     1088                     STR_9:
  2346     1088  3420               	retlw	32	;' '
  2347     1089  3420               	retlw	32	;' '
  2348     108A  3420               	retlw	32	;' '
  2349     108B  3420               	retlw	32	;' '
  2350     108C  3420               	retlw	32	;' '
  2351     108D  3420               	retlw	32	;' '
  2352     108E  3420               	retlw	32	;' '
  2353     108F  3420               	retlw	32	;' '
  2354     1090  3420               	retlw	32	;' '
  2355     1091  3420               	retlw	32	;' '
  2356     1092  3420               	retlw	32	;' '
  2357     1093  3420               	retlw	32	;' '
  2358     1094  3420               	retlw	32	;' '
  2359     1095  3420               	retlw	32	;' '
  2360     1096  3420               	retlw	32	;' '
  2361     1097  3473               	retlw	115	;'s'
  2362     1098  3400               	retlw	0
  2363                           
  2364                           	psect	stringtext10
  2365     1099                     __pstringtext10:
  2366     1099                     STR_3:
  2367     1099  3441               	retlw	65	;'A'
  2368     109A  3455               	retlw	85	;'U'
  2369     109B  3454               	retlw	84	;'T'
  2370     109C  344F               	retlw	79	;'O'
  2371     109D  3420               	retlw	32	;' '
  2372     109E  343A               	retlw	58	;':'
  2373     109F  3420               	retlw	32	;' '
  2374     10A0  3420               	retlw	32	;' '
  2375     10A1  3420               	retlw	32	;' '
  2376     10A2  3420               	retlw	32	;' '
  2377     10A3  3420               	retlw	32	;' '
  2378     10A4  3420               	retlw	32	;' '
  2379     10A5  3420               	retlw	32	;' '
  2380     10A6  3420               	retlw	32	;' '
  2381     10A7  3420               	retlw	32	;' '
  2382     10A8  3473               	retlw	115	;'s'
  2383     10A9  3400               	retlw	0
  2384                           
  2385                           	psect	stringtext11
  2386     0000                     __pstringtext11:
  2387     1000                     
  2388                           	psect	cinit
  2389     001F                     start_initialization:	
  2390                           ; #config settings
  2391                           
  2392     001F                     __initialization:
  2393                           
  2394                           ; Initialize objects allocated to COMMON
  2395     001F  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
  2396     0022  00F8               	movwf	__pdataCOMMON& (0+127)
  2397     0023  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  2398     0026  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  2399                           
  2400                           ; Initialize objects allocated to BANK0
  2401     0027  318C  2430  3180   	fcall	__pidataBANK0	;fetch initializer
  2402     002A  00ED               	movwf	__pdataBANK0& (0+127)
  2403     002B  318C  2431  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2404     002E  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  2405                           
  2406                           ; Initialize objects allocated to BANK1
  2407     002F  3078               	movlw	low __pidataBANK1
  2408     0030  0084               	movwf	4
  2409     0031  308E               	movlw	(high __pidataBANK1)| (0+128)
  2410     0032  0085               	movwf	5
  2411     0033  30A0               	movlw	low __pdataBANK1
  2412     0034  0086               	movwf	6
  2413     0035  3000               	movlw	high __pdataBANK1
  2414     0036  0087               	movwf	7
  2415     0037  3028               	movlw	40
  2416     0038  318C  2443  3180   	fcall	init_ram
  2417                           
  2418                           ; Clear objects allocated to COMMON
  2419     003B  01F6               	clrf	__pbssCOMMON& (0+127)
  2420     003C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2421                           
  2422                           ; Clear objects allocated to BANK0
  2423     003D  304A               	movlw	low __pbssBANK0
  2424     003E  0084               	movwf	4
  2425     003F  3000               	movlw	high __pbssBANK0
  2426     0040  0085               	movwf	5
  2427     0041  3021               	movlw	33
  2428     0042  318C  243D  3180   	fcall	clear_ram0
  2429                           
  2430                           ; Clear objects allocated to BANK1
  2431     0045  0021               	movlb	1	; select bank1
  2432     0046  01C8               	clrf	__pbssBANK1& (0+127)
  2433     0047  01C9               	clrf	(__pbssBANK1+1)& (0+127)
  2434     0048  01CA               	clrf	(__pbssBANK1+2)& (0+127)
  2435     0049  01CB               	clrf	(__pbssBANK1+3)& (0+127)
  2436     004A                     end_of_initialization:	
  2437                           ;End of C runtime variable initialization code
  2438                           
  2439     004A                     __end_of__initialization:
  2440     004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2441     004B  0020               	movlb	0
  2442     004C  318E  2E50         	ljmp	_main	;jump to C main() function
  2443                           
  2444                           	psect	bssCOMMON
  2445     0076                     __pbssCOMMON:
  2446     0076                     _flagPressAdjust:
  2447     0076                     	ds	1
  2448     0077                     __counterDelay:
  2449     0077                     	ds	1
  2450                           
  2451                           	psect	dataCOMMON
  2452     0078                     __pdataCOMMON:
  2453     0078                     __timeAuto:
  2454     0078                     	ds	2
  2455                           
  2456                           	psect	bssBANK0
  2457     004A                     __pbssBANK0:
  2458     004A                     _counterForButtonPress:
  2459     004A                     	ds	8
  2460     0052                     _flagForButtonPress_s:
  2461     0052                     	ds	4
  2462     0056                     _flagForButtonPress:
  2463     0056                     	ds	4
  2464     005A                     _debounceButtonBuffer1:
  2465     005A                     	ds	4
  2466     005E                     _current_col:
  2467     005E                     	ds	2
  2468     0060                     _current_row:
  2469     0060                     	ds	2
  2470     0062                     _timer1_cnt:
  2471     0062                     	ds	2
  2472     0064                     __countAuto:
  2473     0064                     	ds	2
  2474     0066                     __cupTotal:
  2475     0066                     	ds	2
  2476     0068                     _flag_timer1:
  2477     0068                     	ds	1
  2478     0069                     _mode:
  2479     0069                     	ds	1
  2480     006A                     _index_lcd:
  2481     006A                     	ds	1
  2482                           
  2483                           	psect	dataBANK0
  2484     006D                     __pdataBANK0:
  2485     006D                     _timer1_MUL:
  2486     006D                     	ds	2
  2487                           
  2488                           	psect	bssBANK1
  2489     00C8                     __pbssBANK1:
  2490     00C8                     _debounceButtonBuffer2:
  2491     00C8                     	ds	4
  2492                           
  2493                           	psect	dataBANK1
  2494     00A0                     __pdataBANK1:
  2495     00A0                     _LcdScreen:
  2496     00A0                     	ds	32
  2497     00C0                     _buttonBuffer:
  2498     00C0                     	ds	4
  2499     00C4                     _buttonInputMask:
  2500     00C4                     	ds	4
  2501                           
  2502                           	psect	inittext
  2503     0C43                     init_ram:
  2504     0C43  00FE               	movwf	btemp
  2505     0C44                     initloop:
  2506     0C44  0012               	moviw fsr0++
  2507     0C45  001E               	movwi fsr1++
  2508     0C46  0BFE               	decfsz	btemp,f
  2509     0C47  2C44               	goto	initloop
  2510     0C48  3400               	retlw	0
  2511                           
  2512                           	psect	clrtext
  2513     0C3D                     clear_ram0:	
  2514                           ;	Called with FSR0 containing the base address, and
  2515                           ;	WREG with the size to clear
  2516                           
  2517     0C3D  0064               	clrwdt	;clear the watchdog before getting into this loop
  2518     0C3E                     clrloop0:
  2519     0C3E  0180               	clrf	0	;clear RAM location pointed to by FSR
  2520     0C3F  3101               	addfsr 0,1
  2521     0C40  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2522     0C41  2C3E               	goto	clrloop0	;have we reached the end yet?
  2523     0C42  3400               	retlw	0	;all done for this memory range, return
  2524                           
  2525                           	psect	cstackBANK1
  2526     00CC                     __pcstackBANK1:
  2527     00CC                     ??_FSM_ModeControl:
  2528                           
  2529                           ; 1 bytes @ 0x0
  2530     00CC                     	ds	2
  2531                           
  2532                           	psect	cstackCOMMON
  2533     0070                     __pcstackCOMMON:
  2534     0070                     ?_MTR_Set:
  2535     0070                     ?_EEP_SaveAutoTime:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538     0070                     ?_EEP_SaveCupTotal:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541     0070                     ?_SYS_Init:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544     0070                     ?_DisplayLcdScreen:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547     0070                     ?_INT_Init:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550     0070                     ?_init_lcd:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553     0070                     ?_EEP_ReadAutoTime:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556     0070                     ?_EEP_ReadCupTotal:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559     0070                     ?_eeprom_read:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562     0070                     ?_BTN_Init:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565     0070                     ?_BTN_Reading:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568     0070                     ??_BTN_Reading:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571     0070                     ?_BTN_IsHeld:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574     0070                     ?_BTN_IsPressed:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577     0070                     ?_BTN_IsPressed_s:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580     0070                     ?_FSM_Init:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583     0070                     ?_FSM_ModeControl:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586     0070                     ?_TMR1_Start:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589     0070                     ??_TMR1_Start:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592     0070                     ?_TMR1_Stop:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595     0070                     ??_TMR1_Stop:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598     0070                     ?_TMR1_Isr:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601     0070                     ?_main:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604     0070                     ?_lcd_delay:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607     0070                     ?_lcd_send_command:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610     0070                     ?_lcd_write_4bits:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613     0070                     ?_lcd_write_cmd:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616     0070                     ?_lcd_write_data:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619     0070                     ?_lcd_print_char:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622     0070                     ?_lcd_print_charS:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625     0070                     ?_isr:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628                           
  2629                           ; 1 bytes @ 0x0
  2630     0070                     	ds	2
  2631     0072                     _BTN_Reading$37:
  2632                           
  2633                           ; 1 bytes @ 0x2
  2634     0072                     	ds	1
  2635     0073                     BTN_Reading@i:
  2636                           
  2637                           ; 1 bytes @ 0x3
  2638     0073                     	ds	1
  2639     0074                     ??_MTR_Set:
  2640     0074                     ?_LcdPrintCharS:	
  2641                           ; 1 bytes @ 0x4
  2642                           
  2643     0074                     ??_INT_Init:	
  2644                           ; 1 bytes @ 0x4
  2645                           
  2646     0074                     ?_eeprom_write:	
  2647                           ; 1 bytes @ 0x4
  2648                           
  2649     0074                     ??_BTN_Init:	
  2650                           ; 1 bytes @ 0x4
  2651                           
  2652     0074                     ??_BTN_IsHeld:	
  2653                           ; 1 bytes @ 0x4
  2654                           
  2655     0074                     ??_BTN_IsPressed:	
  2656                           ; 1 bytes @ 0x4
  2657                           
  2658     0074                     ??_BTN_IsPressed_s:	
  2659                           ; 1 bytes @ 0x4
  2660                           
  2661     0074                     ??_FSM_Init:	
  2662                           ; 1 bytes @ 0x4
  2663                           
  2664     0074                     ?_TMR1_Init:	
  2665                           ; 1 bytes @ 0x4
  2666                           
  2667     0074                     ??_TMR1_Isr:	
  2668                           ; 1 bytes @ 0x4
  2669                           
  2670     0074                     ??_lcd_delay:	
  2671                           ; 1 bytes @ 0x4
  2672                           
  2673     0074                     ??_lcd_power_of:	
  2674                           ; 1 bytes @ 0x4
  2675                           
  2676     0074                     ??_lcd_send_command:	
  2677                           ; 1 bytes @ 0x4
  2678                           
  2679     0074                     ??_isr:	
  2680                           ; 1 bytes @ 0x4
  2681                           
  2682     0074                     ??___wmul:	
  2683                           ; 1 bytes @ 0x4
  2684                           
  2685     0074                     ??___lmul:	
  2686                           ; 1 bytes @ 0x4
  2687                           
  2688     0074                     ??___awdiv:	
  2689                           ; 1 bytes @ 0x4
  2690                           
  2691     0074                     ??___awmod:	
  2692                           ; 1 bytes @ 0x4
  2693                           
  2694     0074                     ??___lwmod:	
  2695                           ; 1 bytes @ 0x4
  2696                           
  2697     0074                     BTN_IsPressed@result:	
  2698                           ; 1 bytes @ 0x4
  2699                           
  2700     0074                     BTN_IsPressed_s@index:	
  2701                           ; 1 bytes @ 0x4
  2702                           
  2703     0074                     MTR_Set@state:	
  2704                           ; 1 bytes @ 0x4
  2705                           
  2706     0074                     lcd_print_charS@c:	
  2707                           ; 1 bytes @ 0x4
  2708                           
  2709     0074                     LcdPrintCharS@y:	
  2710                           ; 1 bytes @ 0x4
  2711                           
  2712     0074                     eeprom_read@addr:	
  2713                           ; 1 bytes @ 0x4
  2714                           
  2715     0074                     eeprom_write@value:	
  2716                           ; 1 bytes @ 0x4
  2717                           
  2718     0074                     TMR1_Init@count:	
  2719                           ; 1 bytes @ 0x4
  2720                           
  2721     0074                     ___wmul@product:	
  2722                           ; 2 bytes @ 0x4
  2723                           
  2724                           
  2725                           ; 2 bytes @ 0x4
  2726     0074                     	ds	1
  2727     0075                     ??_lcd_write_4bits:
  2728     0075                     ??___lldiv:	
  2729                           ; 1 bytes @ 0x5
  2730                           
  2731     0075                     ??___llmod:	
  2732                           ; 1 bytes @ 0x5
  2733                           
  2734     0075                     BTN_IsPressed@index:	
  2735                           ; 1 bytes @ 0x5
  2736                           
  2737     0075                     LcdPrintCharS@c:	
  2738                           ; 1 bytes @ 0x5
  2739                           
  2740     0075                     LcdPrintStringS@x:	
  2741                           ; 1 bytes @ 0x5
  2742                           
  2743     0075                     eeprom_write@addr:	
  2744                           ; 1 bytes @ 0x5
  2745                           
  2746     0075                     ___lwmod@counter:	
  2747                           ; 1 bytes @ 0x5
  2748                           
  2749                           
  2750                           ; 1 bytes @ 0x5
  2751     0075                     	ds	1
  2752     0076                     ??_EEP_SaveAutoTime:
  2753     0076                     ??_EEP_SaveCupTotal:	
  2754                           ; 1 bytes @ 0x6
  2755                           
  2756     0076                     ??_SYS_Init:	
  2757                           ; 1 bytes @ 0x6
  2758                           
  2759     0076                     ??_TMR1_Init:	
  2760                           ; 1 bytes @ 0x6
  2761                           
  2762     0076                     ??_TMR1_SetTime_ms:	
  2763                           ; 1 bytes @ 0x6
  2764                           
  2765     0076                     ??_main:	
  2766                           ; 1 bytes @ 0x6
  2767                           
  2768     0076                     ??_lcd_print_char:	
  2769                           ; 1 bytes @ 0x6
  2770                           
  2771                           
  2772                           	psect	cstackBANK0
  2773     0020                     __pcstackBANK0:	
  2774                           ; 1 bytes @ 0x6
  2775                           
  2776     0020                     ??_LcdPrintCharS:
  2777     0020                     ??_eeprom_write:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780     0020                     ??_eeprom_read:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783     0020                     ?_v_timer0:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786     0020                     ??_lcd_print_charS:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789     0020                     ?___wmul:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792     0020                     ?___awdiv:	
  2793                           ; 2 bytes @ 0x0
  2794                           
  2795     0020                     ?___awmod:	
  2796                           ; 2 bytes @ 0x0
  2797                           
  2798     0020                     ?___lwmod:	
  2799                           ; 2 bytes @ 0x0
  2800                           
  2801     0020                     ?___lmul:	
  2802                           ; 2 bytes @ 0x0
  2803                           
  2804     0020                     BTN_IsHeld@index:	
  2805                           ; 4 bytes @ 0x0
  2806                           
  2807     0020                     lcd_delay@time:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810     0020                     ___wmul@multiplier:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813     0020                     ___awdiv@divisor:	
  2814                           ; 2 bytes @ 0x0
  2815                           
  2816     0020                     ___awmod@divisor:	
  2817                           ; 2 bytes @ 0x0
  2818                           
  2819     0020                     ___lwmod@divisor:	
  2820                           ; 2 bytes @ 0x0
  2821                           
  2822     0020                     v_timer0@time:	
  2823                           ; 2 bytes @ 0x0
  2824                           
  2825     0020                     ___lmul@multiplier:	
  2826                           ; 4 bytes @ 0x0
  2827                           
  2828                           
  2829                           ; 4 bytes @ 0x0
  2830     0020                     	ds	1
  2831     0021                     lcd_delay@i:
  2832                           
  2833                           ; 2 bytes @ 0x1
  2834     0021                     	ds	1
  2835     0022                     ___wmul@multiplicand:
  2836     0022                     ___awdiv@dividend:	
  2837                           ; 2 bytes @ 0x2
  2838                           
  2839     0022                     ___awmod@dividend:	
  2840                           ; 2 bytes @ 0x2
  2841                           
  2842     0022                     ___lwmod@dividend:	
  2843                           ; 2 bytes @ 0x2
  2844                           
  2845                           
  2846                           ; 2 bytes @ 0x2
  2847     0022                     	ds	1
  2848     0023                     ?_LcdPrintStringS:
  2849     0023                     ??_EEP_ReadAutoTime:	
  2850                           ; 1 bytes @ 0x3
  2851                           
  2852     0023                     ??_EEP_ReadCupTotal:	
  2853                           ; 1 bytes @ 0x3
  2854                           
  2855     0023                     LcdPrintCharS@x:	
  2856                           ; 1 bytes @ 0x3
  2857                           
  2858     0023                     LcdPrintStringS@y:	
  2859                           ; 1 bytes @ 0x3
  2860                           
  2861     0023                     lcd_delay@j:	
  2862                           ; 1 bytes @ 0x3
  2863                           
  2864                           
  2865                           ; 2 bytes @ 0x3
  2866     0023                     	ds	1
  2867     0024                     ??_v_timer0:
  2868     0024                     ?___lwdiv:	
  2869                           ; 1 bytes @ 0x4
  2870                           
  2871     0024                     ___awdiv@counter:	
  2872                           ; 2 bytes @ 0x4
  2873                           
  2874     0024                     ___awmod@counter:	
  2875                           ; 1 bytes @ 0x4
  2876                           
  2877     0024                     LcdPrintStringS@string:	
  2878                           ; 1 bytes @ 0x4
  2879                           
  2880     0024                     ___lwdiv@divisor:	
  2881                           ; 2 bytes @ 0x4
  2882                           
  2883     0024                     ___lmul@multiplicand:	
  2884                           ; 2 bytes @ 0x4
  2885                           
  2886                           
  2887                           ; 4 bytes @ 0x4
  2888     0024                     	ds	1
  2889     0025                     lcd_write_4bits@dat:
  2890     0025                     ___awdiv@sign:	
  2891                           ; 1 bytes @ 0x5
  2892                           
  2893     0025                     ___awmod@sign:	
  2894                           ; 1 bytes @ 0x5
  2895                           
  2896                           
  2897                           ; 1 bytes @ 0x5
  2898     0025                     	ds	1
  2899     0026                     ??_LcdPrintStringS:
  2900     0026                     ??_lcd_write_cmd:	
  2901                           ; 1 bytes @ 0x6
  2902                           
  2903     0026                     ??_lcd_write_data:	
  2904                           ; 1 bytes @ 0x6
  2905                           
  2906     0026                     ___awdiv@quotient:	
  2907                           ; 1 bytes @ 0x6
  2908                           
  2909     0026                     ___lwdiv@dividend:	
  2910                           ; 2 bytes @ 0x6
  2911                           
  2912                           
  2913                           ; 2 bytes @ 0x6
  2914     0026                     	ds	1
  2915     0027                     lcd_write_cmd@cmd:
  2916     0027                     lcd_write_data@data:	
  2917                           ; 1 bytes @ 0x7
  2918                           
  2919                           
  2920                           ; 1 bytes @ 0x7
  2921     0027                     	ds	1
  2922     0028                     ?_lcd_set_cursor:
  2923     0028                     ??___lwdiv:	
  2924                           ; 1 bytes @ 0x8
  2925                           
  2926     0028                     lcd_set_cursor@column:	
  2927                           ; 1 bytes @ 0x8
  2928                           
  2929     0028                     lcd_print_char@c:	
  2930                           ; 1 bytes @ 0x8
  2931                           
  2932     0028                     v_timer0@i:	
  2933                           ; 1 bytes @ 0x8
  2934                           
  2935     0028                     ___lmul@product:	
  2936                           ; 2 bytes @ 0x8
  2937                           
  2938                           
  2939                           ; 4 bytes @ 0x8
  2940     0028                     	ds	1
  2941     0029                     ??_lcd_set_cursor:
  2942     0029                     ___lwdiv@quotient:	
  2943                           ; 1 bytes @ 0x9
  2944                           
  2945                           
  2946                           ; 2 bytes @ 0x9
  2947     0029                     	ds	1
  2948     002A                     v_timer0@j:
  2949                           
  2950                           ; 2 bytes @ 0xA
  2951     002A                     	ds	1
  2952     002B                     lcd_set_cursor@row:
  2953     002B                     ___lwdiv@counter:	
  2954                           ; 1 bytes @ 0xB
  2955                           
  2956                           
  2957                           ; 1 bytes @ 0xB
  2958     002B                     	ds	1
  2959     002C                     ?_LcdPrintFloatS:
  2960     002C                     ?_BTN_IsPressed_ms:	
  2961                           ; 1 bytes @ 0xC
  2962                           
  2963     002C                     ?_TMR1_SetTime_ms:	
  2964                           ; 1 bytes @ 0xC
  2965                           
  2966     002C                     ?_lcd_power_of:	
  2967                           ; 1 bytes @ 0xC
  2968                           
  2969     002C                     lcd_send_command@cmd:	
  2970                           ; 4 bytes @ 0xC
  2971                           
  2972     002C                     lcd_set_cursor@address:	
  2973                           ; 1 bytes @ 0xC
  2974                           
  2975     002C                     LcdPrintFloatS@y:	
  2976                           ; 1 bytes @ 0xC
  2977                           
  2978     002C                     BTN_IsPressed_ms@milisec:	
  2979                           ; 1 bytes @ 0xC
  2980                           
  2981     002C                     TMR1_SetTime_ms@time:	
  2982                           ; 2 bytes @ 0xC
  2983                           
  2984     002C                     lcd_power_of@A:	
  2985                           ; 2 bytes @ 0xC
  2986                           
  2987                           
  2988                           ; 2 bytes @ 0xC
  2989     002C                     	ds	1
  2990     002D                     ??_DisplayLcdScreen:
  2991     002D                     ??_init_lcd:	
  2992                           ; 1 bytes @ 0xD
  2993                           
  2994     002D                     LcdPrintFloatS@num:	
  2995                           ; 1 bytes @ 0xD
  2996                           
  2997                           
  2998                           ; 2 bytes @ 0xD
  2999     002D                     	ds	1
  3000     002E                     ??_BTN_IsPressed_ms:
  3001     002E                     DisplayLcdScreen@i:	
  3002                           ; 1 bytes @ 0xE
  3003                           
  3004     002E                     lcd_power_of@x:	
  3005                           ; 1 bytes @ 0xE
  3006                           
  3007                           
  3008                           ; 2 bytes @ 0xE
  3009     002E                     	ds	1
  3010     002F                     ??_LcdPrintFloatS:
  3011                           
  3012                           ; 1 bytes @ 0xF
  3013     002F                     	ds	1
  3014     0030                     BTN_IsPressed_ms@index:
  3015     0030                     lcd_power_of@i:	
  3016                           ; 1 bytes @ 0x10
  3017                           
  3018                           
  3019                           ; 1 bytes @ 0x10
  3020     0030                     	ds	1
  3021     0031                     LcdPrintFloatS@x:
  3022     0031                     lcd_power_of@temp:	
  3023                           ; 1 bytes @ 0x11
  3024                           
  3025                           
  3026                           ; 4 bytes @ 0x11
  3027     0031                     	ds	1
  3028     0032                     LcdPrintFloatS@decimalPlaces:
  3029                           
  3030                           ; 1 bytes @ 0x12
  3031     0032                     	ds	1
  3032     0033                     LcdPrintFloatS@integerPart:
  3033                           
  3034                           ; 1 bytes @ 0x13
  3035     0033                     	ds	2
  3036     0035                     ?___lldiv:
  3037     0035                     ?___llmod:	
  3038                           ; 4 bytes @ 0x15
  3039                           
  3040     0035                     ___lldiv@divisor:	
  3041                           ; 4 bytes @ 0x15
  3042                           
  3043     0035                     ___llmod@divisor:	
  3044                           ; 4 bytes @ 0x15
  3045                           
  3046                           
  3047                           ; 4 bytes @ 0x15
  3048     0035                     	ds	4
  3049     0039                     ___lldiv@dividend:
  3050     0039                     ___llmod@dividend:	
  3051                           ; 4 bytes @ 0x19
  3052                           
  3053                           
  3054                           ; 4 bytes @ 0x19
  3055     0039                     	ds	4
  3056     003D                     ___llmod@counter:
  3057     003D                     ___lldiv@quotient:	
  3058                           ; 1 bytes @ 0x1D
  3059                           
  3060                           
  3061                           ; 4 bytes @ 0x1D
  3062     003D                     	ds	4
  3063     0041                     ___lldiv@counter:
  3064                           
  3065                           ; 1 bytes @ 0x21
  3066     0041                     	ds	1
  3067     0042                     ?_LcdPrintNumS:
  3068     0042                     LcdPrintNumS@y:	
  3069                           ; 1 bytes @ 0x22
  3070                           
  3071                           
  3072                           ; 1 bytes @ 0x22
  3073     0042                     	ds	1
  3074     0043                     LcdPrintNumS@num:
  3075                           
  3076                           ; 2 bytes @ 0x23
  3077     0043                     	ds	2
  3078     0045                     ??_LcdPrintNumS:
  3079                           
  3080                           ; 1 bytes @ 0x25
  3081     0045                     	ds	2
  3082     0047                     LcdPrintNumS@x:
  3083                           
  3084                           ; 1 bytes @ 0x27
  3085     0047                     	ds	1
  3086     0048                     LcdPrintNumS@num_flag:
  3087                           
  3088                           ; 1 bytes @ 0x28
  3089     0048                     	ds	1
  3090     0049                     LcdPrintNumS@i:
  3091                           
  3092                           ; 1 bytes @ 0x29
  3093     0049                     	ds	1
  3094                           
  3095                           	psect	maintext
  3096     0E50                     __pmaintext:	
  3097 ;;
  3098 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3099 ;;
  3100 ;; *************** function _main *****************
  3101 ;; Defined at:
  3102 ;;		line 12 in file "main.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : B1F/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;Total ram usage:        0 bytes
  3121 ;; Hardware stack levels required when called: 8
  3122 ;; This function calls:
  3123 ;;		_DisplayLcdScreen
  3124 ;;		_FSM_ModeControl
  3125 ;;		_SYS_Init
  3126 ;; This function is called by:
  3127 ;;		Startup code after reset
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131     0E50                     _main:	
  3132                           ;psect for function _main
  3133                           
  3134     0E50                     l3587:	
  3135                           ;incstack = 0
  3136                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3137                           
  3138                           
  3139                           ;main.c: 13:     SYS_Init();
  3140     0E50  318E  2629  318E   	fcall	_SYS_Init
  3141     0E53                     l3589:
  3142                           
  3143                           ;main.c: 17:         FSM_ModeControl();
  3144     0E53  3180  204E  318E   	fcall	_FSM_ModeControl
  3145     0E56                     l3591:
  3146                           
  3147                           ;main.c: 19:         if(flag_timer1){
  3148     0E56  0020               	movlb	0	; select bank0
  3149     0E57  0868               	movf	_flag_timer1,w
  3150     0E58  1903               	btfsc	3,2
  3151     0E59  2E5B               	goto	u3291
  3152     0E5A  2E5C               	goto	u3290
  3153     0E5B                     u3291:
  3154     0E5B  2E53               	goto	l3589
  3155     0E5C                     u3290:
  3156     0E5C                     l3593:
  3157                           
  3158                           ;main.c: 20:             flag_timer1 = 0;
  3159     0E5C  01E8               	clrf	_flag_timer1
  3160     0E5D                     l3595:
  3161                           
  3162                           ;main.c: 21:             DisplayLcdScreen();
  3163     0E5D  318F  2791  318E   	fcall	_DisplayLcdScreen
  3164     0E60                     l3597:
  3165                           
  3166                           ;main.c: 23:             if(_countAuto >= 5){
  3167     0E60  3000               	movlw	0
  3168     0E61  0020               	movlb	0	; select bank0
  3169     0E62  0265               	subwf	__countAuto+1,w
  3170     0E63  3005               	movlw	5
  3171     0E64  1903               	skipnz
  3172     0E65  0264               	subwf	__countAuto,w
  3173     0E66  1C03               	skipc
  3174     0E67  2E69               	goto	u3301
  3175     0E68  2E6A               	goto	u3300
  3176     0E69                     u3301:
  3177     0E69  2E6E               	goto	l3601
  3178     0E6A                     u3300:
  3179     0E6A                     l3599:
  3180                           
  3181                           ;main.c: 24:                 _countAuto -= 5;
  3182     0E6A  3005               	movlw	5
  3183     0E6B  02E4               	subwf	__countAuto,f
  3184     0E6C  3000               	movlw	0
  3185     0E6D  3BE5               	subwfb	__countAuto+1,f
  3186     0E6E                     l3601:
  3187                           
  3188                           ;main.c: 26:             if(_counterDelay >= 1){
  3189     0E6E  0877               	movf	__counterDelay,w
  3190     0E6F  1903               	btfsc	3,2
  3191     0E70  2E72               	goto	u3311
  3192     0E71  2E73               	goto	u3310
  3193     0E72                     u3311:
  3194     0E72  2E53               	goto	l3589
  3195     0E73                     u3310:
  3196     0E73                     l3603:
  3197                           
  3198                           ;main.c: 27:                 _counterDelay -= 1;
  3199     0E73  3001               	movlw	1
  3200     0E74  02F7               	subwf	__counterDelay,f
  3201     0E75  2E53               	goto	l3589
  3202     0E76  3180  281D         	ljmp	start
  3203     0E78                     __end_of_main:
  3204                           
  3205                           	psect	text1
  3206     0E29                     __ptext1:	
  3207 ;; *************** function _SYS_Init *****************
  3208 ;; Defined at:
  3209 ;;		line 36 in file "main.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, pclath, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 6
  3230 ;; This function calls:
  3231 ;;		_BTN_Init
  3232 ;;		_EEP_ReadAutoTime
  3233 ;;		_EEP_ReadCupTotal
  3234 ;;		_FSM_Init
  3235 ;;		_INT_Init
  3236 ;;		_TMR1_Init
  3237 ;;		_TMR1_SetTime_ms
  3238 ;;		_init_lcd
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244     0E29                     _SYS_Init:	
  3245                           ;psect for function _SYS_Init
  3246                           
  3247     0E29                     l3541:	
  3248                           ;incstack = 0
  3249                           ; Regs used in _SYS_Init: [wreg+status,2+status,0+pclath+cstack]
  3250                           
  3251                           
  3252                           ;main.c: 38:     OSCCONbits.IRCF = 0b1101;
  3253     0E29  0021               	movlb	1	; select bank1
  3254     0E2A  0819               	movf	25,w	;volatile
  3255     0E2B  3987               	andlw	-121
  3256     0E2C  3868               	iorlw	104
  3257     0E2D  0099               	movwf	25	;volatile
  3258     0E2E                     l3543:
  3259                           
  3260                           ;main.c: 40:     INT_Init();
  3261     0E2E  318C  2435  318E   	fcall	_INT_Init
  3262     0E31                     l3545:
  3263                           
  3264                           ;main.c: 41:     TMR1_Init(10000);
  3265     0E31  3010               	movlw	16
  3266     0E32  00F4               	movwf	TMR1_Init@count
  3267     0E33  3027               	movlw	39
  3268     0E34  00F5               	movwf	TMR1_Init@count+1
  3269     0E35  318C  2498  318E   	fcall	_TMR1_Init
  3270     0E38                     l3547:
  3271                           
  3272                           ;main.c: 43:     BTN_Init();
  3273     0E38  318C  2462  318E   	fcall	_BTN_Init
  3274     0E3B                     l3549:
  3275                           
  3276                           ;main.c: 44:     init_lcd();
  3277     0E3B  3183  234B  318E   	fcall	_init_lcd
  3278     0E3E                     l3551:
  3279                           
  3280                           ;main.c: 45:     FSM_Init();
  3281     0E3E  318C  2438  318E   	fcall	_FSM_Init
  3282     0E41                     l3553:
  3283                           
  3284                           ;main.c: 47:     TMR1_SetTime_ms(50);
  3285     0E41  3032               	movlw	50
  3286     0E42  0020               	movlb	0	; select bank0
  3287     0E43  00AC               	movwf	TMR1_SetTime_ms@time
  3288     0E44  3000               	movlw	0
  3289     0E45  00AD               	movwf	TMR1_SetTime_ms@time+1
  3290     0E46  318C  24AC  318E   	fcall	_TMR1_SetTime_ms
  3291     0E49                     l3555:
  3292                           
  3293                           ;main.c: 49:     EEP_ReadAutoTime();
  3294     0E49  318D  25E2  318E   	fcall	_EEP_ReadAutoTime
  3295     0E4C                     l3557:
  3296                           
  3297                           ;main.c: 50:     EEP_ReadCupTotal();
  3298     0E4C  318C  24D7  318E   	fcall	_EEP_ReadCupTotal
  3299     0E4F                     l247:
  3300     0E4F  0008               	return
  3301     0E50                     __end_of_SYS_Init:
  3302                           
  3303                           	psect	text2
  3304     034B                     __ptext2:	
  3305 ;; *************** function _init_lcd *****************
  3306 ;; Defined at:
  3307 ;;		line 52 in file "lcd.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 5
  3328 ;; This function calls:
  3329 ;;		_lcd_send_command
  3330 ;;		_v_timer0
  3331 ;; This function is called by:
  3332 ;;		_SYS_Init
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336     034B                     _init_lcd:	
  3337                           ;psect for function _init_lcd
  3338                           
  3339     034B                     l3225:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  3342                           
  3343                           
  3344                           ;lcd.c: 54:     TRISC = 0x00;
  3345     034B  0021               	movlb	1	; select bank1
  3346     034C  018E               	clrf	14	;volatile
  3347     034D                     l3227:
  3348                           
  3349                           ;lcd.c: 55:     v_timer0(25);
  3350     034D  3000               	movlw	0
  3351     034E  0020               	movlb	0	; select bank0
  3352     034F  00A3               	movwf	v_timer0@time+3
  3353     0350  3000               	movlw	0
  3354     0351  00A2               	movwf	v_timer0@time+2
  3355     0352  3000               	movlw	0
  3356     0353  00A1               	movwf	v_timer0@time+1
  3357     0354  3019               	movlw	25
  3358     0355  00A0               	movwf	v_timer0@time
  3359     0356  318F  27C7  3183   	fcall	_v_timer0
  3360     0359                     l3229:
  3361                           
  3362                           ;lcd.c: 57:     PORTC&=0x0f;
  3363     0359  300F               	movlw	15
  3364     035A  0020               	movlb	0	; select bank0
  3365     035B  00AD               	movwf	??_init_lcd
  3366     035C  082D               	movf	??_init_lcd,w
  3367     035D  058E               	andwf	14,f	;volatile
  3368     035E                     l3231:
  3369                           
  3370                           ;lcd.c: 58:  PORTC&=0xf8;
  3371     035E  30F8               	movlw	248
  3372     035F  00AD               	movwf	??_init_lcd
  3373     0360  082D               	movf	??_init_lcd,w
  3374     0361  058E               	andwf	14,f	;volatile
  3375     0362                     l3233:
  3376                           
  3377                           ;lcd.c: 61:     PORTC &= 0x0F; PORTC |= (0x03<<4);
  3378     0362  300F               	movlw	15
  3379     0363  00AD               	movwf	??_init_lcd
  3380     0364  082D               	movf	??_init_lcd,w
  3381     0365  058E               	andwf	14,f	;volatile
  3382     0366                     l3235:
  3383                           
  3384                           ;lcd.c: 62:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3385     0366  3030               	movlw	48
  3386     0367  00AD               	movwf	??_init_lcd
  3387     0368  082D               	movf	??_init_lcd,w
  3388     0369  048E               	iorwf	14,f	;volatile
  3389     036A                     l3237:
  3390     036A  158E               	bsf	14,3	;volatile
  3391     036B                     l3241:
  3392                           
  3393                           ;lcd.c: 63:     v_timer0(1);
  3394     036B  3000               	movlw	0
  3395     036C  00A3               	movwf	v_timer0@time+3
  3396     036D  3000               	movlw	0
  3397     036E  00A2               	movwf	v_timer0@time+2
  3398     036F  3000               	movlw	0
  3399     0370  00A1               	movwf	v_timer0@time+1
  3400     0371  3001               	movlw	1
  3401     0372  00A0               	movwf	v_timer0@time
  3402     0373  318F  27C7  3183   	fcall	_v_timer0
  3403     0376                     l3245:	
  3404                           ;lcd.c: 64:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3405                           
  3406     0376  30F7               	movlw	247
  3407     0377  0020               	movlb	0	; select bank0
  3408     0378  00AD               	movwf	??_init_lcd
  3409     0379  082D               	movf	??_init_lcd,w
  3410     037A  058E               	andwf	14,f	;volatile
  3411     037B                     l3247:
  3412                           
  3413                           ;lcd.c: 65:     v_timer0(1);
  3414     037B  3000               	movlw	0
  3415     037C  00A3               	movwf	v_timer0@time+3
  3416     037D  3000               	movlw	0
  3417     037E  00A2               	movwf	v_timer0@time+2
  3418     037F  3000               	movlw	0
  3419     0380  00A1               	movwf	v_timer0@time+1
  3420     0381  3001               	movlw	1
  3421     0382  00A0               	movwf	v_timer0@time
  3422     0383  318F  27C7  3183   	fcall	_v_timer0
  3423     0386                     l3249:
  3424                           
  3425                           ;lcd.c: 68:     PORTC &= 0x0F; PORTC |= (0x03<<4);
  3426     0386  300F               	movlw	15
  3427     0387  0020               	movlb	0	; select bank0
  3428     0388  00AD               	movwf	??_init_lcd
  3429     0389  082D               	movf	??_init_lcd,w
  3430     038A  058E               	andwf	14,f	;volatile
  3431     038B                     l3251:
  3432                           
  3433                           ;lcd.c: 69:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3434     038B  3030               	movlw	48
  3435     038C  00AD               	movwf	??_init_lcd
  3436     038D  082D               	movf	??_init_lcd,w
  3437     038E  048E               	iorwf	14,f	;volatile
  3438     038F                     l3253:
  3439     038F  158E               	bsf	14,3	;volatile
  3440     0390                     l3257:
  3441                           
  3442                           ;lcd.c: 70:     v_timer0(1);
  3443     0390  3000               	movlw	0
  3444     0391  00A3               	movwf	v_timer0@time+3
  3445     0392  3000               	movlw	0
  3446     0393  00A2               	movwf	v_timer0@time+2
  3447     0394  3000               	movlw	0
  3448     0395  00A1               	movwf	v_timer0@time+1
  3449     0396  3001               	movlw	1
  3450     0397  00A0               	movwf	v_timer0@time
  3451     0398  318F  27C7  3183   	fcall	_v_timer0
  3452     039B                     l3261:	
  3453                           ;lcd.c: 71:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3454                           
  3455     039B  30F7               	movlw	247
  3456     039C  0020               	movlb	0	; select bank0
  3457     039D  00AD               	movwf	??_init_lcd
  3458     039E  082D               	movf	??_init_lcd,w
  3459     039F  058E               	andwf	14,f	;volatile
  3460     03A0                     l3263:
  3461                           
  3462                           ;lcd.c: 72:     v_timer0(1);
  3463     03A0  3000               	movlw	0
  3464     03A1  00A3               	movwf	v_timer0@time+3
  3465     03A2  3000               	movlw	0
  3466     03A3  00A2               	movwf	v_timer0@time+2
  3467     03A4  3000               	movlw	0
  3468     03A5  00A1               	movwf	v_timer0@time+1
  3469     03A6  3001               	movlw	1
  3470     03A7  00A0               	movwf	v_timer0@time
  3471     03A8  318F  27C7  3183   	fcall	_v_timer0
  3472     03AB                     l3265:
  3473                           
  3474                           ;lcd.c: 75:     PORTC &= 0x0F; PORTC |= (0x03<<4);
  3475     03AB  300F               	movlw	15
  3476     03AC  0020               	movlb	0	; select bank0
  3477     03AD  00AD               	movwf	??_init_lcd
  3478     03AE  082D               	movf	??_init_lcd,w
  3479     03AF  058E               	andwf	14,f	;volatile
  3480     03B0                     l3267:
  3481                           
  3482                           ;lcd.c: 76:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3483     03B0  3030               	movlw	48
  3484     03B1  00AD               	movwf	??_init_lcd
  3485     03B2  082D               	movf	??_init_lcd,w
  3486     03B3  048E               	iorwf	14,f	;volatile
  3487     03B4                     l3269:
  3488     03B4  158E               	bsf	14,3	;volatile
  3489     03B5                     l3273:
  3490                           
  3491                           ;lcd.c: 77:     v_timer0(1);
  3492     03B5  3000               	movlw	0
  3493     03B6  00A3               	movwf	v_timer0@time+3
  3494     03B7  3000               	movlw	0
  3495     03B8  00A2               	movwf	v_timer0@time+2
  3496     03B9  3000               	movlw	0
  3497     03BA  00A1               	movwf	v_timer0@time+1
  3498     03BB  3001               	movlw	1
  3499     03BC  00A0               	movwf	v_timer0@time
  3500     03BD  318F  27C7  3183   	fcall	_v_timer0
  3501     03C0                     l3277:	
  3502                           ;lcd.c: 78:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3503                           
  3504     03C0  30F7               	movlw	247
  3505     03C1  0020               	movlb	0	; select bank0
  3506     03C2  00AD               	movwf	??_init_lcd
  3507     03C3  082D               	movf	??_init_lcd,w
  3508     03C4  058E               	andwf	14,f	;volatile
  3509     03C5                     l3279:
  3510                           
  3511                           ;lcd.c: 79:     v_timer0(1);
  3512     03C5  3000               	movlw	0
  3513     03C6  00A3               	movwf	v_timer0@time+3
  3514     03C7  3000               	movlw	0
  3515     03C8  00A2               	movwf	v_timer0@time+2
  3516     03C9  3000               	movlw	0
  3517     03CA  00A1               	movwf	v_timer0@time+1
  3518     03CB  3001               	movlw	1
  3519     03CC  00A0               	movwf	v_timer0@time
  3520     03CD  318F  27C7  3183   	fcall	_v_timer0
  3521     03D0                     l3281:
  3522                           
  3523                           ;lcd.c: 82:     PORTC &= 0x0F; PORTC |= (0x02<<4);
  3524     03D0  300F               	movlw	15
  3525     03D1  0020               	movlb	0	; select bank0
  3526     03D2  00AD               	movwf	??_init_lcd
  3527     03D3  082D               	movf	??_init_lcd,w
  3528     03D4  058E               	andwf	14,f	;volatile
  3529     03D5                     l3283:
  3530                           
  3531                           ;lcd.c: 83:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3532     03D5  168E               	bsf	14,5	;volatile
  3533     03D6                     l3285:
  3534     03D6  158E               	bsf	14,3	;volatile
  3535     03D7                     l3289:
  3536                           
  3537                           ;lcd.c: 84:     v_timer0(1);
  3538     03D7  3000               	movlw	0
  3539     03D8  00A3               	movwf	v_timer0@time+3
  3540     03D9  3000               	movlw	0
  3541     03DA  00A2               	movwf	v_timer0@time+2
  3542     03DB  3000               	movlw	0
  3543     03DC  00A1               	movwf	v_timer0@time+1
  3544     03DD  3001               	movlw	1
  3545     03DE  00A0               	movwf	v_timer0@time
  3546     03DF  318F  27C7  3183   	fcall	_v_timer0
  3547     03E2                     l3293:	
  3548                           ;lcd.c: 85:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  3549                           
  3550     03E2  30F7               	movlw	247
  3551     03E3  0020               	movlb	0	; select bank0
  3552     03E4  00AD               	movwf	??_init_lcd
  3553     03E5  082D               	movf	??_init_lcd,w
  3554     03E6  058E               	andwf	14,f	;volatile
  3555     03E7                     l3295:
  3556                           
  3557                           ;lcd.c: 86:     v_timer0(1);
  3558     03E7  3000               	movlw	0
  3559     03E8  00A3               	movwf	v_timer0@time+3
  3560     03E9  3000               	movlw	0
  3561     03EA  00A2               	movwf	v_timer0@time+2
  3562     03EB  3000               	movlw	0
  3563     03EC  00A1               	movwf	v_timer0@time+1
  3564     03ED  3001               	movlw	1
  3565     03EE  00A0               	movwf	v_timer0@time
  3566     03EF  318F  27C7  3183   	fcall	_v_timer0
  3567     03F2                     l3297:
  3568                           
  3569                           ;lcd.c: 88:  lcd_send_command(0x28);
  3570     03F2  3028               	movlw	40
  3571     03F3  3186  2664  3183   	fcall	_lcd_send_command
  3572     03F6                     l3299:
  3573                           
  3574                           ;lcd.c: 90:  lcd_send_command(0x0c);
  3575     03F6  300C               	movlw	12
  3576     03F7  3186  2664  3183   	fcall	_lcd_send_command
  3577     03FA                     l317:
  3578     03FA  0008               	return
  3579     03FB                     __end_of_init_lcd:
  3580                           
  3581                           	psect	text3
  3582     0664                     __ptext3:	
  3583 ;; *************** function _lcd_send_command *****************
  3584 ;; Defined at:
  3585 ;;		line 33 in file "lcd.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  cmd             1    wreg     unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  cmd             1   12[BANK0 ] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;Total ram usage:        3 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 4
  3606 ;; This function calls:
  3607 ;;		_v_timer0
  3608 ;; This function is called by:
  3609 ;;		_init_lcd
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613     0664                     _lcd_send_command:	
  3614                           ;psect for function _lcd_send_command
  3615                           
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _lcd_send_command: [wreg+status,2+status,0+pclath+cstack]
  3619                           ;lcd_send_command@cmd stored from wreg
  3620     0664  0020               	movlb	0	; select bank0
  3621     0665  00AC               	movwf	lcd_send_command@cmd
  3622     0666                     l2979:
  3623                           
  3624                           ;lcd.c: 33: void lcd_send_command(unsigned char cmd);lcd.c: 34: {;lcd.c: 35:  PORTC &= 0
      +                          x0f;
  3625     0666  300F               	movlw	15
  3626     0667  00F4               	movwf	??_lcd_send_command
  3627     0668  0874               	movf	??_lcd_send_command,w
  3628     0669  058E               	andwf	14,f	;volatile
  3629                           
  3630                           ;lcd.c: 36:  PORTC |= (cmd&0xf0);
  3631     066A  082C               	movf	lcd_send_command@cmd,w
  3632     066B  39F0               	andlw	240
  3633     066C  00F4               	movwf	??_lcd_send_command
  3634     066D  0874               	movf	??_lcd_send_command,w
  3635     066E  048E               	iorwf	14,f	;volatile
  3636     066F                     l2981:
  3637                           
  3638                           ;lcd.c: 37:  PORTC |= (1 << 3);
  3639     066F  158E               	bsf	14,3	;volatile
  3640     0670                     l2983:
  3641                           
  3642                           ;lcd.c: 38:  v_timer0(1);
  3643     0670  3000               	movlw	0
  3644     0671  00A3               	movwf	v_timer0@time+3
  3645     0672  3000               	movlw	0
  3646     0673  00A2               	movwf	v_timer0@time+2
  3647     0674  3000               	movlw	0
  3648     0675  00A1               	movwf	v_timer0@time+1
  3649     0676  3001               	movlw	1
  3650     0677  00A0               	movwf	v_timer0@time
  3651     0678  318F  27C7  3186   	fcall	_v_timer0
  3652     067B                     l2985:
  3653                           
  3654                           ;lcd.c: 40:  PORTC &=~ (1 <<3);
  3655     067B  30F7               	movlw	247
  3656     067C  00F4               	movwf	??_lcd_send_command
  3657     067D  0874               	movf	??_lcd_send_command,w
  3658     067E  0020               	movlb	0	; select bank0
  3659     067F  058E               	andwf	14,f	;volatile
  3660                           
  3661                           ;lcd.c: 41:  v_timer0(1);
  3662     0680  3000               	movlw	0
  3663     0681  00A3               	movwf	v_timer0@time+3
  3664     0682  3000               	movlw	0
  3665     0683  00A2               	movwf	v_timer0@time+2
  3666     0684  3000               	movlw	0
  3667     0685  00A1               	movwf	v_timer0@time+1
  3668     0686  3001               	movlw	1
  3669     0687  00A0               	movwf	v_timer0@time
  3670     0688  318F  27C7  3186   	fcall	_v_timer0
  3671     068B                     l2987:
  3672                           
  3673                           ;lcd.c: 43:  PORTC &= 0x0f;
  3674     068B  300F               	movlw	15
  3675     068C  00F4               	movwf	??_lcd_send_command
  3676     068D  0874               	movf	??_lcd_send_command,w
  3677     068E  0020               	movlb	0	; select bank0
  3678     068F  058E               	andwf	14,f	;volatile
  3679     0690                     l2989:
  3680                           
  3681                           ;lcd.c: 44:  PORTC |= (cmd<<4);
  3682     0690  082C               	movf	lcd_send_command@cmd,w	;volatile
  3683     0691  00F4               	movwf	??_lcd_send_command
  3684     0692  3003               	movlw	3
  3685     0693                     u2515:
  3686     0693  35F4               	lslf	??_lcd_send_command,f
  3687     0694  3EFF               	addlw	-1
  3688     0695  1D03               	skipz
  3689     0696  2E93               	goto	u2515
  3690     0697  3574               	lslf	??_lcd_send_command,w
  3691     0698  00F5               	movwf	??_lcd_send_command+1
  3692     0699  0875               	movf	??_lcd_send_command+1,w
  3693     069A  048E               	iorwf	14,f	;volatile
  3694     069B                     l2991:
  3695                           
  3696                           ;lcd.c: 45:  PORTC |= (1 <<3);
  3697     069B  158E               	bsf	14,3	;volatile
  3698                           
  3699                           ;lcd.c: 46:  v_timer0(1);
  3700     069C  3000               	movlw	0
  3701     069D  00A3               	movwf	v_timer0@time+3
  3702     069E  3000               	movlw	0
  3703     069F  00A2               	movwf	v_timer0@time+2
  3704     06A0  3000               	movlw	0
  3705     06A1  00A1               	movwf	v_timer0@time+1
  3706     06A2  3001               	movlw	1
  3707     06A3  00A0               	movwf	v_timer0@time
  3708     06A4  318F  27C7  3186   	fcall	_v_timer0
  3709     06A7                     l2993:
  3710                           
  3711                           ;lcd.c: 48:  PORTC &=~ (1 <<3);
  3712     06A7  30F7               	movlw	247
  3713     06A8  00F4               	movwf	??_lcd_send_command
  3714     06A9  0874               	movf	??_lcd_send_command,w
  3715     06AA  0020               	movlb	0	; select bank0
  3716     06AB  058E               	andwf	14,f	;volatile
  3717     06AC                     l2995:
  3718                           
  3719                           ;lcd.c: 49:  v_timer0(1);
  3720     06AC  3000               	movlw	0
  3721     06AD  00A3               	movwf	v_timer0@time+3
  3722     06AE  3000               	movlw	0
  3723     06AF  00A2               	movwf	v_timer0@time+2
  3724     06B0  3000               	movlw	0
  3725     06B1  00A1               	movwf	v_timer0@time+1
  3726     06B2  3001               	movlw	1
  3727     06B3  00A0               	movwf	v_timer0@time
  3728     06B4  318F  27C7  3186   	fcall	_v_timer0
  3729     06B7                     l282:
  3730     06B7  0008               	return
  3731     06B8                     __end_of_lcd_send_command:
  3732                           
  3733                           	psect	text4
  3734     0FC7                     __ptext4:	
  3735 ;; *************** function _v_timer0 *****************
  3736 ;; Defined at:
  3737 ;;		line 17 in file "lcd.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  time            4    0[BANK0 ] unsigned long 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  j               2   10[BANK0 ] int 
  3742 ;;  i               2    8[BANK0 ] int 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3753 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3754 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3755 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;Total ram usage:       12 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; Hardware stack levels required when called: 3
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_lcd_send_command
  3763 ;;		_init_lcd
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767     0FC7                     _v_timer0:	
  3768                           ;psect for function _v_timer0
  3769                           
  3770     0FC7                     l2925:	
  3771                           ;incstack = 0
  3772                           ; Regs used in _v_timer0: [wreg+status,2]
  3773                           
  3774                           
  3775                           ;lcd.c: 17: void v_timer0(unsigned long time);lcd.c: 18: {;lcd.c: 19:     int i,j;;lcd.c
      +                          : 20:     for(i=0;i<time;i++)
  3776     0FC7  0020               	movlb	0	; select bank0
  3777     0FC8  01A8               	clrf	v_timer0@i
  3778     0FC9  01A9               	clrf	v_timer0@i+1
  3779     0FCA  2FE4               	goto	l268
  3780     0FCB                     l2927:
  3781                           
  3782                           ;lcd.c: 21:         for(j=0;j<160;j++);
  3783     0FCB  01AA               	clrf	v_timer0@j
  3784     0FCC  01AB               	clrf	v_timer0@j+1
  3785     0FCD                     l2933:
  3786     0FCD  3001               	movlw	1
  3787     0FCE  0020               	movlb	0	; select bank0
  3788     0FCF  07AA               	addwf	v_timer0@j,f
  3789     0FD0  3000               	movlw	0
  3790     0FD1  3DAB               	addwfc	v_timer0@j+1,f
  3791     0FD2  082B               	movf	v_timer0@j+1,w
  3792     0FD3  3A80               	xorlw	128
  3793     0FD4  00A4               	movwf	??_v_timer0
  3794     0FD5  3080               	movlw	128
  3795     0FD6  0224               	subwf	??_v_timer0,w
  3796     0FD7  1D03               	skipz
  3797     0FD8  2FDB               	goto	u2445
  3798     0FD9  30A0               	movlw	160
  3799     0FDA  022A               	subwf	v_timer0@j,w
  3800     0FDB                     u2445:
  3801     0FDB  1C03               	skipc
  3802     0FDC  2FDE               	goto	u2441
  3803     0FDD  2FDF               	goto	u2440
  3804     0FDE                     u2441:
  3805     0FDE  2FCD               	goto	l2933
  3806     0FDF                     u2440:
  3807     0FDF                     l2935:
  3808     0FDF  3001               	movlw	1
  3809     0FE0  0020               	movlb	0	; select bank0
  3810     0FE1  07A8               	addwf	v_timer0@i,f
  3811     0FE2  3000               	movlw	0
  3812     0FE3  3DA9               	addwfc	v_timer0@i+1,f
  3813     0FE4                     l268:
  3814     0FE4  0828               	movf	v_timer0@i,w
  3815     0FE5  00A4               	movwf	??_v_timer0
  3816     0FE6  0829               	movf	v_timer0@i+1,w
  3817     0FE7  00A5               	movwf	??_v_timer0+1
  3818     0FE8  3000               	movlw	0
  3819     0FE9  1BA5               	btfsc	??_v_timer0+1,7
  3820     0FEA  30FF               	movlw	255
  3821     0FEB  00A6               	movwf	??_v_timer0+2
  3822     0FEC  00A7               	movwf	??_v_timer0+3
  3823     0FED  0823               	movf	v_timer0@time+3,w
  3824     0FEE  0227               	subwf	??_v_timer0+3,w
  3825     0FEF  1D03               	skipz
  3826     0FF0  2FFB               	goto	u2455
  3827     0FF1  0822               	movf	v_timer0@time+2,w
  3828     0FF2  0226               	subwf	??_v_timer0+2,w
  3829     0FF3  1D03               	skipz
  3830     0FF4  2FFB               	goto	u2455
  3831     0FF5  0821               	movf	v_timer0@time+1,w
  3832     0FF6  0225               	subwf	??_v_timer0+1,w
  3833     0FF7  1D03               	skipz
  3834     0FF8  2FFB               	goto	u2455
  3835     0FF9  0820               	movf	v_timer0@time,w
  3836     0FFA  0224               	subwf	??_v_timer0,w
  3837     0FFB                     u2455:
  3838     0FFB  1C03               	skipc
  3839     0FFC  2FFE               	goto	u2451
  3840     0FFD  2FFF               	goto	u2450
  3841     0FFE                     u2451:
  3842     0FFE  2FCB               	goto	l2927
  3843     0FFF                     u2450:
  3844     0FFF                     l273:
  3845     0FFF  0008               	return
  3846     1000                     __end_of_v_timer0:
  3847                           
  3848                           	psect	text5
  3849     0CAC                     __ptext5:	
  3850 ;; *************** function _TMR1_SetTime_ms *****************
  3851 ;; Defined at:
  3852 ;;		line 52 in file "timer.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  time            2   12[BANK0 ] unsigned int 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 4
  3873 ;; This function calls:
  3874 ;;		___lwdiv
  3875 ;; This function is called by:
  3876 ;;		_SYS_Init
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880     0CAC                     _TMR1_SetTime_ms:	
  3881                           ;psect for function _TMR1_SetTime_ms
  3882                           
  3883     0CAC                     l2455:	
  3884                           ;incstack = 0
  3885                           ; Regs used in _TMR1_SetTime_ms: [wreg+status,2+status,0+pclath+cstack]
  3886                           
  3887                           
  3888                           ;timer.c: 52: void TMR1_SetTime_ms(unsigned int time);timer.c: 53: {;timer.c: 54:  timer
      +                          1_MUL = time/10;
  3889     0CAC  300A               	movlw	10
  3890     0CAD  0020               	movlb	0	; select bank0
  3891     0CAE  00A4               	movwf	___lwdiv@divisor
  3892     0CAF  3000               	movlw	0
  3893     0CB0  00A5               	movwf	___lwdiv@divisor+1
  3894     0CB1  082D               	movf	TMR1_SetTime_ms@time+1,w
  3895     0CB2  00A7               	movwf	___lwdiv@dividend+1
  3896     0CB3  082C               	movf	TMR1_SetTime_ms@time,w
  3897     0CB4  00A6               	movwf	___lwdiv@dividend
  3898     0CB5  3187  2799  318C   	fcall	___lwdiv
  3899     0CB8  0020               	movlb	0	; select bank0
  3900     0CB9  0825               	movf	?___lwdiv+1,w
  3901     0CBA  00EE               	movwf	_timer1_MUL+1
  3902     0CBB  0824               	movf	?___lwdiv,w
  3903     0CBC  00ED               	movwf	_timer1_MUL
  3904     0CBD                     l2457:
  3905                           
  3906                           ;timer.c: 55:  timer1_cnt = 0;
  3907     0CBD  01E2               	clrf	_timer1_cnt
  3908     0CBE  01E3               	clrf	_timer1_cnt+1
  3909     0CBF                     l2459:
  3910                           
  3911                           ;timer.c: 56:  flag_timer1 = 0;
  3912     0CBF  01E8               	clrf	_flag_timer1
  3913     0CC0                     l198:
  3914     0CC0  0008               	return
  3915     0CC1                     __end_of_TMR1_SetTime_ms:
  3916                           
  3917                           	psect	text6
  3918     0C98                     __ptext6:	
  3919 ;; *************** function _TMR1_Init *****************
  3920 ;; Defined at:
  3921 ;;		line 10 in file "timer.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  count           2    4[COMMON] unsigned int 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;Total ram usage:        2 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 3
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_SYS_Init
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949     0C98                     _TMR1_Init:	
  3950                           ;psect for function _TMR1_Init
  3951                           
  3952     0C98                     l2437:	
  3953                           ;incstack = 0
  3954                           ; Regs used in _TMR1_Init: [wreg+status,2+status,0]
  3955                           
  3956                           
  3957                           ;timer.c: 12:     T1CONbits.TMR1ON = 0;
  3958     0C98  0020               	movlb	0	; select bank0
  3959     0C99  1018               	bcf	24,0	;volatile
  3960     0C9A                     l2439:
  3961                           
  3962                           ;timer.c: 13:     timer1_value = 65535 - count;
  3963     0C9A  0974               	comf	TMR1_Init@count,w
  3964     0C9B  00EB               	movwf	_timer1_value
  3965     0C9C  0975               	comf	TMR1_Init@count+1,w
  3966     0C9D  00EC               	movwf	_timer1_value+1
  3967     0C9E                     l2441:
  3968                           
  3969                           ;timer.c: 14:     TMR1 = timer1_value;
  3970     0C9E  086C               	movf	_timer1_value+1,w
  3971     0C9F  0097               	movwf	23	;volatile
  3972     0CA0  086B               	movf	_timer1_value,w
  3973     0CA1  0096               	movwf	22	;volatile
  3974     0CA2                     l2443:
  3975                           
  3976                           ;timer.c: 16:     T1CONbits.TMR1CS = 0;
  3977     0CA2  303F               	movlw	-193
  3978     0CA3  0598               	andwf	24,f	;volatile
  3979     0CA4                     l2445:
  3980                           
  3981                           ;timer.c: 18:     T1CONbits.T1CKPS0 = 0;
  3982     0CA4  1218               	bcf	24,4	;volatile
  3983     0CA5                     l2447:
  3984                           
  3985                           ;timer.c: 19:     T1CONbits.T1CKPS1 = 0;
  3986     0CA5  1298               	bcf	24,5	;volatile
  3987     0CA6                     l2449:
  3988                           
  3989                           ;timer.c: 21:     TMR1IF = 0;
  3990     0CA6  1011               	bcf	17,0	;volatile
  3991     0CA7                     l2451:
  3992                           
  3993                           ;timer.c: 22:     TMR1IE = 1;
  3994     0CA7  0021               	movlb	1	; select bank1
  3995     0CA8  1411               	bsf	17,0	;volatile
  3996     0CA9                     l2453:
  3997                           
  3998                           ;timer.c: 23:     T1CONbits.TMR1ON = 1;
  3999     0CA9  0020               	movlb	0	; select bank0
  4000     0CAA  1418               	bsf	24,0	;volatile
  4001     0CAB                     l185:
  4002     0CAB  0008               	return
  4003     0CAC                     __end_of_TMR1_Init:
  4004                           
  4005                           	psect	text7
  4006     0C35                     __ptext7:	
  4007 ;; *************** function _INT_Init *****************
  4008 ;; Defined at:
  4009 ;;		line 3 in file "interrupt.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		None
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 3
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_SYS_Init
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037     0C35                     _INT_Init:	
  4038                           ;psect for function _INT_Init
  4039                           
  4040     0C35                     l2461:	
  4041                           ;incstack = 0
  4042                           ; Regs used in _INT_Init: []
  4043                           
  4044                           
  4045                           ;interrupt.c: 4:  INTCONbits.GIE = 1;
  4046     0C35  178B               	bsf	11,7	;volatile
  4047                           
  4048                           ;interrupt.c: 5:  INTCONbits.PEIE = 1;
  4049     0C36  170B               	bsf	11,6	;volatile
  4050     0C37                     l403:
  4051     0C37  0008               	return
  4052     0C38                     __end_of_INT_Init:
  4053                           
  4054                           	psect	text8
  4055     0C38                     __ptext8:	
  4056 ;; *************** function _FSM_Init *****************
  4057 ;; Defined at:
  4058 ;;		line 9 in file "fsm.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		status,2
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;Total ram usage:        0 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 3
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_SYS_Init
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086     0C38                     _FSM_Init:	
  4087                           ;psect for function _FSM_Init
  4088                           
  4089     0C38                     l2373:	
  4090                           ;incstack = 0
  4091                           ; Regs used in _FSM_Init: [status,2]
  4092                           
  4093                           
  4094                           ;fsm.c: 10:     index_lcd = 0;
  4095     0C38  0020               	movlb	0	; select bank0
  4096     0C39  01EA               	clrf	_index_lcd
  4097                           
  4098                           ;fsm.c: 11:     mode = INIT;
  4099     0C3A  01E9               	clrf	_mode
  4100                           
  4101                           ;fsm.c: 12:     flagPressAdjust = 0;
  4102     0C3B  01F6               	clrf	_flagPressAdjust
  4103     0C3C                     l94:
  4104     0C3C  0008               	return
  4105     0C3D                     __end_of_FSM_Init:
  4106                           
  4107                           	psect	text9
  4108     0CD7                     __ptext9:	
  4109 ;; *************** function _EEP_ReadCupTotal *****************
  4110 ;; Defined at:
  4111 ;;		line 49 in file "eeprom.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;		None
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0, pclath, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;Total ram usage:        4 bytes
  4130 ;; Hardware stack levels used: 1
  4131 ;; Hardware stack levels required when called: 4
  4132 ;; This function calls:
  4133 ;;		_eeprom_read
  4134 ;; This function is called by:
  4135 ;;		_SYS_Init
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139     0CD7                     _EEP_ReadCupTotal:	
  4140                           ;psect for function _EEP_ReadCupTotal
  4141                           
  4142     0CD7                     l3307:	
  4143                           ;incstack = 0
  4144                           ; Regs used in _EEP_ReadCupTotal: [wreg+status,2+status,0+pclath+cstack]
  4145                           
  4146                           
  4147                           ;eeprom.c: 50:     _cupTotal = eeprom_read(0x02) | eeprom_read(0x03) << 8;
  4148     0CD7  3003               	movlw	3
  4149     0CD8  318D  254C  318C   	fcall	_eeprom_read
  4150     0CDB  0020               	movlb	0	; select bank0
  4151     0CDC  00A3               	movwf	??_EEP_ReadCupTotal
  4152     0CDD  01A4               	clrf	??_EEP_ReadCupTotal+1
  4153     0CDE  0823               	movf	??_EEP_ReadCupTotal,w
  4154     0CDF  00A4               	movwf	??_EEP_ReadCupTotal+1
  4155     0CE0  01A3               	clrf	??_EEP_ReadCupTotal
  4156     0CE1  3002               	movlw	2
  4157     0CE2  318D  254C  318C   	fcall	_eeprom_read
  4158     0CE5  0020               	movlb	0	; select bank0
  4159     0CE6  00A6               	movwf	??_EEP_ReadCupTotal+3
  4160     0CE7  0823               	movf	??_EEP_ReadCupTotal,w
  4161     0CE8  0426               	iorwf	??_EEP_ReadCupTotal+3,w
  4162     0CE9  00E6               	movwf	__cupTotal
  4163     0CEA  0824               	movf	??_EEP_ReadCupTotal+1,w
  4164     0CEB  00E7               	movwf	__cupTotal+1
  4165     0CEC                     l430:
  4166     0CEC  0008               	return
  4167     0CED                     __end_of_EEP_ReadCupTotal:
  4168                           
  4169                           	psect	text10
  4170     0DE2                     __ptext10:	
  4171 ;; *************** function _EEP_ReadAutoTime *****************
  4172 ;; Defined at:
  4173 ;;		line 44 in file "eeprom.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, pclath, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;Total ram usage:        4 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 4
  4194 ;; This function calls:
  4195 ;;		_eeprom_read
  4196 ;; This function is called by:
  4197 ;;		_SYS_Init
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201     0DE2                     _EEP_ReadAutoTime:	
  4202                           ;psect for function _EEP_ReadAutoTime
  4203                           
  4204     0DE2                     l3301:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _EEP_ReadAutoTime: [wreg+status,2+status,0+pclath+cstack]
  4207                           
  4208                           
  4209                           ;eeprom.c: 45:     _timeAuto = eeprom_read(0x00) | eeprom_read(0x01) << 8;
  4210     0DE2  3001               	movlw	1
  4211     0DE3  318D  254C  318D   	fcall	_eeprom_read
  4212     0DE6  0020               	movlb	0	; select bank0
  4213     0DE7  00A3               	movwf	??_EEP_ReadAutoTime
  4214     0DE8  01A4               	clrf	??_EEP_ReadAutoTime+1
  4215     0DE9  0823               	movf	??_EEP_ReadAutoTime,w
  4216     0DEA  00A4               	movwf	??_EEP_ReadAutoTime+1
  4217     0DEB  01A3               	clrf	??_EEP_ReadAutoTime
  4218     0DEC  3000               	movlw	0
  4219     0DED  318D  254C  318D   	fcall	_eeprom_read
  4220     0DF0  0020               	movlb	0	; select bank0
  4221     0DF1  00A6               	movwf	??_EEP_ReadAutoTime+3
  4222     0DF2  0823               	movf	??_EEP_ReadAutoTime,w
  4223     0DF3  0426               	iorwf	??_EEP_ReadAutoTime+3,w
  4224     0DF4  00F8               	movwf	__timeAuto
  4225     0DF5  0824               	movf	??_EEP_ReadAutoTime+1,w
  4226     0DF6  00F9               	movwf	__timeAuto+1
  4227     0DF7                     l3303:
  4228                           
  4229                           ;eeprom.c: 46:     if(_timeAuto > 9900) _timeAuto = 9900;
  4230     0DF7  3026               	movlw	38
  4231     0DF8  0279               	subwf	__timeAuto+1,w
  4232     0DF9  30AD               	movlw	173
  4233     0DFA  1903               	skipnz
  4234     0DFB  0278               	subwf	__timeAuto,w
  4235     0DFC  1C03               	skipc
  4236     0DFD  2DFF               	goto	u2941
  4237     0DFE  2E00               	goto	u2940
  4238     0DFF                     u2941:
  4239     0DFF  2E04               	goto	l427
  4240     0E00                     u2940:
  4241     0E00                     l3305:
  4242     0E00  30AC               	movlw	172
  4243     0E01  00F8               	movwf	__timeAuto
  4244     0E02  3026               	movlw	38
  4245     0E03  00F9               	movwf	__timeAuto+1
  4246     0E04                     l427:
  4247     0E04  0008               	return
  4248     0E05                     __end_of_EEP_ReadAutoTime:
  4249                           
  4250                           	psect	text11
  4251     0D4C                     __ptext11:	
  4252 ;; *************** function _eeprom_read *****************
  4253 ;; Defined at:
  4254 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  addr            1    wreg     unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  addr            1    4[COMMON] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      unsigned char 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;Total ram usage:        4 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 3
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_EEP_ReadAutoTime
  4279 ;;		_EEP_ReadCupTotal
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283     0D4C                     _eeprom_read:	
  4284                           ;psect for function _eeprom_read
  4285                           
  4286                           
  4287                           ;incstack = 0
  4288                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4289                           ;eeprom_read@addr stored from wreg
  4290     0D4C  00F4               	movwf	eeprom_read@addr
  4291     0D4D                     l587:	
  4292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 8:  do
  4293                           
  4294     0D4D  0064               	clrwdt	;# 
  4295     0D4E  0023               	movlb	3	; select bank3
  4296     0D4F  1895               	btfsc	21,1	;volsfr
  4297     0D50  2D52               	goto	u2581
  4298     0D51  2D53               	goto	u2580
  4299     0D52                     u2581:
  4300     0D52  2D4D               	goto	l587
  4301     0D53                     u2580:
  4302     0D53                     l3047:
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  4305     0D53  0874               	movf	eeprom_read@addr,w
  4306     0D54  0020               	movlb	0	; select bank0
  4307     0D55  00A0               	movwf	??_eeprom_read
  4308     0D56  01A1               	clrf	??_eeprom_read+1
  4309     0D57  0820               	movf	??_eeprom_read,w
  4310     0D58  0023               	movlb	3	; select bank3
  4311     0D59  0091               	movwf	17	;volatile
  4312     0D5A  0020               	movlb	0	; select bank0
  4313     0D5B  0821               	movf	??_eeprom_read+1,w
  4314     0D5C  0023               	movlb	3	; select bank3
  4315     0D5D  0092               	movwf	18	;volatile
  4316     0D5E  303F               	movlw	63
  4317     0D5F  0020               	movlb	0	; select bank0
  4318     0D60  00A2               	movwf	??_eeprom_read+2
  4319     0D61  0822               	movf	??_eeprom_read+2,w
  4320     0D62  0023               	movlb	3	; select bank3
  4321     0D63  0595               	andwf	21,f	;volsfr
  4322     0D64  1415               	bsf	21,0	;volsfr
  4323     0D65  0813               	movf	19,w	;volatile
  4324     0D66                     l589:
  4325     0D66  0008               	return
  4326     0D67                     __end_of_eeprom_read:
  4327                           
  4328                           	psect	text12
  4329     0C62                     __ptext12:	
  4330 ;; *************** function _BTN_Init *****************
  4331 ;; Defined at:
  4332 ;;		line 17 in file "button.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;Total ram usage:        0 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 3
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_SYS_Init
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360     0C62                     _BTN_Init:	
  4361                           ;psect for function _BTN_Init
  4362                           
  4363     0C62                     l2293:	
  4364                           ;incstack = 0
  4365                           ; Regs used in _BTN_Init: [wreg]
  4366                           
  4367                           
  4368                           ;button.c: 19:     ANSA0 = 0;
  4369     0C62  0023               	movlb	3	; select bank3
  4370     0C63  100C               	bcf	12,0	;volatile
  4371                           
  4372                           ;button.c: 20:     ANSA1 = 0;
  4373     0C64  108C               	bcf	12,1	;volatile
  4374                           
  4375                           ;button.c: 21:     ANSA2 = 0;
  4376     0C65  110C               	bcf	12,2	;volatile
  4377     0C66                     l2295:
  4378                           
  4379                           ;button.c: 22:     TRISA = 0x0F;
  4380     0C66  300F               	movlw	15
  4381     0C67  0021               	movlb	1	; select bank1
  4382     0C68  008C               	movwf	12	;volatile
  4383                           
  4384                           ;button.c: 23:     PORTA = 0xFF;
  4385     0C69  30FF               	movlw	255
  4386     0C6A  0020               	movlb	0	; select bank0
  4387     0C6B  008C               	movwf	12	;volatile
  4388     0C6C                     l27:
  4389     0C6C  0008               	return
  4390     0C6D                     __end_of_BTN_Init:
  4391                           
  4392                           	psect	text13
  4393     004E                     __ptext13:	
  4394 ;; *************** function _FSM_ModeControl *****************
  4395 ;; Defined at:
  4396 ;;		line 15 in file "fsm.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;Total ram usage:        2 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 6
  4417 ;; This function calls:
  4418 ;;		_BTN_IsHeld
  4419 ;;		_BTN_IsPressed
  4420 ;;		_BTN_IsPressed_ms
  4421 ;;		_BTN_IsPressed_s
  4422 ;;		_EEP_SaveAutoTime
  4423 ;;		_EEP_SaveCupTotal
  4424 ;;		_LcdPrintCharS
  4425 ;;		_LcdPrintFloatS
  4426 ;;		_LcdPrintNumS
  4427 ;;		_LcdPrintStringS
  4428 ;;		_MTR_Set
  4429 ;;		___lwdiv
  4430 ;;		___wmul
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436     004E                     _FSM_ModeControl:	
  4437                           ;psect for function _FSM_ModeControl
  4438                           
  4439     004E                     l3345:	
  4440                           ;incstack = 0
  4441                           ; Regs used in _FSM_ModeControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4442                           
  4443                           
  4444                           ;fsm.c: 16:     switch(mode){
  4445     004E  2B26               	goto	l3531
  4446     004F                     l3347:
  4447                           
  4448                           ;fsm.c: 18:             LcdPrintStringS(0, 0, "Vietstar  Coffee");
  4449     004F  0020               	movlb	0	; select bank0
  4450     0050  01A3               	clrf	LcdPrintStringS@y
  4451     0051  3077               	movlw	low (STR_1| (0+32768))
  4452     0052  00A4               	movwf	LcdPrintStringS@string
  4453     0053  3090               	movlw	high (STR_1| (0+32768))
  4454     0054  00A5               	movwf	LcdPrintStringS@string+1
  4455     0055  3000               	movlw	0
  4456     0056  3187  27D6  3180   	fcall	_LcdPrintStringS
  4457                           
  4458                           ;fsm.c: 19:             LcdPrintStringS(1, 0, "    _ MANUAL _  ");
  4459     0059  0020               	movlb	0	; select bank0
  4460     005A  01A3               	clrf	LcdPrintStringS@y
  4461     005B  3033               	movlw	low (STR_2| (0+32768))
  4462     005C  00A4               	movwf	LcdPrintStringS@string
  4463     005D  3090               	movlw	high (STR_2| (0+32768))
  4464     005E  00A5               	movwf	LcdPrintStringS@string+1
  4465     005F  3001               	movlw	1
  4466     0060  3187  27D6  3180   	fcall	_LcdPrintStringS
  4467     0063                     l3349:
  4468                           
  4469                           ;fsm.c: 22:             MTR_Set(0);
  4470     0063  3000               	movlw	0
  4471     0064  318C  2457  3180   	fcall	_MTR_Set
  4472     0067                     l3351:
  4473                           
  4474                           ;fsm.c: 23:             mode = MANUAL;
  4475     0067  0020               	movlb	0	; select bank0
  4476     0068  01E9               	clrf	_mode
  4477     0069  0AE9               	incf	_mode,f
  4478                           
  4479                           ;fsm.c: 24:             break;
  4480     006A  2B4A               	goto	l156
  4481     006B                     l3353:
  4482                           
  4483                           ;fsm.c: 26:             if(BTN_IsHeld(3)) MTR_Set(1);
  4484     006B  3003               	movlw	3
  4485     006C  318D  2504  3180   	fcall	_BTN_IsHeld
  4486     006F  3A00               	xorlw	0
  4487     0070  1903               	skipnz
  4488     0071  2873               	goto	u2991
  4489     0072  2874               	goto	u2990
  4490     0073                     u2991:
  4491     0073  2879               	goto	l3357
  4492     0074                     u2990:
  4493     0074                     l3355:
  4494     0074  3001               	movlw	1
  4495     0075  318C  2457  3180   	fcall	_MTR_Set
  4496     0078  287D               	goto	l3359
  4497     0079                     l3357:
  4498     0079  3000               	movlw	0
  4499     007A  318C  2457  3180   	fcall	_MTR_Set
  4500     007D                     l3359:
  4501                           
  4502                           ;fsm.c: 29:             if(BTN_IsPressed(1)){
  4503     007D  3001               	movlw	1
  4504     007E  318C  24C1  3180   	fcall	_BTN_IsPressed
  4505     0081  3A00               	xorlw	0
  4506     0082  1903               	skipnz
  4507     0083  2885               	goto	u3001
  4508     0084  2886               	goto	u3000
  4509     0085                     u3001:
  4510     0085  2B4A               	goto	l156
  4511     0086                     u3000:
  4512     0086                     l3361:
  4513                           
  4514                           ;fsm.c: 30:                 LcdPrintStringS(0, 0, "AUTO :         s");
  4515     0086  0020               	movlb	0	; select bank0
  4516     0087  01A3               	clrf	LcdPrintStringS@y
  4517     0088  3099               	movlw	low (STR_3| (0+32768))
  4518     0089  00A4               	movwf	LcdPrintStringS@string
  4519     008A  3090               	movlw	high (STR_3| (0+32768))
  4520     008B  00A5               	movwf	LcdPrintStringS@string+1
  4521     008C  3000               	movlw	0
  4522     008D  3187  27D6  3180   	fcall	_LcdPrintStringS
  4523                           
  4524                           ;fsm.c: 31:                 LcdPrintStringS(1, 0, "CUP  :          ");
  4525     0090  0020               	movlb	0	; select bank0
  4526     0091  01A3               	clrf	LcdPrintStringS@y
  4527     0092  3000               	movlw	low (STR_4| (0+32768))
  4528     0093  00A4               	movwf	LcdPrintStringS@string
  4529     0094  3090               	movlw	high (STR_4| (0+32768))
  4530     0095  00A5               	movwf	LcdPrintStringS@string+1
  4531     0096  3001               	movlw	1
  4532     0097  3187  27D6  3180   	fcall	_LcdPrintStringS
  4533     009A                     l3363:
  4534                           
  4535                           ;fsm.c: 34:                 LcdPrintFloatS(0, 8, _timeAuto);
  4536     009A  3008               	movlw	8
  4537     009B  0020               	movlb	0	; select bank0
  4538     009C  00AC               	movwf	LcdPrintFloatS@y
  4539     009D  0879               	movf	__timeAuto+1,w
  4540     009E  00AE               	movwf	LcdPrintFloatS@num+1
  4541     009F  0878               	movf	__timeAuto,w
  4542     00A0  00AD               	movwf	LcdPrintFloatS@num
  4543     00A1  3000               	movlw	0
  4544     00A2  3185  2531  3180   	fcall	_LcdPrintFloatS
  4545     00A5                     l3365:
  4546                           
  4547                           ;fsm.c: 35:                 LcdPrintNumS(1, 8, _cupTotal);
  4548     00A5  3008               	movlw	8
  4549     00A6  0020               	movlb	0	; select bank0
  4550     00A7  00C2               	movwf	LcdPrintNumS@y
  4551     00A8  0867               	movf	__cupTotal+1,w
  4552     00A9  00C4               	movwf	LcdPrintNumS@num+1
  4553     00AA  0866               	movf	__cupTotal,w
  4554     00AB  00C3               	movwf	LcdPrintNumS@num
  4555     00AC  3001               	movlw	1
  4556     00AD  3183  23FB  3180   	fcall	_LcdPrintNumS
  4557     00B0                     l3367:
  4558                           
  4559                           ;fsm.c: 36:                 MTR_Set(0);
  4560     00B0  3000               	movlw	0
  4561     00B1  318C  2457  3180   	fcall	_MTR_Set
  4562     00B4                     l3369:
  4563                           
  4564                           ;fsm.c: 38:                 mode = AUTO;
  4565     00B4  3002               	movlw	2
  4566     00B5  0020               	movlb	0	; select bank0
  4567     00B6  00E9               	movwf	_mode
  4568     00B7  2B4A               	goto	l156
  4569     00B8                     l103:	
  4570                           ;fsm.c: 39:             }
  4571                           
  4572                           
  4573                           ;fsm.c: 40:             break;
  4574     00B8  2B4A               	goto	l156
  4575     00B9                     l3371:
  4576                           
  4577                           ;fsm.c: 42:             if(BTN_IsHeld(3)) {
  4578     00B9  3003               	movlw	3
  4579     00BA  318D  2504  3180   	fcall	_BTN_IsHeld
  4580     00BD  3A00               	xorlw	0
  4581     00BE  1903               	skipnz
  4582     00BF  28C1               	goto	u3011
  4583     00C0  28C2               	goto	u3010
  4584     00C1                     u3011:
  4585     00C1  28E3               	goto	l3381
  4586     00C2                     u3010:
  4587     00C2                     l3373:
  4588                           
  4589                           ;fsm.c: 43:                 LcdPrintStringS(0, 0, " |            | ");
  4590     00C2  0020               	movlb	0	; select bank0
  4591     00C3  01A3               	clrf	LcdPrintStringS@y
  4592     00C4  3044               	movlw	low (STR_5| (0+32768))
  4593     00C5  00A4               	movwf	LcdPrintStringS@string
  4594     00C6  3090               	movlw	high (STR_5| (0+32768))
  4595     00C7  00A5               	movwf	LcdPrintStringS@string+1
  4596     00C8  3000               	movlw	0
  4597     00C9  3187  27D6  3180   	fcall	_LcdPrintStringS
  4598                           
  4599                           ;fsm.c: 44:                 LcdPrintStringS(1, 0, "     [STOP]     ");
  4600     00CC  0020               	movlb	0	; select bank0
  4601     00CD  01A3               	clrf	LcdPrintStringS@y
  4602     00CE  3011               	movlw	low (STR_6| (0+32768))
  4603     00CF  00A4               	movwf	LcdPrintStringS@string
  4604     00D0  3090               	movlw	high (STR_6| (0+32768))
  4605     00D1  00A5               	movwf	LcdPrintStringS@string+1
  4606     00D2  3001               	movlw	1
  4607     00D3  3187  27D6  3180   	fcall	_LcdPrintStringS
  4608     00D6                     l3375:
  4609                           
  4610                           ;fsm.c: 47:                 _countAuto = _timeAuto;
  4611     00D6  0879               	movf	__timeAuto+1,w
  4612     00D7  0020               	movlb	0	; select bank0
  4613     00D8  00E5               	movwf	__countAuto+1
  4614     00D9  0878               	movf	__timeAuto,w
  4615     00DA  00E4               	movwf	__countAuto
  4616     00DB                     l3377:
  4617                           
  4618                           ;fsm.c: 48:                 MTR_Set(1);
  4619     00DB  3001               	movlw	1
  4620     00DC  318C  2457  3180   	fcall	_MTR_Set
  4621     00DF                     l3379:
  4622                           
  4623                           ;fsm.c: 50:                 mode = START_AUTO;
  4624     00DF  3006               	movlw	6
  4625     00E0  0020               	movlb	0	; select bank0
  4626     00E1  00E9               	movwf	_mode
  4627                           
  4628                           ;fsm.c: 51:             }
  4629     00E2  2B4A               	goto	l156
  4630     00E3                     l3381:
  4631     00E3  3001               	movlw	1
  4632     00E4  318C  24C1  3180   	fcall	_BTN_IsPressed
  4633     00E7  3A00               	xorlw	0
  4634     00E8  1903               	skipnz
  4635     00E9  28EB               	goto	u3021
  4636     00EA  28EC               	goto	u3020
  4637     00EB                     u3021:
  4638     00EB  2905               	goto	l3389
  4639     00EC                     u3020:
  4640     00EC                     l3383:
  4641                           
  4642                           ;fsm.c: 53:                 LcdPrintStringS(0, 0, "Vietstar  Coffee");
  4643     00EC  0020               	movlb	0	; select bank0
  4644     00ED  01A3               	clrf	LcdPrintStringS@y
  4645     00EE  3077               	movlw	low (STR_1| (0+32768))
  4646     00EF  00A4               	movwf	LcdPrintStringS@string
  4647     00F0  3090               	movlw	high (STR_1| (0+32768))
  4648     00F1  00A5               	movwf	LcdPrintStringS@string+1
  4649     00F2  3000               	movlw	0
  4650     00F3  3187  27D6  3180   	fcall	_LcdPrintStringS
  4651                           
  4652                           ;fsm.c: 54:                 LcdPrintStringS(1, 0, "    _ MANUAL _  ");
  4653     00F6  0020               	movlb	0	; select bank0
  4654     00F7  01A3               	clrf	LcdPrintStringS@y
  4655     00F8  3033               	movlw	low (STR_2| (0+32768))
  4656     00F9  00A4               	movwf	LcdPrintStringS@string
  4657     00FA  3090               	movlw	high (STR_2| (0+32768))
  4658     00FB  00A5               	movwf	LcdPrintStringS@string+1
  4659     00FC  3001               	movlw	1
  4660     00FD  3187  27D6  3180   	fcall	_LcdPrintStringS
  4661     0100                     l3385:
  4662                           
  4663                           ;fsm.c: 57:                 MTR_Set(0);
  4664     0100  3000               	movlw	0
  4665     0101  318C  2457  3180   	fcall	_MTR_Set
  4666     0104  2867               	goto	l3351
  4667     0105                     l3389:
  4668     0105  3001               	movlw	1
  4669     0106  318C  247A  3180   	fcall	_BTN_IsPressed_s
  4670     0109  3A00               	xorlw	0
  4671     010A  1903               	skipnz
  4672     010B  290D               	goto	u3031
  4673     010C  290E               	goto	u3030
  4674     010D                     u3031:
  4675     010D  2931               	goto	l3397
  4676     010E                     u3030:
  4677     010E                     l3391:
  4678                           
  4679                           ;fsm.c: 61:                 LcdPrintStringS(0, 0, "               s");
  4680     010E  0020               	movlb	0	; select bank0
  4681     010F  01A3               	clrf	LcdPrintStringS@y
  4682     0110  3088               	movlw	low (STR_9| (0+32768))
  4683     0111  00A4               	movwf	LcdPrintStringS@string
  4684     0112  3090               	movlw	high (STR_9| (0+32768))
  4685     0113  00A5               	movwf	LcdPrintStringS@string+1
  4686     0114  3000               	movlw	0
  4687     0115  3187  27D6  3180   	fcall	_LcdPrintStringS
  4688                           
  4689                           ;fsm.c: 62:                 LcdPrintStringS(1, 0, "[+]   [OK]   [-]");
  4690     0118  0020               	movlb	0	; select bank0
  4691     0119  01A3               	clrf	LcdPrintStringS@y
  4692     011A  3055               	movlw	low (STR_10| (0+32768))
  4693     011B  00A4               	movwf	LcdPrintStringS@string
  4694     011C  3090               	movlw	high (STR_10| (0+32768))
  4695     011D  00A5               	movwf	LcdPrintStringS@string+1
  4696     011E  3001               	movlw	1
  4697     011F  3187  27D6  3180   	fcall	_LcdPrintStringS
  4698     0122                     l3393:
  4699                           
  4700                           ;fsm.c: 65:                 LcdPrintFloatS(0, 8, _timeAuto);
  4701     0122  3008               	movlw	8
  4702     0123  0020               	movlb	0	; select bank0
  4703     0124  00AC               	movwf	LcdPrintFloatS@y
  4704     0125  0879               	movf	__timeAuto+1,w
  4705     0126  00AE               	movwf	LcdPrintFloatS@num+1
  4706     0127  0878               	movf	__timeAuto,w
  4707     0128  00AD               	movwf	LcdPrintFloatS@num
  4708     0129  3000               	movlw	0
  4709     012A  3185  2531  3180   	fcall	_LcdPrintFloatS
  4710     012D                     l3395:
  4711                           
  4712                           ;fsm.c: 67:                 mode = ADJUST_TIME;
  4713     012D  3003               	movlw	3
  4714     012E  0020               	movlb	0	; select bank0
  4715     012F  00E9               	movwf	_mode
  4716                           
  4717                           ;fsm.c: 68:             }
  4718     0130  2B4A               	goto	l156
  4719     0131                     l3397:
  4720     0131  3002               	movlw	2
  4721     0132  318C  247A  3180   	fcall	_BTN_IsPressed_s
  4722     0135  3A00               	xorlw	0
  4723     0136  1903               	skipnz
  4724     0137  2939               	goto	u3041
  4725     0138  293A               	goto	u3040
  4726     0139                     u3041:
  4727     0139  28B8               	goto	l103
  4728     013A                     u3040:
  4729     013A                     l3399:
  4730     013A  3000               	movlw	0
  4731     013B  318C  247A  3180   	fcall	_BTN_IsPressed_s
  4732     013E  3A00               	xorlw	0
  4733     013F  1903               	skipnz
  4734     0140  2942               	goto	u3051
  4735     0141  2943               	goto	u3050
  4736     0142                     u3051:
  4737     0142  28B8               	goto	l103
  4738     0143                     u3050:
  4739     0143                     l3401:
  4740                           
  4741                           ;fsm.c: 70:                 LcdPrintStringS(0, 0, " Delete All ?   ");
  4742     0143  0020               	movlb	0	; select bank0
  4743     0144  01A3               	clrf	LcdPrintStringS@y
  4744     0145  3022               	movlw	low (STR_11| (0+32768))
  4745     0146  00A4               	movwf	LcdPrintStringS@string
  4746     0147  3090               	movlw	high (STR_11| (0+32768))
  4747     0148  00A5               	movwf	LcdPrintStringS@string+1
  4748     0149  3000               	movlw	0
  4749     014A  3187  27D6  3180   	fcall	_LcdPrintStringS
  4750                           
  4751                           ;fsm.c: 71:                 LcdPrintStringS(1, 0, "[N]   [OK]   [N]");
  4752     014D  0020               	movlb	0	; select bank0
  4753     014E  01A3               	clrf	LcdPrintStringS@y
  4754     014F  3066               	movlw	low (STR_12| (0+32768))
  4755     0150  00A4               	movwf	LcdPrintStringS@string
  4756     0151  3090               	movlw	high (STR_12| (0+32768))
  4757     0152  00A5               	movwf	LcdPrintStringS@string+1
  4758     0153  3001               	movlw	1
  4759     0154  3187  27D6  3180   	fcall	_LcdPrintStringS
  4760     0157                     l3403:
  4761                           
  4762                           ;fsm.c: 74:                 mode = DELETE_ALL;
  4763     0157  3007               	movlw	7
  4764     0158  0020               	movlb	0	; select bank0
  4765     0159  00E9               	movwf	_mode
  4766     015A  2B4A               	goto	l156
  4767     015B                     l3405:
  4768                           
  4769                           ;fsm.c: 78:             if(BTN_IsHeld(0)) {
  4770     015B  3000               	movlw	0
  4771     015C  318D  2504  3180   	fcall	_BTN_IsHeld
  4772     015F  3A00               	xorlw	0
  4773     0160  1903               	skipnz
  4774     0161  2963               	goto	u3061
  4775     0162  2964               	goto	u3060
  4776     0163                     u3061:
  4777     0163  2969               	goto	l3411
  4778     0164                     u3060:
  4779     0164                     l3407:
  4780                           
  4781                           ;fsm.c: 79:                 flagPressAdjust = 0;
  4782     0164  01F6               	clrf	_flagPressAdjust
  4783     0165                     l3409:
  4784                           
  4785                           ;fsm.c: 80:                 mode = INCREASE;
  4786     0165  3004               	movlw	4
  4787     0166  0020               	movlb	0	; select bank0
  4788     0167  00E9               	movwf	_mode
  4789                           
  4790                           ;fsm.c: 81:             }
  4791     0168  2B4A               	goto	l156
  4792     0169                     l3411:
  4793     0169  3002               	movlw	2
  4794     016A  318D  2504  3180   	fcall	_BTN_IsHeld
  4795     016D  3A00               	xorlw	0
  4796     016E  1903               	skipnz
  4797     016F  2971               	goto	u3071
  4798     0170  2972               	goto	u3070
  4799     0171                     u3071:
  4800     0171  2977               	goto	l3417
  4801     0172                     u3070:
  4802     0172                     l3413:
  4803                           
  4804                           ;fsm.c: 83:                 flagPressAdjust = 0;
  4805     0172  01F6               	clrf	_flagPressAdjust
  4806     0173                     l3415:
  4807                           
  4808                           ;fsm.c: 84:                 mode = DECREASE;
  4809     0173  3005               	movlw	5
  4810     0174  0020               	movlb	0	; select bank0
  4811     0175  00E9               	movwf	_mode
  4812                           
  4813                           ;fsm.c: 85:             }
  4814     0176  2B4A               	goto	l156
  4815     0177                     l3417:
  4816     0177  3001               	movlw	1
  4817     0178  318C  24C1  3180   	fcall	_BTN_IsPressed
  4818     017B  3A00               	xorlw	0
  4819     017C  1903               	skipnz
  4820     017D  297F               	goto	u3081
  4821     017E  2980               	goto	u3080
  4822     017F                     u3081:
  4823     017F  2B4A               	goto	l156
  4824     0180                     u3080:
  4825     0180                     l3419:
  4826                           
  4827                           ;fsm.c: 89:                 EEP_SaveAutoTime();
  4828     0180  318C  246D  3180   	fcall	_EEP_SaveAutoTime
  4829     0183                     l3421:
  4830                           
  4831                           ;fsm.c: 91:                 LcdPrintStringS(0, 0, "AUTO :         s");
  4832     0183  0020               	movlb	0	; select bank0
  4833     0184  01A3               	clrf	LcdPrintStringS@y
  4834     0185  3099               	movlw	low (STR_3| (0+32768))
  4835     0186  00A4               	movwf	LcdPrintStringS@string
  4836     0187  3090               	movlw	high (STR_3| (0+32768))
  4837     0188  00A5               	movwf	LcdPrintStringS@string+1
  4838     0189  3000               	movlw	0
  4839     018A  3187  27D6  3180   	fcall	_LcdPrintStringS
  4840     018D                     l3423:
  4841                           
  4842                           ;fsm.c: 92:                 LcdPrintStringS(1, 0, "CUP  :          ");
  4843     018D  0020               	movlb	0	; select bank0
  4844     018E  01A3               	clrf	LcdPrintStringS@y
  4845     018F  3000               	movlw	low (STR_4| (0+32768))
  4846     0190  00A4               	movwf	LcdPrintStringS@string
  4847     0191  3090               	movlw	high (STR_4| (0+32768))
  4848     0192  00A5               	movwf	LcdPrintStringS@string+1
  4849     0193  3001               	movlw	1
  4850     0194  3187  27D6  3180   	fcall	_LcdPrintStringS
  4851     0197                     l3425:
  4852                           
  4853                           ;fsm.c: 95:                 LcdPrintFloatS(0, 8, _timeAuto);
  4854     0197  3008               	movlw	8
  4855     0198  0020               	movlb	0	; select bank0
  4856     0199  00AC               	movwf	LcdPrintFloatS@y
  4857     019A  0879               	movf	__timeAuto+1,w
  4858     019B  00AE               	movwf	LcdPrintFloatS@num+1
  4859     019C  0878               	movf	__timeAuto,w
  4860     019D  00AD               	movwf	LcdPrintFloatS@num
  4861     019E  3000               	movlw	0
  4862     019F  3185  2531  3180   	fcall	_LcdPrintFloatS
  4863     01A2                     l3427:
  4864                           
  4865                           ;fsm.c: 96:                 LcdPrintNumS(1, 8, _cupTotal);
  4866     01A2  3008               	movlw	8
  4867     01A3  0020               	movlb	0	; select bank0
  4868     01A4  00C2               	movwf	LcdPrintNumS@y
  4869     01A5  0867               	movf	__cupTotal+1,w
  4870     01A6  00C4               	movwf	LcdPrintNumS@num+1
  4871     01A7  0866               	movf	__cupTotal,w
  4872     01A8  00C3               	movwf	LcdPrintNumS@num
  4873     01A9  3001               	movlw	1
  4874     01AA  3183  23FB  3180   	fcall	_LcdPrintNumS
  4875                           
  4876                           ;fsm.c: 97:                 MTR_Set(0);
  4877     01AD  3000               	movlw	0
  4878     01AE  318C  2457  3180   	fcall	_MTR_Set
  4879     01B1  28B4               	goto	l3369
  4880     01B2                     l3431:
  4881                           
  4882                           ;fsm.c: 103:             if(BTN_IsPressed_ms(0, 500) && _counterDelay <= 0){
  4883     01B2  30F4               	movlw	244
  4884     01B3  0020               	movlb	0	; select bank0
  4885     01B4  00AC               	movwf	BTN_IsPressed_ms@milisec
  4886     01B5  3001               	movlw	1
  4887     01B6  00AD               	movwf	BTN_IsPressed_ms@milisec+1
  4888     01B7  3000               	movlw	0
  4889     01B8  318E  26A0  3180   	fcall	_BTN_IsPressed_ms
  4890     01BB  3A00               	xorlw	0
  4891     01BC  1903               	skipnz
  4892     01BD  29BF               	goto	u3091
  4893     01BE  29C0               	goto	u3090
  4894     01BF                     u3091:
  4895     01BF  29F0               	goto	l3447
  4896     01C0                     u3090:
  4897     01C0                     l3433:
  4898     01C0  0877               	movf	__counterDelay,w
  4899     01C1  1D03               	btfss	3,2
  4900     01C2  29C4               	goto	u3101
  4901     01C3  29C5               	goto	u3100
  4902     01C4                     u3101:
  4903     01C4  29F0               	goto	l3447
  4904     01C5                     u3100:
  4905     01C5                     l3435:
  4906                           
  4907                           ;fsm.c: 105:                 _counterDelay = 6;
  4908     01C5  3006               	movlw	6
  4909     01C6  00F7               	movwf	__counterDelay
  4910     01C7                     l3437:
  4911                           
  4912                           ;fsm.c: 106:                 _timeAuto = _timeAuto + 100 > 9900 ? 9900 : _timeAuto + 100
      +                          ;
  4913     01C7  0878               	movf	__timeAuto,w
  4914     01C8  3E64               	addlw	100
  4915     01C9  0021               	movlb	1	; select bank1
  4916     01CA  00CC               	movwf	??_FSM_ModeControl^(0+128)
  4917     01CB  3000               	movlw	0
  4918     01CC  3D79               	addwfc	__timeAuto+1,w
  4919     01CD  00CD               	movwf	(??_FSM_ModeControl+1)^(0+128)
  4920     01CE  3026               	movlw	38
  4921     01CF  024D               	subwf	(??_FSM_ModeControl+1)^(0+128),w
  4922     01D0  30AD               	movlw	173
  4923     01D1  1903               	skipnz
  4924     01D2  024C               	subwf	??_FSM_ModeControl^(0+128),w
  4925     01D3  1803               	skipnc
  4926     01D4  29D6               	goto	u3111
  4927     01D5  29D7               	goto	u3110
  4928     01D6                     u3111:
  4929     01D6  29DE               	goto	l3441
  4930     01D7                     u3110:
  4931     01D7                     l3439:
  4932     01D7  0878               	movf	__timeAuto,w
  4933     01D8  3E64               	addlw	100
  4934     01D9  00F8               	movwf	__timeAuto
  4935     01DA  3000               	movlw	0
  4936     01DB  3D79               	addwfc	__timeAuto+1,w
  4937     01DC  00F9               	movwf	__timeAuto+1
  4938     01DD  29E2               	goto	l3443
  4939     01DE                     l3441:
  4940     01DE  30AC               	movlw	172
  4941     01DF  00F8               	movwf	__timeAuto
  4942     01E0  3026               	movlw	38
  4943     01E1  00F9               	movwf	__timeAuto+1
  4944     01E2                     l3443:
  4945                           
  4946                           ;fsm.c: 107:                 LcdPrintFloatS(0, 8, _timeAuto);
  4947     01E2  3008               	movlw	8
  4948     01E3  0020               	movlb	0	; select bank0
  4949     01E4  00AC               	movwf	LcdPrintFloatS@y
  4950     01E5  0879               	movf	__timeAuto+1,w
  4951     01E6  00AE               	movwf	LcdPrintFloatS@num+1
  4952     01E7  0878               	movf	__timeAuto,w
  4953     01E8  00AD               	movwf	LcdPrintFloatS@num
  4954     01E9  3000               	movlw	0
  4955     01EA  3185  2531  3180   	fcall	_LcdPrintFloatS
  4956     01ED                     l3445:
  4957                           
  4958                           ;fsm.c: 108:                 flagPressAdjust = 1;
  4959     01ED  01F6               	clrf	_flagPressAdjust
  4960     01EE  0AF6               	incf	_flagPressAdjust,f
  4961                           
  4962                           ;fsm.c: 109:             }
  4963     01EF  2B4A               	goto	l156
  4964     01F0                     l3447:
  4965     01F0  3000               	movlw	0
  4966     01F1  318D  2504  3180   	fcall	_BTN_IsHeld
  4967     01F4  3A00               	xorlw	0
  4968     01F5  1D03               	skipz
  4969     01F6  29F8               	goto	u3121
  4970     01F7  29F9               	goto	u3120
  4971     01F8                     u3121:
  4972     01F8  2B4A               	goto	l156
  4973     01F9                     u3120:
  4974     01F9                     l3449:
  4975                           
  4976                           ;fsm.c: 111:                 if(flagPressAdjust == 0){
  4977     01F9  0876               	movf	_flagPressAdjust,w
  4978     01FA  1D03               	btfss	3,2
  4979     01FB  29FD               	goto	u3131
  4980     01FC  29FE               	goto	u3130
  4981     01FD                     u3131:
  4982     01FD  2A19               	goto	l3457
  4983     01FE                     u3130:
  4984     01FE                     l3451:
  4985                           
  4986                           ;fsm.c: 112:                 _timeAuto = _timeAuto + 10 > 9900 ? 9900 : _timeAuto + 10;
  4987     01FE  0878               	movf	__timeAuto,w
  4988     01FF  3E0A               	addlw	10
  4989     0200  0021               	movlb	1	; select bank1
  4990     0201  00CC               	movwf	??_FSM_ModeControl^(0+128)
  4991     0202  3000               	movlw	0
  4992     0203  3D79               	addwfc	__timeAuto+1,w
  4993     0204  00CD               	movwf	(??_FSM_ModeControl+1)^(0+128)
  4994     0205  3026               	movlw	38
  4995     0206  024D               	subwf	(??_FSM_ModeControl+1)^(0+128),w
  4996     0207  30AD               	movlw	173
  4997     0208  1903               	skipnz
  4998     0209  024C               	subwf	??_FSM_ModeControl^(0+128),w
  4999     020A  1803               	skipnc
  5000     020B  2A0D               	goto	u3141
  5001     020C  2A0E               	goto	u3140
  5002     020D                     u3141:
  5003     020D  2A15               	goto	l3455
  5004     020E                     u3140:
  5005     020E                     l3453:
  5006     020E  0878               	movf	__timeAuto,w
  5007     020F  3E0A               	addlw	10
  5008     0210  00F8               	movwf	__timeAuto
  5009     0211  3000               	movlw	0
  5010     0212  3D79               	addwfc	__timeAuto+1,w
  5011     0213  00F9               	movwf	__timeAuto+1
  5012     0214  2A19               	goto	l3457
  5013     0215                     l3455:
  5014     0215  30AC               	movlw	172
  5015     0216  00F8               	movwf	__timeAuto
  5016     0217  3026               	movlw	38
  5017     0218  00F9               	movwf	__timeAuto+1
  5018     0219                     l3457:
  5019                           
  5020                           ;fsm.c: 114:                 LcdPrintFloatS(0, 8, _timeAuto);
  5021     0219  3008               	movlw	8
  5022     021A  0020               	movlb	0	; select bank0
  5023     021B  00AC               	movwf	LcdPrintFloatS@y
  5024     021C  0879               	movf	__timeAuto+1,w
  5025     021D  00AE               	movwf	LcdPrintFloatS@num+1
  5026     021E  0878               	movf	__timeAuto,w
  5027     021F  00AD               	movwf	LcdPrintFloatS@num
  5028     0220  3000               	movlw	0
  5029     0221  3185  2531  3180   	fcall	_LcdPrintFloatS
  5030     0224  292D               	goto	l3395
  5031     0225                     l3461:
  5032                           
  5033                           ;fsm.c: 119:             if(BTN_IsPressed_ms(2, 500) && _counterDelay <= 0){
  5034     0225  30F4               	movlw	244
  5035     0226  0020               	movlb	0	; select bank0
  5036     0227  00AC               	movwf	BTN_IsPressed_ms@milisec
  5037     0228  3001               	movlw	1
  5038     0229  00AD               	movwf	BTN_IsPressed_ms@milisec+1
  5039     022A  3002               	movlw	2
  5040     022B  318E  26A0  3180   	fcall	_BTN_IsPressed_ms
  5041     022E  3A00               	xorlw	0
  5042     022F  1903               	skipnz
  5043     0230  2A32               	goto	u3151
  5044     0231  2A33               	goto	u3150
  5045     0232                     u3151:
  5046     0232  2A58               	goto	l3475
  5047     0233                     u3150:
  5048     0233                     l3463:
  5049     0233  0877               	movf	__counterDelay,w
  5050     0234  1D03               	btfss	3,2
  5051     0235  2A37               	goto	u3161
  5052     0236  2A38               	goto	u3160
  5053     0237                     u3161:
  5054     0237  2A58               	goto	l3475
  5055     0238                     u3160:
  5056     0238                     l3465:
  5057                           
  5058                           ;fsm.c: 121:                 _counterDelay = 6;
  5059     0238  3006               	movlw	6
  5060     0239  00F7               	movwf	__counterDelay
  5061                           
  5062                           ;fsm.c: 122:                 _timeAuto = _timeAuto >= 100 ? _timeAuto - 100 : 0;
  5063     023A  3000               	movlw	0
  5064     023B  0279               	subwf	__timeAuto+1,w
  5065     023C  3064               	movlw	100
  5066     023D  1903               	skipnz
  5067     023E  0278               	subwf	__timeAuto,w
  5068     023F  1803               	skipnc
  5069     0240  2A42               	goto	u3171
  5070     0241  2A43               	goto	u3170
  5071     0242                     u3171:
  5072     0242  2A46               	goto	l3469
  5073     0243                     u3170:
  5074     0243                     l3467:
  5075     0243  01F8               	clrf	__timeAuto
  5076     0244  01F9               	clrf	__timeAuto+1
  5077     0245  2A4C               	goto	l3471
  5078     0246                     l3469:
  5079     0246  0878               	movf	__timeAuto,w
  5080     0247  3E9C               	addlw	156
  5081     0248  00F8               	movwf	__timeAuto
  5082     0249  30FF               	movlw	255
  5083     024A  3D79               	addwfc	__timeAuto+1,w
  5084     024B  00F9               	movwf	__timeAuto+1
  5085     024C                     l3471:
  5086                           
  5087                           ;fsm.c: 123:                 LcdPrintFloatS(0, 8, _timeAuto);
  5088     024C  3008               	movlw	8
  5089     024D  0020               	movlb	0	; select bank0
  5090     024E  00AC               	movwf	LcdPrintFloatS@y
  5091     024F  0879               	movf	__timeAuto+1,w
  5092     0250  00AE               	movwf	LcdPrintFloatS@num+1
  5093     0251  0878               	movf	__timeAuto,w
  5094     0252  00AD               	movwf	LcdPrintFloatS@num
  5095     0253  3000               	movlw	0
  5096     0254  3185  2531  3180   	fcall	_LcdPrintFloatS
  5097     0257  29ED               	goto	l3445
  5098     0258                     l3475:
  5099     0258  3002               	movlw	2
  5100     0259  318D  2504  3180   	fcall	_BTN_IsHeld
  5101     025C  3A00               	xorlw	0
  5102     025D  1D03               	skipz
  5103     025E  2A60               	goto	u3181
  5104     025F  2A61               	goto	u3180
  5105     0260                     u3181:
  5106     0260  2B4A               	goto	l156
  5107     0261                     u3180:
  5108     0261                     l3477:
  5109                           
  5110                           ;fsm.c: 127:                 if(flagPressAdjust == 0){
  5111     0261  0876               	movf	_flagPressAdjust,w
  5112     0262  1D03               	btfss	3,2
  5113     0263  2A65               	goto	u3191
  5114     0264  2A66               	goto	u3190
  5115     0265                     u3191:
  5116     0265  2A78               	goto	l3485
  5117     0266                     u3190:
  5118     0266                     l3479:
  5119                           
  5120                           ;fsm.c: 128:                     _timeAuto = _timeAuto >= 10 ? _timeAuto - 10 : 0;
  5121     0266  3000               	movlw	0
  5122     0267  0279               	subwf	__timeAuto+1,w
  5123     0268  300A               	movlw	10
  5124     0269  1903               	skipnz
  5125     026A  0278               	subwf	__timeAuto,w
  5126     026B  1803               	skipnc
  5127     026C  2A6E               	goto	u3201
  5128     026D  2A6F               	goto	u3200
  5129     026E                     u3201:
  5130     026E  2A72               	goto	l3483
  5131     026F                     u3200:
  5132     026F                     l3481:
  5133     026F  01F8               	clrf	__timeAuto
  5134     0270  01F9               	clrf	__timeAuto+1
  5135     0271  2A78               	goto	l3485
  5136     0272                     l3483:
  5137     0272  0878               	movf	__timeAuto,w
  5138     0273  3EF6               	addlw	246
  5139     0274  00F8               	movwf	__timeAuto
  5140     0275  30FF               	movlw	255
  5141     0276  3D79               	addwfc	__timeAuto+1,w
  5142     0277  00F9               	movwf	__timeAuto+1
  5143     0278                     l3485:
  5144                           
  5145                           ;fsm.c: 130:                 LcdPrintFloatS(0, 8, _timeAuto);
  5146     0278  3008               	movlw	8
  5147     0279  0020               	movlb	0	; select bank0
  5148     027A  00AC               	movwf	LcdPrintFloatS@y
  5149     027B  0879               	movf	__timeAuto+1,w
  5150     027C  00AE               	movwf	LcdPrintFloatS@num+1
  5151     027D  0878               	movf	__timeAuto,w
  5152     027E  00AD               	movwf	LcdPrintFloatS@num
  5153     027F  3000               	movlw	0
  5154     0280  3185  2531  3180   	fcall	_LcdPrintFloatS
  5155     0283  292D               	goto	l3395
  5156     0284                     l3489:
  5157                           
  5158                           ;fsm.c: 136:             index_lcd = (_timeAuto - _countAuto) * 12 / _timeAuto + 2;
  5159     0284  0879               	movf	__timeAuto+1,w
  5160     0285  0020               	movlb	0	; select bank0
  5161     0286  00A5               	movwf	___lwdiv@divisor+1
  5162     0287  0878               	movf	__timeAuto,w
  5163     0288  00A4               	movwf	___lwdiv@divisor
  5164     0289  0864               	movf	__countAuto,w
  5165     028A  0278               	subwf	__timeAuto,w
  5166     028B  00A0               	movwf	___wmul@multiplier
  5167     028C  0865               	movf	__countAuto+1,w
  5168     028D  3B79               	subwfb	__timeAuto+1,w
  5169     028E  00A1               	movwf	___wmul@multiplier+1
  5170     028F  300C               	movlw	12
  5171     0290  00A2               	movwf	___wmul@multiplicand
  5172     0291  3000               	movlw	0
  5173     0292  00A3               	movwf	___wmul@multiplicand+1
  5174     0293  318D  25A1  3180   	fcall	___wmul
  5175     0296  0020               	movlb	0	; select bank0
  5176     0297  0821               	movf	?___wmul+1,w
  5177     0298  00A7               	movwf	___lwdiv@dividend+1
  5178     0299  0820               	movf	?___wmul,w
  5179     029A  00A6               	movwf	___lwdiv@dividend
  5180     029B  3187  2799  3180   	fcall	___lwdiv
  5181     029E  0020               	movlb	0	; select bank0
  5182     029F  0824               	movf	?___lwdiv,w
  5183     02A0  3E02               	addlw	2
  5184     02A1  00EA               	movwf	_index_lcd
  5185     02A2                     l3491:
  5186                           
  5187                           ;fsm.c: 137:             LcdPrintCharS(0, index_lcd, 0xFF);
  5188     02A2  086A               	movf	_index_lcd,w
  5189     02A3  00F4               	movwf	LcdPrintCharS@y
  5190     02A4  30FF               	movlw	255
  5191     02A5  00F5               	movwf	LcdPrintCharS@c
  5192     02A6  3000               	movlw	0
  5193     02A7  318E  2605  3180   	fcall	_LcdPrintCharS
  5194     02AA                     l3493:
  5195                           
  5196                           ;fsm.c: 139:             if(_countAuto == 0) {
  5197     02AA  0020               	movlb	0	; select bank0
  5198     02AB  0864               	movf	__countAuto,w
  5199     02AC  0465               	iorwf	__countAuto+1,w
  5200     02AD  1D03               	btfss	3,2
  5201     02AE  2AB0               	goto	u3211
  5202     02AF  2AB1               	goto	u3210
  5203     02B0                     u3211:
  5204     02B0  2AB8               	goto	l3499
  5205     02B1                     u3210:
  5206     02B1                     l3495:
  5207                           
  5208                           ;fsm.c: 140:                 _cupTotal++;
  5209     02B1  3001               	movlw	1
  5210     02B2  07E6               	addwf	__cupTotal,f
  5211     02B3  3000               	movlw	0
  5212     02B4  3DE7               	addwfc	__cupTotal+1,f
  5213     02B5                     l3497:
  5214                           
  5215                           ;fsm.c: 142:                 EEP_SaveCupTotal();
  5216     02B5  318C  2489  3180   	fcall	_EEP_SaveCupTotal
  5217     02B8                     l3499:
  5218                           
  5219                           ;fsm.c: 145:             if(_countAuto < 5 || BTN_IsPressed(1)){
  5220     02B8  3000               	movlw	0
  5221     02B9  0020               	movlb	0	; select bank0
  5222     02BA  0265               	subwf	__countAuto+1,w
  5223     02BB  3005               	movlw	5
  5224     02BC  1903               	skipnz
  5225     02BD  0264               	subwf	__countAuto,w
  5226     02BE  1C03               	skipc
  5227     02BF  2AC1               	goto	u3221
  5228     02C0  2AC2               	goto	u3220
  5229     02C1                     u3221:
  5230     02C1  2ACB               	goto	l3503
  5231     02C2                     u3220:
  5232     02C2                     l3501:
  5233     02C2  3001               	movlw	1
  5234     02C3  318C  24C1  3180   	fcall	_BTN_IsPressed
  5235     02C6  3A00               	xorlw	0
  5236     02C7  1903               	skipnz
  5237     02C8  2ACA               	goto	u3231
  5238     02C9  2ACB               	goto	u3230
  5239     02CA                     u3231:
  5240     02CA  2B4A               	goto	l156
  5241     02CB                     u3230:
  5242     02CB                     l3503:
  5243                           
  5244                           ;fsm.c: 146:                 LcdPrintStringS(0, 0, "AUTO :         s");
  5245     02CB  0020               	movlb	0	; select bank0
  5246     02CC  01A3               	clrf	LcdPrintStringS@y
  5247     02CD  3099               	movlw	low (STR_3| (0+32768))
  5248     02CE  00A4               	movwf	LcdPrintStringS@string
  5249     02CF  3090               	movlw	high (STR_3| (0+32768))
  5250     02D0  00A5               	movwf	LcdPrintStringS@string+1
  5251     02D1  3000               	movlw	0
  5252     02D2  3187  27D6  3180   	fcall	_LcdPrintStringS
  5253                           
  5254                           ;fsm.c: 147:                 LcdPrintStringS(1, 0, "CUP  :          ");
  5255     02D5  0020               	movlb	0	; select bank0
  5256     02D6  01A3               	clrf	LcdPrintStringS@y
  5257     02D7  3000               	movlw	low (STR_4| (0+32768))
  5258     02D8  00A4               	movwf	LcdPrintStringS@string
  5259     02D9  3090               	movlw	high (STR_4| (0+32768))
  5260     02DA  00A5               	movwf	LcdPrintStringS@string+1
  5261     02DB  3001               	movlw	1
  5262     02DC  3187  27D6  3180   	fcall	_LcdPrintStringS
  5263     02DF                     l3505:
  5264                           
  5265                           ;fsm.c: 150:                 LcdPrintFloatS(0, 8, _timeAuto);
  5266     02DF  3008               	movlw	8
  5267     02E0  0020               	movlb	0	; select bank0
  5268     02E1  00AC               	movwf	LcdPrintFloatS@y
  5269     02E2  0879               	movf	__timeAuto+1,w
  5270     02E3  00AE               	movwf	LcdPrintFloatS@num+1
  5271     02E4  0878               	movf	__timeAuto,w
  5272     02E5  00AD               	movwf	LcdPrintFloatS@num
  5273     02E6  3000               	movlw	0
  5274     02E7  3185  2531  3180   	fcall	_LcdPrintFloatS
  5275     02EA                     l3507:
  5276                           
  5277                           ;fsm.c: 151:                 LcdPrintNumS(1, 8, _cupTotal);
  5278     02EA  3008               	movlw	8
  5279     02EB  0020               	movlb	0	; select bank0
  5280     02EC  00C2               	movwf	LcdPrintNumS@y
  5281     02ED  0867               	movf	__cupTotal+1,w
  5282     02EE  00C4               	movwf	LcdPrintNumS@num+1
  5283     02EF  0866               	movf	__cupTotal,w
  5284     02F0  00C3               	movwf	LcdPrintNumS@num
  5285     02F1  3001               	movlw	1
  5286     02F2  3183  23FB  3180   	fcall	_LcdPrintNumS
  5287     02F5                     l3509:
  5288                           
  5289                           ;fsm.c: 152:                 MTR_Set(0);
  5290     02F5  3000               	movlw	0
  5291     02F6  318C  2457  3180   	fcall	_MTR_Set
  5292     02F9  28B4               	goto	l3369
  5293     02FA                     l3513:
  5294                           
  5295                           ;fsm.c: 158:             if(BTN_IsPressed(2) || BTN_IsPressed(0)){
  5296     02FA  3002               	movlw	2
  5297     02FB  318C  24C1  3180   	fcall	_BTN_IsPressed
  5298     02FE  3A00               	xorlw	0
  5299     02FF  1D03               	skipz
  5300     0300  2B02               	goto	u3241
  5301     0301  2B03               	goto	u3240
  5302     0302                     u3241:
  5303     0302  2B0C               	goto	l3517
  5304     0303                     u3240:
  5305     0303                     l3515:
  5306     0303  3000               	movlw	0
  5307     0304  318C  24C1  3180   	fcall	_BTN_IsPressed
  5308     0307  3A00               	xorlw	0
  5309     0308  1903               	skipnz
  5310     0309  2B0B               	goto	u3251
  5311     030A  2B0C               	goto	u3250
  5312     030B                     u3251:
  5313     030B  2B0F               	goto	l3519
  5314     030C                     u3250:
  5315     030C                     l3517:
  5316                           
  5317                           ;fsm.c: 159:                 mode = INIT;
  5318     030C  0020               	movlb	0	; select bank0
  5319     030D  01E9               	clrf	_mode
  5320                           
  5321                           ;fsm.c: 160:             }
  5322     030E  2B4A               	goto	l156
  5323     030F                     l3519:
  5324     030F  3001               	movlw	1
  5325     0310  318C  24C1  3180   	fcall	_BTN_IsPressed
  5326     0313  3A00               	xorlw	0
  5327     0314  1903               	skipnz
  5328     0315  2B17               	goto	u3261
  5329     0316  2B18               	goto	u3260
  5330     0317                     u3261:
  5331     0317  2B4A               	goto	l156
  5332     0318                     u3260:
  5333     0318                     l3521:
  5334                           
  5335                           ;fsm.c: 162:                 _timeAuto = _cupTotal = 0;
  5336     0318  0020               	movlb	0	; select bank0
  5337     0319  01E6               	clrf	__cupTotal
  5338     031A  01E7               	clrf	__cupTotal+1
  5339     031B  01F8               	clrf	__timeAuto
  5340     031C  01F9               	clrf	__timeAuto+1
  5341     031D                     l3523:
  5342                           
  5343                           ;fsm.c: 165:                 EEP_SaveAutoTime();
  5344     031D  318C  246D  3180   	fcall	_EEP_SaveAutoTime
  5345     0320                     l3525:
  5346                           
  5347                           ;fsm.c: 166:                 EEP_SaveCupTotal();
  5348     0320  318C  2489  3180   	fcall	_EEP_SaveCupTotal
  5349                           
  5350                           ;fsm.c: 168:                 mode = INIT;
  5351     0323  0020               	movlb	0	; select bank0
  5352     0324  01E9               	clrf	_mode
  5353     0325  2B4A               	goto	l156
  5354     0326                     l3531:
  5355     0326  0020               	movlb	0	; select bank0
  5356     0327  0869               	movf	_mode,w
  5357     0328  0021               	movlb	1	; select bank1
  5358     0329  00CC               	movwf	??_FSM_ModeControl^(0+128)
  5359     032A  01CD               	clrf	(??_FSM_ModeControl^(0+128)+1)
  5360                           
  5361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5362                           ; Switch size 1, requested type "simple"
  5363                           ; Number of cases is 1, Range of values is 0 to 0
  5364                           ; switch strategies available:
  5365                           ; Name         Instructions Cycles
  5366                           ; simple_byte            4     3 (average)
  5367                           ; direct_byte            8     6 (fixed)
  5368                           ; jumptable            260     6 (fixed)
  5369                           ;	Chosen strategy is simple_byte
  5370     032B  084D               	movf	(??_FSM_ModeControl+1)^(0+128),w
  5371     032C  3A00               	xorlw	0	; case 0
  5372     032D  1903               	skipnz
  5373     032E  2B30               	goto	l3675
  5374     032F  2B0C               	goto	l3517
  5375     0330                     l3675:
  5376                           
  5377                           ; Switch size 1, requested type "simple"
  5378                           ; Number of cases is 8, Range of values is 0 to 7
  5379                           ; switch strategies available:
  5380                           ; Name         Instructions Cycles
  5381                           ; direct_byte           22     6 (fixed)
  5382                           ; simple_byte           25    13 (average)
  5383                           ; jumptable            260     6 (fixed)
  5384                           ;	Chosen strategy is simple_byte
  5385     0330  084C               	movf	??_FSM_ModeControl^(0+128),w
  5386     0331  3A00               	xorlw	0	; case 0
  5387     0332  1903               	skipnz
  5388     0333  284F               	goto	l3347
  5389     0334  3A01               	xorlw	1	; case 1
  5390     0335  1903               	skipnz
  5391     0336  286B               	goto	l3353
  5392     0337  3A03               	xorlw	3	; case 2
  5393     0338  1903               	skipnz
  5394     0339  28B9               	goto	l3371
  5395     033A  3A01               	xorlw	1	; case 3
  5396     033B  1903               	skipnz
  5397     033C  295B               	goto	l3405
  5398     033D  3A07               	xorlw	7	; case 4
  5399     033E  1903               	skipnz
  5400     033F  29B2               	goto	l3431
  5401     0340  3A01               	xorlw	1	; case 5
  5402     0341  1903               	skipnz
  5403     0342  2A25               	goto	l3461
  5404     0343  3A03               	xorlw	3	; case 6
  5405     0344  1903               	skipnz
  5406     0345  2A84               	goto	l3489
  5407     0346  3A01               	xorlw	1	; case 7
  5408     0347  1903               	skipnz
  5409     0348  2AFA               	goto	l3513
  5410     0349  2B0C               	goto	l3517
  5411     034A                     l156:
  5412     034A  0008               	return
  5413     034B                     __end_of_FSM_ModeControl:
  5414                           
  5415                           	psect	text14
  5416     0DA1                     __ptext14:	
  5417 ;; *************** function ___wmul *****************
  5418 ;; Defined at:
  5419 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5422 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  product         2    4[COMMON] unsigned int 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  2    0[BANK0 ] unsigned int 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;Total ram usage:        6 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 3
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_FSM_ModeControl
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448     0DA1                     ___wmul:	
  5449                           ;psect for function ___wmul
  5450                           
  5451     0DA1                     l3331:	
  5452                           ;incstack = 0
  5453                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5454                           
  5455     0DA1  01F4               	clrf	___wmul@product
  5456     0DA2  01F5               	clrf	___wmul@product+1
  5457     0DA3                     l3333:
  5458     0DA3  0020               	movlb	0	; select bank0
  5459     0DA4  1C20               	btfss	___wmul@multiplier,0
  5460     0DA5  2DA7               	goto	u2951
  5461     0DA6  2DA8               	goto	u2950
  5462     0DA7                     u2951:
  5463     0DA7  2DAC               	goto	l617
  5464     0DA8                     u2950:
  5465     0DA8                     l3335:
  5466     0DA8  0822               	movf	___wmul@multiplicand,w
  5467     0DA9  07F4               	addwf	___wmul@product,f
  5468     0DAA  0823               	movf	___wmul@multiplicand+1,w
  5469     0DAB  3DF5               	addwfc	___wmul@product+1,f
  5470     0DAC                     l617:
  5471     0DAC  3001               	movlw	1
  5472     0DAD                     u2965:
  5473     0DAD  35A2               	lslf	___wmul@multiplicand,f
  5474     0DAE  0DA3               	rlf	___wmul@multiplicand+1,f
  5475     0DAF  0B89               	decfsz	9,f
  5476     0DB0  2DAD               	goto	u2965
  5477     0DB1                     l3337:
  5478     0DB1  3001               	movlw	1
  5479     0DB2                     u2975:
  5480     0DB2  36A1               	lsrf	___wmul@multiplier+1,f
  5481     0DB3  0CA0               	rrf	___wmul@multiplier,f
  5482     0DB4  0B89               	decfsz	9,f
  5483     0DB5  2DB2               	goto	u2975
  5484     0DB6                     l3339:
  5485     0DB6  0820               	movf	___wmul@multiplier,w
  5486     0DB7  0421               	iorwf	___wmul@multiplier+1,w
  5487     0DB8  1D03               	btfss	3,2
  5488     0DB9  2DBB               	goto	u2981
  5489     0DBA  2DBC               	goto	u2980
  5490     0DBB                     u2981:
  5491     0DBB  2DA3               	goto	l3333
  5492     0DBC                     u2980:
  5493     0DBC                     l3341:
  5494     0DBC  0875               	movf	___wmul@product+1,w
  5495     0DBD  00A1               	movwf	?___wmul+1
  5496     0DBE  0874               	movf	___wmul@product,w
  5497     0DBF  00A0               	movwf	?___wmul
  5498     0DC0                     l619:
  5499     0DC0  0008               	return
  5500     0DC1                     __end_of___wmul:
  5501                           
  5502                           	psect	text15
  5503     0C57                     __ptext15:	
  5504 ;; *************** function _MTR_Set *****************
  5505 ;; Defined at:
  5506 ;;		line 4 in file "output.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  state           1    wreg     unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  state           1    4[COMMON] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;Total ram usage:        1 bytes
  5525 ;; Hardware stack levels used: 1
  5526 ;; Hardware stack levels required when called: 3
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_FSM_ModeControl
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534     0C57                     _MTR_Set:	
  5535                           ;psect for function _MTR_Set
  5536                           
  5537                           
  5538                           ;incstack = 0
  5539                           ; Regs used in _MTR_Set: [wreg+status,2+status,0]
  5540                           ;MTR_Set@state stored from wreg
  5541     0C57  00F4               	movwf	MTR_Set@state
  5542     0C58                     l2383:
  5543                           
  5544                           ;output.c: 5:     PORTAbits.RA5 = state == 0 ? 0 : 1;
  5545     0C58  0874               	movf	MTR_Set@state,w
  5546     0C59  1D03               	btfss	3,2
  5547     0C5A  2C5C               	goto	u1931
  5548     0C5B  2C5F               	goto	u1930
  5549     0C5C                     u1931:
  5550     0C5C  0020               	movlb	0	; select bank0
  5551     0C5D  168C               	bsf	12,5	;volatile
  5552     0C5E  2C61               	goto	u1944
  5553     0C5F                     u1930:
  5554     0C5F  0020               	movlb	0	; select bank0
  5555     0C60  128C               	bcf	12,5	;volatile
  5556     0C61                     u1944:
  5557     0C61                     l203:
  5558     0C61  0008               	return
  5559     0C62                     __end_of_MTR_Set:
  5560                           
  5561                           	psect	text16
  5562     07D6                     __ptext16:	
  5563 ;; *************** function _LcdPrintStringS *****************
  5564 ;; Defined at:
  5565 ;;		line 212 in file "lcd.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  x               1    wreg     unsigned char 
  5568 ;;  y               1    3[BANK0 ] unsigned char 
  5569 ;;  string          2    4[BANK0 ] PTR const unsigned char 
  5570 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
  5571 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  5572 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  5573 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  x               1    5[COMMON] unsigned char 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5585 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;Total ram usage:        6 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 4
  5592 ;; This function calls:
  5593 ;;		_lcd_print_charS
  5594 ;; This function is called by:
  5595 ;;		_FSM_ModeControl
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599     07D6                     _LcdPrintStringS:	
  5600                           ;psect for function _LcdPrintStringS
  5601                           
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in _LcdPrintStringS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5605                           ;LcdPrintStringS@x stored from wreg
  5606     07D6  00F5               	movwf	LcdPrintStringS@x
  5607     07D7                     l3165:
  5608                           
  5609                           ;lcd.c: 212: void LcdPrintStringS(unsigned char x, unsigned char y, const unsigned char 
      +                          *string);lcd.c: 213: {;lcd.c: 214:     current_row = x%2;
  5610     07D7  0875               	movf	LcdPrintStringS@x,w
  5611     07D8  3901               	andlw	1
  5612     07D9  0020               	movlb	0	; select bank0
  5613     07DA  00A6               	movwf	??_LcdPrintStringS
  5614     07DB  01A7               	clrf	??_LcdPrintStringS+1
  5615     07DC  0826               	movf	??_LcdPrintStringS,w
  5616     07DD  00E0               	movwf	_current_row
  5617     07DE  0827               	movf	??_LcdPrintStringS+1,w
  5618     07DF  00E1               	movwf	_current_row+1
  5619                           
  5620                           ;lcd.c: 215:     current_col = y%16;
  5621     07E0  0823               	movf	LcdPrintStringS@y,w
  5622     07E1  390F               	andlw	15
  5623     07E2  00A6               	movwf	??_LcdPrintStringS
  5624     07E3  01A7               	clrf	??_LcdPrintStringS+1
  5625     07E4  0826               	movf	??_LcdPrintStringS,w
  5626     07E5  00DE               	movwf	_current_col
  5627     07E6  0827               	movf	??_LcdPrintStringS+1,w
  5628     07E7  00DF               	movwf	_current_col+1
  5629                           
  5630                           ;lcd.c: 216:     while (*string) {
  5631     07E8  2FF6               	goto	l3171
  5632     07E9                     l3167:
  5633                           
  5634                           ;lcd.c: 217:         lcd_print_charS (*string++);
  5635     07E9  0824               	movf	LcdPrintStringS@string,w
  5636     07EA  0084               	movwf	4
  5637     07EB  0825               	movf	LcdPrintStringS@string+1,w
  5638     07EC  0085               	movwf	5
  5639     07ED  0800               	movf	0,w	;code access
  5640     07EE  318D  251B  3187   	fcall	_lcd_print_charS
  5641     07F1                     l3169:
  5642     07F1  3001               	movlw	1
  5643     07F2  0020               	movlb	0	; select bank0
  5644     07F3  07A4               	addwf	LcdPrintStringS@string,f
  5645     07F4  3000               	movlw	0
  5646     07F5  3DA5               	addwfc	LcdPrintStringS@string+1,f
  5647     07F6                     l3171:
  5648                           
  5649                           ;lcd.c: 216:     while (*string) {
  5650     07F6  0824               	movf	LcdPrintStringS@string,w
  5651     07F7  0084               	movwf	4
  5652     07F8  0825               	movf	LcdPrintStringS@string+1,w
  5653     07F9  0085               	movwf	5
  5654     07FA  0012               	moviw fsr0++
  5655     07FB  1D03               	btfss	3,2
  5656     07FC  2FFE               	goto	u2871
  5657     07FD  2FFF               	goto	u2870
  5658     07FE                     u2871:
  5659     07FE  2FE9               	goto	l3167
  5660     07FF                     u2870:
  5661     07FF                     l388:
  5662     07FF  0008               	return
  5663     0800                     __end_of_LcdPrintStringS:
  5664                           
  5665                           	psect	text17
  5666     03FB                     __ptext17:	
  5667 ;; *************** function _LcdPrintNumS *****************
  5668 ;; Defined at:
  5669 ;;		line 185 in file "lcd.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  x               1    wreg     unsigned char 
  5672 ;;  y               1   34[BANK0 ] unsigned char 
  5673 ;;  num             2   35[BANK0 ] unsigned int 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  x               1   39[BANK0 ] unsigned char 
  5676 ;;  i               1   41[BANK0 ] unsigned char 
  5677 ;;  num_flag        1   40[BANK0 ] unsigned char 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5687 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;Total ram usage:        8 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 5
  5694 ;; This function calls:
  5695 ;;		___lldiv
  5696 ;;		___llmod
  5697 ;;		_lcd_power_of
  5698 ;;		_lcd_print_charS
  5699 ;; This function is called by:
  5700 ;;		_FSM_ModeControl
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704     03FB                     _LcdPrintNumS:	
  5705                           ;psect for function _LcdPrintNumS
  5706                           
  5707                           
  5708                           ;incstack = 0
  5709                           ; Regs used in _LcdPrintNumS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5710                           ;LcdPrintNumS@x stored from wreg
  5711     03FB  0020               	movlb	0	; select bank0
  5712     03FC  00C7               	movwf	LcdPrintNumS@x
  5713     03FD                     l3183:
  5714                           
  5715                           ;lcd.c: 185: void LcdPrintNumS(unsigned char x, unsigned char y, unsigned int num);lcd.c
      +                          : 186: {;lcd.c: 187:     char num_flag = 0;
  5716     03FD  01C8               	clrf	LcdPrintNumS@num_flag
  5717     03FE                     l3185:
  5718                           
  5719                           ;lcd.c: 188:     char i;;lcd.c: 189:     current_row = x%2;
  5720     03FE  0847               	movf	LcdPrintNumS@x,w
  5721     03FF  3901               	andlw	1
  5722     0400  00C5               	movwf	??_LcdPrintNumS
  5723     0401  01C6               	clrf	??_LcdPrintNumS+1
  5724     0402  0845               	movf	??_LcdPrintNumS,w
  5725     0403  00E0               	movwf	_current_row
  5726     0404  0846               	movf	??_LcdPrintNumS+1,w
  5727     0405  00E1               	movwf	_current_row+1
  5728     0406                     l3187:
  5729                           
  5730                           ;lcd.c: 190:     current_col = y%16;
  5731     0406  0842               	movf	LcdPrintNumS@y,w
  5732     0407  390F               	andlw	15
  5733     0408  00C5               	movwf	??_LcdPrintNumS
  5734     0409  01C6               	clrf	??_LcdPrintNumS+1
  5735     040A  0845               	movf	??_LcdPrintNumS,w
  5736     040B  00DE               	movwf	_current_col
  5737     040C  0846               	movf	??_LcdPrintNumS+1,w
  5738     040D  00DF               	movwf	_current_col+1
  5739     040E                     l3189:
  5740                           
  5741                           ;lcd.c: 192:     if(num == 0){
  5742     040E  0843               	movf	LcdPrintNumS@num,w
  5743     040F  0444               	iorwf	LcdPrintNumS@num+1,w
  5744     0410  1D03               	btfss	3,2
  5745     0411  2C13               	goto	u2891
  5746     0412  2C14               	goto	u2890
  5747     0413                     u2891:
  5748     0413  2C19               	goto	l3195
  5749     0414                     u2890:
  5750     0414                     l3191:
  5751                           
  5752                           ;lcd.c: 193:         lcd_print_charS('0');
  5753     0414  3030               	movlw	48
  5754     0415  318D  251B  3183   	fcall	_lcd_print_charS
  5755     0418  2CA3               	goto	l377
  5756     0419                     l3195:
  5757                           
  5758                           ;lcd.c: 196:     for(i = 10; i > 0; i--)
  5759     0419  300A               	movlw	10
  5760     041A  00C9               	movwf	LcdPrintNumS@i
  5761     041B                     l3201:
  5762                           
  5763                           ;lcd.c: 197:     {;lcd.c: 198:         if((num / lcd_power_of(10, i-1)) != 0)
  5764     041B  0849               	movf	LcdPrintNumS@i,w
  5765     041C  3EFF               	addlw	255
  5766     041D  00AE               	movwf	lcd_power_of@x
  5767     041E  30FF               	movlw	255
  5768     041F  1803               	skipnc
  5769     0420  3000               	movlw	0
  5770     0421  00AF               	movwf	lcd_power_of@x+1
  5771     0422  300A               	movlw	10
  5772     0423  00AC               	movwf	lcd_power_of@A
  5773     0424  3000               	movlw	0
  5774     0425  00AD               	movwf	lcd_power_of@A+1
  5775     0426  3187  2757  3183   	fcall	_lcd_power_of
  5776     0429  0020               	movlb	0	; select bank0
  5777     042A  082F               	movf	?_lcd_power_of+3,w
  5778     042B  00B8               	movwf	___lldiv@divisor+3
  5779     042C  082E               	movf	?_lcd_power_of+2,w
  5780     042D  00B7               	movwf	___lldiv@divisor+2
  5781     042E  082D               	movf	?_lcd_power_of+1,w
  5782     042F  00B6               	movwf	___lldiv@divisor+1
  5783     0430  082C               	movf	?_lcd_power_of,w
  5784     0431  00B5               	movwf	___lldiv@divisor
  5785     0432  0843               	movf	LcdPrintNumS@num,w
  5786     0433  00B9               	movwf	___lldiv@dividend
  5787     0434  0844               	movf	LcdPrintNumS@num+1,w
  5788     0435  00BA               	movwf	___lldiv@dividend+1
  5789     0436  01BB               	clrf	___lldiv@dividend+2
  5790     0437  01BC               	clrf	___lldiv@dividend+3
  5791     0438  3186  2609  3183   	fcall	___lldiv
  5792     043B  0020               	movlb	0	; select bank0
  5793     043C  0838               	movf	?___lldiv+3,w
  5794     043D  0437               	iorwf	?___lldiv+2,w
  5795     043E  0436               	iorwf	?___lldiv+1,w
  5796     043F  0435               	iorwf	?___lldiv,w
  5797     0440  1903               	skipnz
  5798     0441  2C43               	goto	u2901
  5799     0442  2C44               	goto	u2900
  5800     0443                     u2901:
  5801     0443  2C6D               	goto	l3207
  5802     0444                     u2900:
  5803     0444                     l3203:
  5804                           
  5805                           ;lcd.c: 199:         {;lcd.c: 200:             num_flag = 1;
  5806     0444  01C8               	clrf	LcdPrintNumS@num_flag
  5807     0445  0AC8               	incf	LcdPrintNumS@num_flag,f
  5808     0446                     l3205:
  5809                           
  5810                           ;lcd.c: 201:             lcd_print_charS(num/lcd_power_of(10, i-1) + '0');
  5811     0446  0849               	movf	LcdPrintNumS@i,w
  5812     0447  3EFF               	addlw	255
  5813     0448  00AE               	movwf	lcd_power_of@x
  5814     0449  30FF               	movlw	255
  5815     044A  1803               	skipnc
  5816     044B  3000               	movlw	0
  5817     044C  00AF               	movwf	lcd_power_of@x+1
  5818     044D  300A               	movlw	10
  5819     044E  00AC               	movwf	lcd_power_of@A
  5820     044F  3000               	movlw	0
  5821     0450  00AD               	movwf	lcd_power_of@A+1
  5822     0451  3187  2757  3183   	fcall	_lcd_power_of
  5823     0454  0020               	movlb	0	; select bank0
  5824     0455  082F               	movf	?_lcd_power_of+3,w
  5825     0456  00B8               	movwf	___lldiv@divisor+3
  5826     0457  082E               	movf	?_lcd_power_of+2,w
  5827     0458  00B7               	movwf	___lldiv@divisor+2
  5828     0459  082D               	movf	?_lcd_power_of+1,w
  5829     045A  00B6               	movwf	___lldiv@divisor+1
  5830     045B  082C               	movf	?_lcd_power_of,w
  5831     045C  00B5               	movwf	___lldiv@divisor
  5832     045D  0843               	movf	LcdPrintNumS@num,w
  5833     045E  00B9               	movwf	___lldiv@dividend
  5834     045F  0844               	movf	LcdPrintNumS@num+1,w
  5835     0460  00BA               	movwf	___lldiv@dividend+1
  5836     0461  01BB               	clrf	___lldiv@dividend+2
  5837     0462  01BC               	clrf	___lldiv@dividend+3
  5838     0463  3186  2609  3183   	fcall	___lldiv
  5839     0466  0020               	movlb	0	; select bank0
  5840     0467  0835               	movf	?___lldiv,w
  5841     0468  3E30               	addlw	48
  5842     0469  318D  251B  3183   	fcall	_lcd_print_charS
  5843                           
  5844                           ;lcd.c: 202:         }
  5845     046C  2C76               	goto	l3211
  5846     046D                     l3207:
  5847                           
  5848                           ;lcd.c: 204:         {;lcd.c: 205:             if(num_flag != 0)
  5849     046D  0848               	movf	LcdPrintNumS@num_flag,w
  5850     046E  1903               	btfsc	3,2
  5851     046F  2C71               	goto	u2911
  5852     0470  2C72               	goto	u2910
  5853     0471                     u2911:
  5854     0471  2C76               	goto	l3211
  5855     0472                     u2910:
  5856     0472                     l3209:
  5857                           
  5858                           ;lcd.c: 206:                 lcd_print_charS('0');
  5859     0472  3030               	movlw	48
  5860     0473  318D  251B  3183   	fcall	_lcd_print_charS
  5861     0476                     l3211:
  5862                           
  5863                           ;lcd.c: 208:         num %= lcd_power_of(10, i-1);
  5864     0476  0020               	movlb	0	; select bank0
  5865     0477  0849               	movf	LcdPrintNumS@i,w
  5866     0478  3EFF               	addlw	255
  5867     0479  00AE               	movwf	lcd_power_of@x
  5868     047A  30FF               	movlw	255
  5869     047B  1803               	skipnc
  5870     047C  3000               	movlw	0
  5871     047D  00AF               	movwf	lcd_power_of@x+1
  5872     047E  300A               	movlw	10
  5873     047F  00AC               	movwf	lcd_power_of@A
  5874     0480  3000               	movlw	0
  5875     0481  00AD               	movwf	lcd_power_of@A+1
  5876     0482  3187  2757  3183   	fcall	_lcd_power_of
  5877     0485  0020               	movlb	0	; select bank0
  5878     0486  082F               	movf	?_lcd_power_of+3,w
  5879     0487  00B8               	movwf	___llmod@divisor+3
  5880     0488  082E               	movf	?_lcd_power_of+2,w
  5881     0489  00B7               	movwf	___llmod@divisor+2
  5882     048A  082D               	movf	?_lcd_power_of+1,w
  5883     048B  00B6               	movwf	___llmod@divisor+1
  5884     048C  082C               	movf	?_lcd_power_of,w
  5885     048D  00B5               	movwf	___llmod@divisor
  5886     048E  0843               	movf	LcdPrintNumS@num,w
  5887     048F  00B9               	movwf	___llmod@dividend
  5888     0490  0844               	movf	LcdPrintNumS@num+1,w
  5889     0491  00BA               	movwf	___llmod@dividend+1
  5890     0492  01BB               	clrf	___llmod@dividend+2
  5891     0493  01BC               	clrf	___llmod@dividend+3
  5892     0494  3187  270C  3183   	fcall	___llmod
  5893     0497  0020               	movlb	0	; select bank0
  5894     0498  0836               	movf	?___llmod+1,w
  5895     0499  00C4               	movwf	LcdPrintNumS@num+1
  5896     049A  0835               	movf	?___llmod,w
  5897     049B  00C3               	movwf	LcdPrintNumS@num
  5898     049C                     l3213:
  5899                           
  5900                           ;lcd.c: 209:     }
  5901     049C  3001               	movlw	1
  5902     049D  02C9               	subwf	LcdPrintNumS@i,f
  5903     049E                     l3215:
  5904     049E  0849               	movf	LcdPrintNumS@i,w
  5905     049F  1D03               	btfss	3,2
  5906     04A0  2CA2               	goto	u2921
  5907     04A1  2CA3               	goto	u2920
  5908     04A2                     u2921:
  5909     04A2  2C1B               	goto	l3201
  5910     04A3                     u2920:
  5911     04A3                     l377:
  5912     04A3  0008               	return
  5913     04A4                     __end_of_LcdPrintNumS:
  5914                           
  5915                           	psect	text18
  5916     0757                     __ptext18:	
  5917 ;; *************** function _lcd_power_of *****************
  5918 ;; Defined at:
  5919 ;;		line 24 in file "lcd.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  A               2   12[BANK0 ] int 
  5922 ;;  x               2   14[BANK0 ] int 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  temp            4   17[BANK0 ] unsigned long 
  5925 ;;  i               1   16[BANK0 ] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  4   12[BANK0 ] unsigned long 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0, pclath, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5935 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;Total ram usage:       10 bytes
  5940 ;; Hardware stack levels used: 1
  5941 ;; Hardware stack levels required when called: 4
  5942 ;; This function calls:
  5943 ;;		___lmul
  5944 ;; This function is called by:
  5945 ;;		_LcdPrintNumS
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949     0757                     _lcd_power_of:	
  5950                           ;psect for function _lcd_power_of
  5951                           
  5952     0757                     l2965:	
  5953                           ;incstack = 0
  5954                           ; Regs used in _lcd_power_of: [wreg+status,2+status,0+pclath+cstack]
  5955                           
  5956                           
  5957                           ;lcd.c: 24: unsigned long lcd_power_of(int A, int x);lcd.c: 25: {;lcd.c: 26:     char i;
      +                          ;lcd.c: 27:     unsigned long temp = 1;
  5958     0757  3000               	movlw	0
  5959     0758  0020               	movlb	0	; select bank0
  5960     0759  00B4               	movwf	lcd_power_of@temp+3
  5961     075A  3000               	movlw	0
  5962     075B  00B3               	movwf	lcd_power_of@temp+2
  5963     075C  3000               	movlw	0
  5964     075D  00B2               	movwf	lcd_power_of@temp+1
  5965     075E  3001               	movlw	1
  5966     075F  00B1               	movwf	lcd_power_of@temp
  5967     0760                     l2967:
  5968                           
  5969                           ;lcd.c: 28:     for(i = 0; i < x; i++)
  5970     0760  01B0               	clrf	lcd_power_of@i
  5971     0761  2F84               	goto	l2973
  5972     0762                     l2969:
  5973                           
  5974                           ;lcd.c: 29:             temp *= A;
  5975     0762  0020               	movlb	0	; select bank0
  5976     0763  082C               	movf	lcd_power_of@A,w
  5977     0764  00A0               	movwf	___lmul@multiplier
  5978     0765  082D               	movf	lcd_power_of@A+1,w
  5979     0766  00A1               	movwf	___lmul@multiplier+1
  5980     0767  0D89               	rlf	9,f
  5981     0768  3B89               	subwfb	9,f
  5982     0769  0989               	comf	9,f
  5983     076A  00A2               	movwf	___lmul@multiplier+2
  5984     076B  00A3               	movwf	___lmul@multiplier+3
  5985     076C  0834               	movf	lcd_power_of@temp+3,w
  5986     076D  00A7               	movwf	___lmul@multiplicand+3
  5987     076E  0833               	movf	lcd_power_of@temp+2,w
  5988     076F  00A6               	movwf	___lmul@multiplicand+2
  5989     0770  0832               	movf	lcd_power_of@temp+1,w
  5990     0771  00A5               	movwf	___lmul@multiplicand+1
  5991     0772  0831               	movf	lcd_power_of@temp,w
  5992     0773  00A4               	movwf	___lmul@multiplicand
  5993     0774  318F  2728  3187   	fcall	___lmul
  5994     0777  0020               	movlb	0	; select bank0
  5995     0778  0823               	movf	?___lmul+3,w
  5996     0779  00B4               	movwf	lcd_power_of@temp+3
  5997     077A  0822               	movf	?___lmul+2,w
  5998     077B  00B3               	movwf	lcd_power_of@temp+2
  5999     077C  0821               	movf	?___lmul+1,w
  6000     077D  00B2               	movwf	lcd_power_of@temp+1
  6001     077E  0820               	movf	?___lmul,w
  6002     077F  00B1               	movwf	lcd_power_of@temp
  6003     0780                     l2971:
  6004     0780  3001               	movlw	1
  6005     0781  00F4               	movwf	??_lcd_power_of
  6006     0782  0874               	movf	??_lcd_power_of,w
  6007     0783  07B0               	addwf	lcd_power_of@i,f
  6008     0784                     l2973:
  6009     0784  082F               	movf	lcd_power_of@x+1,w
  6010     0785  3A80               	xorlw	128
  6011     0786  3C80               	sublw	128
  6012     0787  1D03               	skipz
  6013     0788  2F8B               	goto	u2505
  6014     0789  082E               	movf	lcd_power_of@x,w
  6015     078A  0230               	subwf	lcd_power_of@i,w
  6016     078B                     u2505:
  6017     078B  1C03               	skipc
  6018     078C  2F8E               	goto	u2501
  6019     078D  2F8F               	goto	u2500
  6020     078E                     u2501:
  6021     078E  2F62               	goto	l2969
  6022     078F                     u2500:
  6023     078F                     l2975:
  6024                           
  6025                           ;lcd.c: 30:     return temp;
  6026     078F  0020               	movlb	0	; select bank0
  6027     0790  0834               	movf	lcd_power_of@temp+3,w
  6028     0791  00AF               	movwf	?_lcd_power_of+3
  6029     0792  0833               	movf	lcd_power_of@temp+2,w
  6030     0793  00AE               	movwf	?_lcd_power_of+2
  6031     0794  0832               	movf	lcd_power_of@temp+1,w
  6032     0795  00AD               	movwf	?_lcd_power_of+1
  6033     0796  0831               	movf	lcd_power_of@temp,w
  6034     0797  00AC               	movwf	?_lcd_power_of
  6035     0798                     l279:
  6036     0798  0008               	return
  6037     0799                     __end_of_lcd_power_of:
  6038                           
  6039                           	psect	text19
  6040     0F28                     __ptext19:	
  6041 ;; *************** function ___lmul *****************
  6042 ;; Defined at:
  6043 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6046 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  product         4    8[BANK0 ] unsigned long 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  4    0[BANK0 ] unsigned long 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6058 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;Total ram usage:       12 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 3
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_lcd_power_of
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072     0F28                     ___lmul:	
  6073                           ;psect for function ___lmul
  6074                           
  6075     0F28                     l2951:	
  6076                           ;incstack = 0
  6077                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6078                           
  6079     0F28  3000               	movlw	0
  6080     0F29  0020               	movlb	0	; select bank0
  6081     0F2A  00AB               	movwf	___lmul@product+3
  6082     0F2B  3000               	movlw	0
  6083     0F2C  00AA               	movwf	___lmul@product+2
  6084     0F2D  3000               	movlw	0
  6085     0F2E  00A9               	movwf	___lmul@product+1
  6086     0F2F  3000               	movlw	0
  6087     0F30  00A8               	movwf	___lmul@product
  6088     0F31                     l2953:
  6089     0F31  1C20               	btfss	___lmul@multiplier,0
  6090     0F32  2F34               	goto	u2461
  6091     0F33  2F35               	goto	u2460
  6092     0F34                     u2461:
  6093     0F34  2F3D               	goto	l2957
  6094     0F35                     u2460:
  6095     0F35                     l2955:
  6096     0F35  0824               	movf	___lmul@multiplicand,w
  6097     0F36  07A8               	addwf	___lmul@product,f
  6098     0F37  0825               	movf	___lmul@multiplicand+1,w
  6099     0F38  3DA9               	addwfc	___lmul@product+1,f
  6100     0F39  0826               	movf	___lmul@multiplicand+2,w
  6101     0F3A  3DAA               	addwfc	___lmul@product+2,f
  6102     0F3B  0827               	movf	___lmul@multiplicand+3,w
  6103     0F3C  3DAB               	addwfc	___lmul@product+3,f
  6104     0F3D                     l2957:
  6105     0F3D  3001               	movlw	1
  6106     0F3E                     u2475:
  6107     0F3E  35A4               	lslf	___lmul@multiplicand,f
  6108     0F3F  0DA5               	rlf	___lmul@multiplicand+1,f
  6109     0F40  0DA6               	rlf	___lmul@multiplicand+2,f
  6110     0F41  0DA7               	rlf	___lmul@multiplicand+3,f
  6111     0F42  0B89               	decfsz	9,f
  6112     0F43  2F3E               	goto	u2475
  6113     0F44                     l2959:
  6114     0F44  3001               	movlw	1
  6115     0F45                     u2485:
  6116     0F45  36A3               	lsrf	___lmul@multiplier+3,f
  6117     0F46  0CA2               	rrf	___lmul@multiplier+2,f
  6118     0F47  0CA1               	rrf	___lmul@multiplier+1,f
  6119     0F48  0CA0               	rrf	___lmul@multiplier,f
  6120     0F49  0B89               	decfsz	9,f
  6121     0F4A  2F45               	goto	u2485
  6122     0F4B  0823               	movf	___lmul@multiplier+3,w
  6123     0F4C  0422               	iorwf	___lmul@multiplier+2,w
  6124     0F4D  0421               	iorwf	___lmul@multiplier+1,w
  6125     0F4E  0420               	iorwf	___lmul@multiplier,w
  6126     0F4F  1D03               	skipz
  6127     0F50  2F52               	goto	u2491
  6128     0F51  2F53               	goto	u2490
  6129     0F52                     u2491:
  6130     0F52  2F31               	goto	l2953
  6131     0F53                     u2490:
  6132     0F53                     l2961:
  6133     0F53  082B               	movf	___lmul@product+3,w
  6134     0F54  00A3               	movwf	?___lmul+3
  6135     0F55  082A               	movf	___lmul@product+2,w
  6136     0F56  00A2               	movwf	?___lmul+2
  6137     0F57  0829               	movf	___lmul@product+1,w
  6138     0F58  00A1               	movwf	?___lmul+1
  6139     0F59  0828               	movf	___lmul@product,w
  6140     0F5A  00A0               	movwf	?___lmul
  6141     0F5B                     l631:
  6142     0F5B  0008               	return
  6143     0F5C                     __end_of___lmul:
  6144                           
  6145                           	psect	text20
  6146     070C                     __ptext20:	
  6147 ;; *************** function ___llmod *****************
  6148 ;; Defined at:
  6149 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\llmod.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  divisor         4   21[BANK0 ] unsigned long 
  6152 ;;  dividend        4   25[BANK0 ] unsigned long 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  counter         1   29[BANK0 ] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  4   21[BANK0 ] unsigned long 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6164 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;Total ram usage:       10 bytes
  6169 ;; Hardware stack levels used: 1
  6170 ;; Hardware stack levels required when called: 3
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_LcdPrintNumS
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178     070C                     ___llmod:	
  6179                           ;psect for function ___llmod
  6180                           
  6181     070C                     l2225:	
  6182                           ;incstack = 0
  6183                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6184                           
  6185     070C  0020               	movlb	0	; select bank0
  6186     070D  0838               	movf	___llmod@divisor+3,w
  6187     070E  0437               	iorwf	___llmod@divisor+2,w
  6188     070F  0436               	iorwf	___llmod@divisor+1,w
  6189     0710  0435               	iorwf	___llmod@divisor,w
  6190     0711  1903               	skipnz
  6191     0712  2F14               	goto	u1591
  6192     0713  2F15               	goto	u1590
  6193     0714                     u1591:
  6194     0714  2F4E               	goto	l2241
  6195     0715                     u1590:
  6196     0715                     l2227:
  6197     0715  01BD               	clrf	___llmod@counter
  6198     0716  0ABD               	incf	___llmod@counter,f
  6199     0717  2F23               	goto	l2231
  6200     0718                     l2229:
  6201     0718  3001               	movlw	1
  6202     0719                     u1605:
  6203     0719  35B5               	lslf	___llmod@divisor,f
  6204     071A  0DB6               	rlf	___llmod@divisor+1,f
  6205     071B  0DB7               	rlf	___llmod@divisor+2,f
  6206     071C  0DB8               	rlf	___llmod@divisor+3,f
  6207     071D  0B89               	decfsz	9,f
  6208     071E  2F19               	goto	u1605
  6209     071F  3001               	movlw	1
  6210     0720  00F5               	movwf	??___llmod
  6211     0721  0875               	movf	??___llmod,w
  6212     0722  07BD               	addwf	___llmod@counter,f
  6213     0723                     l2231:
  6214     0723  1FB8               	btfss	___llmod@divisor+3,7
  6215     0724  2F26               	goto	u1611
  6216     0725  2F27               	goto	u1610
  6217     0726                     u1611:
  6218     0726  2F18               	goto	l2229
  6219     0727                     u1610:
  6220     0727                     l2233:
  6221     0727  0838               	movf	___llmod@divisor+3,w
  6222     0728  023C               	subwf	___llmod@dividend+3,w
  6223     0729  1D03               	skipz
  6224     072A  2F35               	goto	u1625
  6225     072B  0837               	movf	___llmod@divisor+2,w
  6226     072C  023B               	subwf	___llmod@dividend+2,w
  6227     072D  1D03               	skipz
  6228     072E  2F35               	goto	u1625
  6229     072F  0836               	movf	___llmod@divisor+1,w
  6230     0730  023A               	subwf	___llmod@dividend+1,w
  6231     0731  1D03               	skipz
  6232     0732  2F35               	goto	u1625
  6233     0733  0835               	movf	___llmod@divisor,w
  6234     0734  0239               	subwf	___llmod@dividend,w
  6235     0735                     u1625:
  6236     0735  1C03               	skipc
  6237     0736  2F38               	goto	u1621
  6238     0737  2F39               	goto	u1620
  6239     0738                     u1621:
  6240     0738  2F41               	goto	l2237
  6241     0739                     u1620:
  6242     0739                     l2235:
  6243     0739  0835               	movf	___llmod@divisor,w
  6244     073A  02B9               	subwf	___llmod@dividend,f
  6245     073B  0836               	movf	___llmod@divisor+1,w
  6246     073C  3BBA               	subwfb	___llmod@dividend+1,f
  6247     073D  0837               	movf	___llmod@divisor+2,w
  6248     073E  3BBB               	subwfb	___llmod@dividend+2,f
  6249     073F  0838               	movf	___llmod@divisor+3,w
  6250     0740  3BBC               	subwfb	___llmod@dividend+3,f
  6251     0741                     l2237:
  6252     0741  3001               	movlw	1
  6253     0742                     u1635:
  6254     0742  36B8               	lsrf	___llmod@divisor+3,f
  6255     0743  0CB7               	rrf	___llmod@divisor+2,f
  6256     0744  0CB6               	rrf	___llmod@divisor+1,f
  6257     0745  0CB5               	rrf	___llmod@divisor,f
  6258     0746  0B89               	decfsz	9,f
  6259     0747  2F42               	goto	u1635
  6260     0748                     l2239:
  6261     0748  3001               	movlw	1
  6262     0749  02BD               	subwf	___llmod@counter,f
  6263     074A  1D03               	btfss	3,2
  6264     074B  2F4D               	goto	u1641
  6265     074C  2F4E               	goto	u1640
  6266     074D                     u1641:
  6267     074D  2F27               	goto	l2233
  6268     074E                     u1640:
  6269     074E                     l2241:
  6270     074E  083C               	movf	___llmod@dividend+3,w
  6271     074F  00B8               	movwf	?___llmod+3
  6272     0750  083B               	movf	___llmod@dividend+2,w
  6273     0751  00B7               	movwf	?___llmod+2
  6274     0752  083A               	movf	___llmod@dividend+1,w
  6275     0753  00B6               	movwf	?___llmod+1
  6276     0754  0839               	movf	___llmod@dividend,w
  6277     0755  00B5               	movwf	?___llmod
  6278     0756                     l847:
  6279     0756  0008               	return
  6280     0757                     __end_of___llmod:
  6281                           
  6282                           	psect	text21
  6283     0609                     __ptext21:	
  6284 ;; *************** function ___lldiv *****************
  6285 ;; Defined at:
  6286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  divisor         4   21[BANK0 ] unsigned long 
  6289 ;;  dividend        4   25[BANK0 ] unsigned long 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  quotient        4   29[BANK0 ] unsigned long 
  6292 ;;  counter         1   33[BANK0 ] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  4   21[BANK0 ] unsigned long 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6302 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;Total ram usage:       14 bytes
  6307 ;; Hardware stack levels used: 1
  6308 ;; Hardware stack levels required when called: 3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_LcdPrintNumS
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316     0609                     ___lldiv:	
  6317                           ;psect for function ___lldiv
  6318                           
  6319     0609                     l2119:	
  6320                           ;incstack = 0
  6321                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6322                           
  6323     0609  3000               	movlw	0
  6324     060A  0020               	movlb	0	; select bank0
  6325     060B  00C0               	movwf	___lldiv@quotient+3
  6326     060C  3000               	movlw	0
  6327     060D  00BF               	movwf	___lldiv@quotient+2
  6328     060E  3000               	movlw	0
  6329     060F  00BE               	movwf	___lldiv@quotient+1
  6330     0610  3000               	movlw	0
  6331     0611  00BD               	movwf	___lldiv@quotient
  6332     0612  0838               	movf	___lldiv@divisor+3,w
  6333     0613  0437               	iorwf	___lldiv@divisor+2,w
  6334     0614  0436               	iorwf	___lldiv@divisor+1,w
  6335     0615  0435               	iorwf	___lldiv@divisor,w
  6336     0616  1903               	skipnz
  6337     0617  2E19               	goto	u1331
  6338     0618  2E1A               	goto	u1330
  6339     0619                     u1331:
  6340     0619  2E5B               	goto	l2139
  6341     061A                     u1330:
  6342     061A                     l2121:
  6343     061A  01C1               	clrf	___lldiv@counter
  6344     061B  0AC1               	incf	___lldiv@counter,f
  6345     061C  2E28               	goto	l2125
  6346     061D                     l2123:
  6347     061D  3001               	movlw	1
  6348     061E                     u1345:
  6349     061E  35B5               	lslf	___lldiv@divisor,f
  6350     061F  0DB6               	rlf	___lldiv@divisor+1,f
  6351     0620  0DB7               	rlf	___lldiv@divisor+2,f
  6352     0621  0DB8               	rlf	___lldiv@divisor+3,f
  6353     0622  0B89               	decfsz	9,f
  6354     0623  2E1E               	goto	u1345
  6355     0624  3001               	movlw	1
  6356     0625  00F5               	movwf	??___lldiv
  6357     0626  0875               	movf	??___lldiv,w
  6358     0627  07C1               	addwf	___lldiv@counter,f
  6359     0628                     l2125:
  6360     0628  1FB8               	btfss	___lldiv@divisor+3,7
  6361     0629  2E2B               	goto	u1351
  6362     062A  2E2C               	goto	u1350
  6363     062B                     u1351:
  6364     062B  2E1D               	goto	l2123
  6365     062C                     u1350:
  6366     062C                     l2127:
  6367     062C  3001               	movlw	1
  6368     062D                     u1365:
  6369     062D  35BD               	lslf	___lldiv@quotient,f
  6370     062E  0DBE               	rlf	___lldiv@quotient+1,f
  6371     062F  0DBF               	rlf	___lldiv@quotient+2,f
  6372     0630  0DC0               	rlf	___lldiv@quotient+3,f
  6373     0631  0B89               	decfsz	9,f
  6374     0632  2E2D               	goto	u1365
  6375     0633                     l2129:
  6376     0633  0838               	movf	___lldiv@divisor+3,w
  6377     0634  023C               	subwf	___lldiv@dividend+3,w
  6378     0635  1D03               	skipz
  6379     0636  2E41               	goto	u1375
  6380     0637  0837               	movf	___lldiv@divisor+2,w
  6381     0638  023B               	subwf	___lldiv@dividend+2,w
  6382     0639  1D03               	skipz
  6383     063A  2E41               	goto	u1375
  6384     063B  0836               	movf	___lldiv@divisor+1,w
  6385     063C  023A               	subwf	___lldiv@dividend+1,w
  6386     063D  1D03               	skipz
  6387     063E  2E41               	goto	u1375
  6388     063F  0835               	movf	___lldiv@divisor,w
  6389     0640  0239               	subwf	___lldiv@dividend,w
  6390     0641                     u1375:
  6391     0641  1C03               	skipc
  6392     0642  2E44               	goto	u1371
  6393     0643  2E45               	goto	u1370
  6394     0644                     u1371:
  6395     0644  2E4E               	goto	l2135
  6396     0645                     u1370:
  6397     0645                     l2131:
  6398     0645  0835               	movf	___lldiv@divisor,w
  6399     0646  02B9               	subwf	___lldiv@dividend,f
  6400     0647  0836               	movf	___lldiv@divisor+1,w
  6401     0648  3BBA               	subwfb	___lldiv@dividend+1,f
  6402     0649  0837               	movf	___lldiv@divisor+2,w
  6403     064A  3BBB               	subwfb	___lldiv@dividend+2,f
  6404     064B  0838               	movf	___lldiv@divisor+3,w
  6405     064C  3BBC               	subwfb	___lldiv@dividend+3,f
  6406     064D                     l2133:
  6407     064D  143D               	bsf	___lldiv@quotient,0
  6408     064E                     l2135:
  6409     064E  3001               	movlw	1
  6410     064F                     u1385:
  6411     064F  36B8               	lsrf	___lldiv@divisor+3,f
  6412     0650  0CB7               	rrf	___lldiv@divisor+2,f
  6413     0651  0CB6               	rrf	___lldiv@divisor+1,f
  6414     0652  0CB5               	rrf	___lldiv@divisor,f
  6415     0653  0B89               	decfsz	9,f
  6416     0654  2E4F               	goto	u1385
  6417     0655                     l2137:
  6418     0655  3001               	movlw	1
  6419     0656  02C1               	subwf	___lldiv@counter,f
  6420     0657  1D03               	btfss	3,2
  6421     0658  2E5A               	goto	u1391
  6422     0659  2E5B               	goto	u1390
  6423     065A                     u1391:
  6424     065A  2E2C               	goto	l2127
  6425     065B                     u1390:
  6426     065B                     l2139:
  6427     065B  0840               	movf	___lldiv@quotient+3,w
  6428     065C  00B8               	movwf	?___lldiv+3
  6429     065D  083F               	movf	___lldiv@quotient+2,w
  6430     065E  00B7               	movwf	?___lldiv+2
  6431     065F  083E               	movf	___lldiv@quotient+1,w
  6432     0660  00B6               	movwf	?___lldiv+1
  6433     0661  083D               	movf	___lldiv@quotient,w
  6434     0662  00B5               	movwf	?___lldiv
  6435     0663                     l653:
  6436     0663  0008               	return
  6437     0664                     __end_of___lldiv:
  6438                           
  6439                           	psect	text22
  6440     0531                     __ptext22:	
  6441 ;; *************** function _LcdPrintFloatS *****************
  6442 ;; Defined at:
  6443 ;;		line 167 in file "lcd.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  x               1    wreg     unsigned char 
  6446 ;;  y               1   12[BANK0 ] unsigned char 
  6447 ;;  num             2   13[BANK0 ] unsigned int 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  x               1   17[BANK0 ] unsigned char 
  6450 ;;  integerPart     1   19[BANK0 ] unsigned char 
  6451 ;;  decimalPlace    1   18[BANK0 ] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6461 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;Total ram usage:        8 bytes
  6466 ;; Hardware stack levels used: 1
  6467 ;; Hardware stack levels required when called: 4
  6468 ;; This function calls:
  6469 ;;		___awdiv
  6470 ;;		___awmod
  6471 ;;		___lwdiv
  6472 ;;		___lwmod
  6473 ;;		_lcd_print_charS
  6474 ;; This function is called by:
  6475 ;;		_FSM_ModeControl
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479     0531                     _LcdPrintFloatS:	
  6480                           ;psect for function _LcdPrintFloatS
  6481                           
  6482                           
  6483                           ;incstack = 0
  6484                           ; Regs used in _LcdPrintFloatS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6485                           ;LcdPrintFloatS@x stored from wreg
  6486     0531  0020               	movlb	0	; select bank0
  6487     0532  00B1               	movwf	LcdPrintFloatS@x
  6488     0533                     l3173:
  6489                           
  6490                           ;lcd.c: 167: void LcdPrintFloatS(unsigned char x, unsigned char y, unsigned int num);lcd
      +                          .c: 168: {;lcd.c: 169:     unsigned char integerPart, decimalPlaces;;lcd.c: 170:     cur
      +                          rent_row = x%2;
  6491     0533  0831               	movf	LcdPrintFloatS@x,w
  6492     0534  3901               	andlw	1
  6493     0535  00AF               	movwf	??_LcdPrintFloatS
  6494     0536  01B0               	clrf	??_LcdPrintFloatS+1
  6495     0537  082F               	movf	??_LcdPrintFloatS,w
  6496     0538  00E0               	movwf	_current_row
  6497     0539  0830               	movf	??_LcdPrintFloatS+1,w
  6498     053A  00E1               	movwf	_current_row+1
  6499                           
  6500                           ;lcd.c: 171:     current_col = y%16;
  6501     053B  082C               	movf	LcdPrintFloatS@y,w
  6502     053C  390F               	andlw	15
  6503     053D  00AF               	movwf	??_LcdPrintFloatS
  6504     053E  01B0               	clrf	??_LcdPrintFloatS+1
  6505     053F  082F               	movf	??_LcdPrintFloatS,w
  6506     0540  00DE               	movwf	_current_col
  6507     0541  0830               	movf	??_LcdPrintFloatS+1,w
  6508     0542  00DF               	movwf	_current_col+1
  6509     0543                     l3175:
  6510                           
  6511                           ;lcd.c: 173:     integerPart = num / 100;
  6512     0543  3064               	movlw	100
  6513     0544  00A4               	movwf	___lwdiv@divisor
  6514     0545  3000               	movlw	0
  6515     0546  00A5               	movwf	___lwdiv@divisor+1
  6516     0547  082E               	movf	LcdPrintFloatS@num+1,w
  6517     0548  00A7               	movwf	___lwdiv@dividend+1
  6518     0549  082D               	movf	LcdPrintFloatS@num,w
  6519     054A  00A6               	movwf	___lwdiv@dividend
  6520     054B  3187  2799  3185   	fcall	___lwdiv
  6521     054E  0020               	movlb	0	; select bank0
  6522     054F  0824               	movf	?___lwdiv,w
  6523     0550  00B3               	movwf	LcdPrintFloatS@integerPart
  6524     0551                     l3177:
  6525                           
  6526                           ;lcd.c: 174:     decimalPlaces = (num % 100 ) / 10;
  6527     0551  300A               	movlw	10
  6528     0552  00A4               	movwf	___lwdiv@divisor
  6529     0553  3000               	movlw	0
  6530     0554  00A5               	movwf	___lwdiv@divisor+1
  6531     0555  082E               	movf	LcdPrintFloatS@num+1,w
  6532     0556  00A3               	movwf	___lwmod@dividend+1
  6533     0557  082D               	movf	LcdPrintFloatS@num,w
  6534     0558  00A2               	movwf	___lwmod@dividend
  6535     0559  3064               	movlw	100
  6536     055A  00A0               	movwf	___lwmod@divisor
  6537     055B  3000               	movlw	0
  6538     055C  00A1               	movwf	___lwmod@divisor+1
  6539     055D  318F  275C  3185   	fcall	___lwmod
  6540     0560  0020               	movlb	0	; select bank0
  6541     0561  0821               	movf	?___lwmod+1,w
  6542     0562  00A7               	movwf	___lwdiv@dividend+1
  6543     0563  0820               	movf	?___lwmod,w
  6544     0564  00A6               	movwf	___lwdiv@dividend
  6545     0565  3187  2799  3185   	fcall	___lwdiv
  6546     0568  0020               	movlb	0	; select bank0
  6547     0569  0824               	movf	?___lwdiv,w
  6548     056A  00B2               	movwf	LcdPrintFloatS@decimalPlaces
  6549     056B                     l3179:
  6550                           
  6551                           ;lcd.c: 176:     if(integerPart >= 10) lcd_print_charS(integerPart / 10 + '0');
  6552     056B  300A               	movlw	10
  6553     056C  0233               	subwf	LcdPrintFloatS@integerPart,w
  6554     056D  1C03               	skipc
  6555     056E  2D70               	goto	u2881
  6556     056F  2D71               	goto	u2880
  6557     0570                     u2881:
  6558     0570  2D85               	goto	l372
  6559     0571                     u2880:
  6560     0571                     l3181:
  6561     0571  300A               	movlw	10
  6562     0572  00A0               	movwf	___awdiv@divisor
  6563     0573  3000               	movlw	0
  6564     0574  00A1               	movwf	___awdiv@divisor+1
  6565     0575  0833               	movf	LcdPrintFloatS@integerPart,w
  6566     0576  00AF               	movwf	??_LcdPrintFloatS
  6567     0577  01B0               	clrf	??_LcdPrintFloatS+1
  6568     0578  082F               	movf	??_LcdPrintFloatS,w
  6569     0579  00A2               	movwf	___awdiv@dividend
  6570     057A  0830               	movf	??_LcdPrintFloatS+1,w
  6571     057B  00A3               	movwf	___awdiv@dividend+1
  6572     057C  3185  25A9  3185   	fcall	___awdiv
  6573     057F  0020               	movlb	0	; select bank0
  6574     0580  0820               	movf	?___awdiv,w
  6575     0581  3E30               	addlw	48
  6576     0582  318D  251B  3185   	fcall	_lcd_print_charS
  6577     0585                     l372:
  6578                           
  6579                           ;lcd.c: 178:     lcd_print_charS(integerPart % 10 + '0');
  6580     0585  300A               	movlw	10
  6581     0586  0020               	movlb	0	; select bank0
  6582     0587  00A0               	movwf	___awmod@divisor
  6583     0588  3000               	movlw	0
  6584     0589  00A1               	movwf	___awmod@divisor+1
  6585     058A  0833               	movf	LcdPrintFloatS@integerPart,w
  6586     058B  00AF               	movwf	??_LcdPrintFloatS
  6587     058C  01B0               	clrf	??_LcdPrintFloatS+1
  6588     058D  082F               	movf	??_LcdPrintFloatS,w
  6589     058E  00A2               	movwf	___awmod@dividend
  6590     058F  0830               	movf	??_LcdPrintFloatS+1,w
  6591     0590  00A3               	movwf	___awmod@dividend+1
  6592     0591  3186  26B8  3185   	fcall	___awmod
  6593     0594  0020               	movlb	0	; select bank0
  6594     0595  0820               	movf	?___awmod,w
  6595     0596  3E30               	addlw	48
  6596     0597  318D  251B  3185   	fcall	_lcd_print_charS
  6597                           
  6598                           ;lcd.c: 179:     lcd_print_charS('.');
  6599     059A  302E               	movlw	46
  6600     059B  318D  251B  3185   	fcall	_lcd_print_charS
  6601                           
  6602                           ;lcd.c: 180:     lcd_print_charS(decimalPlaces + '0');
  6603     059E  0020               	movlb	0	; select bank0
  6604     059F  0832               	movf	LcdPrintFloatS@decimalPlaces,w
  6605     05A0  3E30               	addlw	48
  6606     05A1  318D  251B  3185   	fcall	_lcd_print_charS
  6607                           
  6608                           ;lcd.c: 181:     lcd_print_charS(' ');
  6609     05A4  3020               	movlw	32
  6610     05A5  318D  251B  3185   	fcall	_lcd_print_charS
  6611     05A8                     l373:
  6612     05A8  0008               	return
  6613     05A9                     __end_of_LcdPrintFloatS:
  6614                           
  6615                           	psect	text23
  6616     0D1B                     __ptext23:	
  6617 ;; *************** function _lcd_print_charS *****************
  6618 ;; Defined at:
  6619 ;;		line 154 in file "lcd.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  c               1    wreg     unsigned char 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  c               1    4[COMMON] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;Total ram usage:        4 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 3
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_LcdPrintFloatS
  6644 ;;		_LcdPrintNumS
  6645 ;;		_LcdPrintStringS
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649     0D1B                     _lcd_print_charS:	
  6650                           ;psect for function _lcd_print_charS
  6651                           
  6652                           
  6653                           ;incstack = 0
  6654                           ; Regs used in _lcd_print_charS: [wreg+fsr1l+fsr1h+status,2+status,0]
  6655                           ;lcd_print_charS@c stored from wreg
  6656     0D1B  00F4               	movwf	lcd_print_charS@c
  6657     0D1C                     l3023:
  6658                           
  6659                           ;lcd.c: 154: void lcd_print_charS(unsigned char c);lcd.c: 155: {;lcd.c: 156:     LcdScre
      +                          en[current_row][ current_col] = c;
  6660     0D1C  0020               	movlb	0	; select bank0
  6661     0D1D  0860               	movf	_current_row,w
  6662     0D1E  00A0               	movwf	??_lcd_print_charS
  6663     0D1F  3004               	movlw	4
  6664     0D20                     u2545:
  6665     0D20  35A0               	lslf	??_lcd_print_charS,f
  6666     0D21  0B89               	decfsz	9,f
  6667     0D22  2D20               	goto	u2545
  6668     0D23  30A0               	movlw	(low (_LcdScreen| 0))& (0+255)
  6669     0D24  0720               	addwf	??_lcd_print_charS,w
  6670     0D25  00A1               	movwf	??_lcd_print_charS+1
  6671     0D26  085E               	movf	_current_col,w
  6672     0D27  0721               	addwf	??_lcd_print_charS+1,w
  6673     0D28  00A2               	movwf	??_lcd_print_charS+2
  6674     0D29  0822               	movf	??_lcd_print_charS+2,w
  6675     0D2A  0086               	movwf	6
  6676     0D2B  0187               	clrf	7
  6677     0D2C  0874               	movf	lcd_print_charS@c,w
  6678     0D2D  0081               	movwf	1
  6679     0D2E                     l3025:
  6680                           
  6681                           ;lcd.c: 157:     current_col ++;
  6682     0D2E  3001               	movlw	1
  6683     0D2F  07DE               	addwf	_current_col,f
  6684     0D30  3000               	movlw	0
  6685     0D31  3DDF               	addwfc	_current_col+1,f
  6686     0D32                     l366:
  6687     0D32  0008               	return
  6688     0D33                     __end_of_lcd_print_charS:
  6689                           
  6690                           	psect	text24
  6691     0F5C                     __ptext24:	
  6692 ;; *************** function ___lwmod *****************
  6693 ;; Defined at:
  6694 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  divisor         2    0[BANK0 ] unsigned int 
  6697 ;;  dividend        2    2[BANK0 ] unsigned int 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  counter         1    5[COMMON] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  2    0[BANK0 ] unsigned int 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;Total ram usage:        6 bytes
  6714 ;; Hardware stack levels used: 1
  6715 ;; Hardware stack levels required when called: 3
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_LcdPrintFloatS
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723     0F5C                     ___lwmod:	
  6724                           ;psect for function ___lwmod
  6725                           
  6726     0F5C                     l3133:	
  6727                           ;incstack = 0
  6728                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6729                           
  6730     0F5C  0020               	movlb	0	; select bank0
  6731     0F5D  0820               	movf	___lwmod@divisor,w
  6732     0F5E  0421               	iorwf	___lwmod@divisor+1,w
  6733     0F5F  1903               	btfsc	3,2
  6734     0F60  2F62               	goto	u2781
  6735     0F61  2F63               	goto	u2780
  6736     0F62                     u2781:
  6737     0F62  2F8C               	goto	l3151
  6738     0F63                     u2780:
  6739     0F63                     l3135:
  6740     0F63  01F5               	clrf	___lwmod@counter
  6741     0F64  0AF5               	incf	___lwmod@counter,f
  6742     0F65  2F6F               	goto	l3141
  6743     0F66                     l3137:
  6744     0F66  3001               	movlw	1
  6745     0F67                     u2795:
  6746     0F67  35A0               	lslf	___lwmod@divisor,f
  6747     0F68  0DA1               	rlf	___lwmod@divisor+1,f
  6748     0F69  0B89               	decfsz	9,f
  6749     0F6A  2F67               	goto	u2795
  6750     0F6B                     l3139:
  6751     0F6B  3001               	movlw	1
  6752     0F6C  00F4               	movwf	??___lwmod
  6753     0F6D  0874               	movf	??___lwmod,w
  6754     0F6E  07F5               	addwf	___lwmod@counter,f
  6755     0F6F                     l3141:
  6756     0F6F  1FA1               	btfss	___lwmod@divisor+1,7
  6757     0F70  2F72               	goto	u2801
  6758     0F71  2F73               	goto	u2800
  6759     0F72                     u2801:
  6760     0F72  2F66               	goto	l3137
  6761     0F73                     u2800:
  6762     0F73                     l3143:
  6763     0F73  0821               	movf	___lwmod@divisor+1,w
  6764     0F74  0223               	subwf	___lwmod@dividend+1,w
  6765     0F75  1D03               	skipz
  6766     0F76  2F79               	goto	u2815
  6767     0F77  0820               	movf	___lwmod@divisor,w
  6768     0F78  0222               	subwf	___lwmod@dividend,w
  6769     0F79                     u2815:
  6770     0F79  1C03               	skipc
  6771     0F7A  2F7C               	goto	u2811
  6772     0F7B  2F7D               	goto	u2810
  6773     0F7C                     u2811:
  6774     0F7C  2F81               	goto	l3147
  6775     0F7D                     u2810:
  6776     0F7D                     l3145:
  6777     0F7D  0820               	movf	___lwmod@divisor,w
  6778     0F7E  02A2               	subwf	___lwmod@dividend,f
  6779     0F7F  0821               	movf	___lwmod@divisor+1,w
  6780     0F80  3BA3               	subwfb	___lwmod@dividend+1,f
  6781     0F81                     l3147:
  6782     0F81  3001               	movlw	1
  6783     0F82                     u2825:
  6784     0F82  36A1               	lsrf	___lwmod@divisor+1,f
  6785     0F83  0CA0               	rrf	___lwmod@divisor,f
  6786     0F84  0B89               	decfsz	9,f
  6787     0F85  2F82               	goto	u2825
  6788     0F86                     l3149:
  6789     0F86  3001               	movlw	1
  6790     0F87  02F5               	subwf	___lwmod@counter,f
  6791     0F88  1D03               	btfss	3,2
  6792     0F89  2F8B               	goto	u2831
  6793     0F8A  2F8C               	goto	u2830
  6794     0F8B                     u2831:
  6795     0F8B  2F73               	goto	l3143
  6796     0F8C                     u2830:
  6797     0F8C                     l3151:
  6798     0F8C  0823               	movf	___lwmod@dividend+1,w
  6799     0F8D  00A1               	movwf	?___lwmod+1
  6800     0F8E  0822               	movf	___lwmod@dividend,w
  6801     0F8F  00A0               	movwf	?___lwmod
  6802     0F90                     l907:
  6803     0F90  0008               	return
  6804     0F91                     __end_of___lwmod:
  6805                           
  6806                           	psect	text25
  6807     06B8                     __ptext25:	
  6808 ;; *************** function ___awmod *****************
  6809 ;; Defined at:
  6810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  divisor         2    0[BANK0 ] int 
  6813 ;;  dividend        2    2[BANK0 ] int 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  sign            1    5[BANK0 ] unsigned char 
  6816 ;;  counter         1    4[BANK0 ] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  2    0[BANK0 ] int 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6826 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;Total ram usage:        7 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 3
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_LcdPrintFloatS
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840     06B8                     ___awmod:	
  6841                           ;psect for function ___awmod
  6842                           
  6843     06B8                     l3095:	
  6844                           ;incstack = 0
  6845                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6846                           
  6847     06B8  0020               	movlb	0	; select bank0
  6848     06B9  01A5               	clrf	___awmod@sign
  6849     06BA                     l3097:
  6850     06BA  1FA3               	btfss	___awmod@dividend+1,7
  6851     06BB  2EBD               	goto	u2691
  6852     06BC  2EBE               	goto	u2690
  6853     06BD                     u2691:
  6854     06BD  2EC5               	goto	l3103
  6855     06BE                     u2690:
  6856     06BE                     l3099:
  6857     06BE  09A2               	comf	___awmod@dividend,f
  6858     06BF  09A3               	comf	___awmod@dividend+1,f
  6859     06C0  0AA2               	incf	___awmod@dividend,f
  6860     06C1  1903               	skipnz
  6861     06C2  0AA3               	incf	___awmod@dividend+1,f
  6862     06C3                     l3101:
  6863     06C3  01A5               	clrf	___awmod@sign
  6864     06C4  0AA5               	incf	___awmod@sign,f
  6865     06C5                     l3103:
  6866     06C5  1FA1               	btfss	___awmod@divisor+1,7
  6867     06C6  2EC8               	goto	u2701
  6868     06C7  2EC9               	goto	u2700
  6869     06C8                     u2701:
  6870     06C8  2ECE               	goto	l3107
  6871     06C9                     u2700:
  6872     06C9                     l3105:
  6873     06C9  09A0               	comf	___awmod@divisor,f
  6874     06CA  09A1               	comf	___awmod@divisor+1,f
  6875     06CB  0AA0               	incf	___awmod@divisor,f
  6876     06CC  1903               	skipnz
  6877     06CD  0AA1               	incf	___awmod@divisor+1,f
  6878     06CE                     l3107:
  6879     06CE  0820               	movf	___awmod@divisor,w
  6880     06CF  0421               	iorwf	___awmod@divisor+1,w
  6881     06D0  1903               	btfsc	3,2
  6882     06D1  2ED3               	goto	u2711
  6883     06D2  2ED4               	goto	u2710
  6884     06D3                     u2711:
  6885     06D3  2EFD               	goto	l3125
  6886     06D4                     u2710:
  6887     06D4                     l3109:
  6888     06D4  01A4               	clrf	___awmod@counter
  6889     06D5  0AA4               	incf	___awmod@counter,f
  6890     06D6  2EE0               	goto	l3115
  6891     06D7                     l3111:
  6892     06D7  3001               	movlw	1
  6893     06D8                     u2725:
  6894     06D8  35A0               	lslf	___awmod@divisor,f
  6895     06D9  0DA1               	rlf	___awmod@divisor+1,f
  6896     06DA  0B89               	decfsz	9,f
  6897     06DB  2ED8               	goto	u2725
  6898     06DC                     l3113:
  6899     06DC  3001               	movlw	1
  6900     06DD  00F4               	movwf	??___awmod
  6901     06DE  0874               	movf	??___awmod,w
  6902     06DF  07A4               	addwf	___awmod@counter,f
  6903     06E0                     l3115:
  6904     06E0  1FA1               	btfss	___awmod@divisor+1,7
  6905     06E1  2EE3               	goto	u2731
  6906     06E2  2EE4               	goto	u2730
  6907     06E3                     u2731:
  6908     06E3  2ED7               	goto	l3111
  6909     06E4                     u2730:
  6910     06E4                     l3117:
  6911     06E4  0821               	movf	___awmod@divisor+1,w
  6912     06E5  0223               	subwf	___awmod@dividend+1,w
  6913     06E6  1D03               	skipz
  6914     06E7  2EEA               	goto	u2745
  6915     06E8  0820               	movf	___awmod@divisor,w
  6916     06E9  0222               	subwf	___awmod@dividend,w
  6917     06EA                     u2745:
  6918     06EA  1C03               	skipc
  6919     06EB  2EED               	goto	u2741
  6920     06EC  2EEE               	goto	u2740
  6921     06ED                     u2741:
  6922     06ED  2EF2               	goto	l3121
  6923     06EE                     u2740:
  6924     06EE                     l3119:
  6925     06EE  0820               	movf	___awmod@divisor,w
  6926     06EF  02A2               	subwf	___awmod@dividend,f
  6927     06F0  0821               	movf	___awmod@divisor+1,w
  6928     06F1  3BA3               	subwfb	___awmod@dividend+1,f
  6929     06F2                     l3121:
  6930     06F2  3001               	movlw	1
  6931     06F3                     u2755:
  6932     06F3  36A1               	lsrf	___awmod@divisor+1,f
  6933     06F4  0CA0               	rrf	___awmod@divisor,f
  6934     06F5  0B89               	decfsz	9,f
  6935     06F6  2EF3               	goto	u2755
  6936     06F7                     l3123:
  6937     06F7  3001               	movlw	1
  6938     06F8  02A4               	subwf	___awmod@counter,f
  6939     06F9  1D03               	btfss	3,2
  6940     06FA  2EFC               	goto	u2761
  6941     06FB  2EFD               	goto	u2760
  6942     06FC                     u2761:
  6943     06FC  2EE4               	goto	l3117
  6944     06FD                     u2760:
  6945     06FD                     l3125:
  6946     06FD  0825               	movf	___awmod@sign,w
  6947     06FE  1903               	btfsc	3,2
  6948     06FF  2F01               	goto	u2771
  6949     0700  2F02               	goto	u2770
  6950     0701                     u2771:
  6951     0701  2F07               	goto	l3129
  6952     0702                     u2770:
  6953     0702                     l3127:
  6954     0702  09A2               	comf	___awmod@dividend,f
  6955     0703  09A3               	comf	___awmod@dividend+1,f
  6956     0704  0AA2               	incf	___awmod@dividend,f
  6957     0705  1903               	skipnz
  6958     0706  0AA3               	incf	___awmod@dividend+1,f
  6959     0707                     l3129:
  6960     0707  0823               	movf	___awmod@dividend+1,w
  6961     0708  00A1               	movwf	?___awmod+1
  6962     0709  0822               	movf	___awmod@dividend,w
  6963     070A  00A0               	movwf	?___awmod
  6964     070B                     l783:
  6965     070B  0008               	return
  6966     070C                     __end_of___awmod:
  6967                           
  6968                           	psect	text26
  6969     05A9                     __ptext26:	
  6970 ;; *************** function ___awdiv *****************
  6971 ;; Defined at:
  6972 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  divisor         2    0[BANK0 ] int 
  6975 ;;  dividend        2    2[BANK0 ] int 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  quotient        2    6[BANK0 ] int 
  6978 ;;  sign            1    5[BANK0 ] unsigned char 
  6979 ;;  counter         1    4[BANK0 ] unsigned char 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  2    0[BANK0 ] int 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6989 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;Total ram usage:        9 bytes
  6994 ;; Hardware stack levels used: 1
  6995 ;; Hardware stack levels required when called: 3
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_LcdPrintFloatS
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003     05A9                     ___awdiv:	
  7004                           ;psect for function ___awdiv
  7005                           
  7006     05A9                     l3051:	
  7007                           ;incstack = 0
  7008                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7009                           
  7010     05A9  0020               	movlb	0	; select bank0
  7011     05AA  01A5               	clrf	___awdiv@sign
  7012     05AB                     l3053:
  7013     05AB  1FA1               	btfss	___awdiv@divisor+1,7
  7014     05AC  2DAE               	goto	u2591
  7015     05AD  2DAF               	goto	u2590
  7016     05AE                     u2591:
  7017     05AE  2DB6               	goto	l3059
  7018     05AF                     u2590:
  7019     05AF                     l3055:
  7020     05AF  09A0               	comf	___awdiv@divisor,f
  7021     05B0  09A1               	comf	___awdiv@divisor+1,f
  7022     05B1  0AA0               	incf	___awdiv@divisor,f
  7023     05B2  1903               	skipnz
  7024     05B3  0AA1               	incf	___awdiv@divisor+1,f
  7025     05B4                     l3057:
  7026     05B4  01A5               	clrf	___awdiv@sign
  7027     05B5  0AA5               	incf	___awdiv@sign,f
  7028     05B6                     l3059:
  7029     05B6  1FA3               	btfss	___awdiv@dividend+1,7
  7030     05B7  2DB9               	goto	u2601
  7031     05B8  2DBA               	goto	u2600
  7032     05B9                     u2601:
  7033     05B9  2DC3               	goto	l3065
  7034     05BA                     u2600:
  7035     05BA                     l3061:
  7036     05BA  09A2               	comf	___awdiv@dividend,f
  7037     05BB  09A3               	comf	___awdiv@dividend+1,f
  7038     05BC  0AA2               	incf	___awdiv@dividend,f
  7039     05BD  1903               	skipnz
  7040     05BE  0AA3               	incf	___awdiv@dividend+1,f
  7041     05BF                     l3063:
  7042     05BF  3001               	movlw	1
  7043     05C0  00F4               	movwf	??___awdiv
  7044     05C1  0874               	movf	??___awdiv,w
  7045     05C2  06A5               	xorwf	___awdiv@sign,f
  7046     05C3                     l3065:
  7047     05C3  01A6               	clrf	___awdiv@quotient
  7048     05C4  01A7               	clrf	___awdiv@quotient+1
  7049     05C5                     l3067:
  7050     05C5  0820               	movf	___awdiv@divisor,w
  7051     05C6  0421               	iorwf	___awdiv@divisor+1,w
  7052     05C7  1903               	btfsc	3,2
  7053     05C8  2DCA               	goto	u2611
  7054     05C9  2DCB               	goto	u2610
  7055     05CA                     u2611:
  7056     05CA  2DFA               	goto	l3087
  7057     05CB                     u2610:
  7058     05CB                     l3069:
  7059     05CB  01A4               	clrf	___awdiv@counter
  7060     05CC  0AA4               	incf	___awdiv@counter,f
  7061     05CD  2DD7               	goto	l3075
  7062     05CE                     l3071:
  7063     05CE  3001               	movlw	1
  7064     05CF                     u2625:
  7065     05CF  35A0               	lslf	___awdiv@divisor,f
  7066     05D0  0DA1               	rlf	___awdiv@divisor+1,f
  7067     05D1  0B89               	decfsz	9,f
  7068     05D2  2DCF               	goto	u2625
  7069     05D3                     l3073:
  7070     05D3  3001               	movlw	1
  7071     05D4  00F4               	movwf	??___awdiv
  7072     05D5  0874               	movf	??___awdiv,w
  7073     05D6  07A4               	addwf	___awdiv@counter,f
  7074     05D7                     l3075:
  7075     05D7  1FA1               	btfss	___awdiv@divisor+1,7
  7076     05D8  2DDA               	goto	u2631
  7077     05D9  2DDB               	goto	u2630
  7078     05DA                     u2631:
  7079     05DA  2DCE               	goto	l3071
  7080     05DB                     u2630:
  7081     05DB                     l3077:
  7082     05DB  3001               	movlw	1
  7083     05DC                     u2645:
  7084     05DC  35A6               	lslf	___awdiv@quotient,f
  7085     05DD  0DA7               	rlf	___awdiv@quotient+1,f
  7086     05DE  0B89               	decfsz	9,f
  7087     05DF  2DDC               	goto	u2645
  7088     05E0  0821               	movf	___awdiv@divisor+1,w
  7089     05E1  0223               	subwf	___awdiv@dividend+1,w
  7090     05E2  1D03               	skipz
  7091     05E3  2DE6               	goto	u2655
  7092     05E4  0820               	movf	___awdiv@divisor,w
  7093     05E5  0222               	subwf	___awdiv@dividend,w
  7094     05E6                     u2655:
  7095     05E6  1C03               	skipc
  7096     05E7  2DE9               	goto	u2651
  7097     05E8  2DEA               	goto	u2650
  7098     05E9                     u2651:
  7099     05E9  2DEF               	goto	l3083
  7100     05EA                     u2650:
  7101     05EA                     l3079:
  7102     05EA  0820               	movf	___awdiv@divisor,w
  7103     05EB  02A2               	subwf	___awdiv@dividend,f
  7104     05EC  0821               	movf	___awdiv@divisor+1,w
  7105     05ED  3BA3               	subwfb	___awdiv@dividend+1,f
  7106     05EE                     l3081:
  7107     05EE  1426               	bsf	___awdiv@quotient,0
  7108     05EF                     l3083:
  7109     05EF  3001               	movlw	1
  7110     05F0                     u2665:
  7111     05F0  36A1               	lsrf	___awdiv@divisor+1,f
  7112     05F1  0CA0               	rrf	___awdiv@divisor,f
  7113     05F2  0B89               	decfsz	9,f
  7114     05F3  2DF0               	goto	u2665
  7115     05F4                     l3085:
  7116     05F4  3001               	movlw	1
  7117     05F5  02A4               	subwf	___awdiv@counter,f
  7118     05F6  1D03               	btfss	3,2
  7119     05F7  2DF9               	goto	u2671
  7120     05F8  2DFA               	goto	u2670
  7121     05F9                     u2671:
  7122     05F9  2DDB               	goto	l3077
  7123     05FA                     u2670:
  7124     05FA                     l3087:
  7125     05FA  0825               	movf	___awdiv@sign,w
  7126     05FB  1903               	btfsc	3,2
  7127     05FC  2DFE               	goto	u2681
  7128     05FD  2DFF               	goto	u2680
  7129     05FE                     u2681:
  7130     05FE  2E04               	goto	l3091
  7131     05FF                     u2680:
  7132     05FF                     l3089:
  7133     05FF  09A6               	comf	___awdiv@quotient,f
  7134     0600  09A7               	comf	___awdiv@quotient+1,f
  7135     0601  0AA6               	incf	___awdiv@quotient,f
  7136     0602  1903               	skipnz
  7137     0603  0AA7               	incf	___awdiv@quotient+1,f
  7138     0604                     l3091:
  7139     0604  0827               	movf	___awdiv@quotient+1,w
  7140     0605  00A1               	movwf	?___awdiv+1
  7141     0606  0826               	movf	___awdiv@quotient,w
  7142     0607  00A0               	movwf	?___awdiv
  7143     0608                     l770:
  7144     0608  0008               	return
  7145     0609                     __end_of___awdiv:
  7146                           
  7147                           	psect	text27
  7148     0E05                     __ptext27:	
  7149 ;; *************** function _LcdPrintCharS *****************
  7150 ;; Defined at:
  7151 ;;		line 160 in file "lcd.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  x               1    wreg     unsigned char 
  7154 ;;  y               1    4[COMMON] unsigned char 
  7155 ;;  c               1    5[COMMON] unsigned char 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  x               1    3[BANK0 ] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;Total ram usage:        6 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; Hardware stack levels required when called: 3
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		_FSM_ModeControl
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181     0E05                     _LcdPrintCharS:	
  7182                           ;psect for function _LcdPrintCharS
  7183                           
  7184                           
  7185                           ;incstack = 0
  7186                           ; Regs used in _LcdPrintCharS: [wreg+fsr1l+fsr1h+status,2+status,0]
  7187                           ;LcdPrintCharS@x stored from wreg
  7188     0E05  0020               	movlb	0	; select bank0
  7189     0E06  00A3               	movwf	LcdPrintCharS@x
  7190     0E07                     l3219:
  7191                           
  7192                           ;lcd.c: 160: void LcdPrintCharS(unsigned char x, unsigned char y, unsigned char c);lcd.c
      +                          : 161: {;lcd.c: 162:     current_row = x%2;
  7193     0E07  0823               	movf	LcdPrintCharS@x,w
  7194     0E08  3901               	andlw	1
  7195     0E09  00A0               	movwf	??_LcdPrintCharS
  7196     0E0A  01A1               	clrf	??_LcdPrintCharS+1
  7197     0E0B  0820               	movf	??_LcdPrintCharS,w
  7198     0E0C  00E0               	movwf	_current_row
  7199     0E0D  0821               	movf	??_LcdPrintCharS+1,w
  7200     0E0E  00E1               	movwf	_current_row+1
  7201                           
  7202                           ;lcd.c: 163:     current_col = y%16;
  7203     0E0F  0874               	movf	LcdPrintCharS@y,w
  7204     0E10  390F               	andlw	15
  7205     0E11  00A0               	movwf	??_LcdPrintCharS
  7206     0E12  01A1               	clrf	??_LcdPrintCharS+1
  7207     0E13  0820               	movf	??_LcdPrintCharS,w
  7208     0E14  00DE               	movwf	_current_col
  7209     0E15  0821               	movf	??_LcdPrintCharS+1,w
  7210     0E16  00DF               	movwf	_current_col+1
  7211     0E17                     l3221:
  7212                           
  7213                           ;lcd.c: 164:     LcdScreen[current_row][ current_col] = c;
  7214     0E17  0860               	movf	_current_row,w
  7215     0E18  00A0               	movwf	??_LcdPrintCharS
  7216     0E19  3004               	movlw	4
  7217     0E1A                     u2935:
  7218     0E1A  35A0               	lslf	??_LcdPrintCharS,f
  7219     0E1B  0B89               	decfsz	9,f
  7220     0E1C  2E1A               	goto	u2935
  7221     0E1D  30A0               	movlw	(low (_LcdScreen| 0))& (0+255)
  7222     0E1E  0720               	addwf	??_LcdPrintCharS,w
  7223     0E1F  00A1               	movwf	??_LcdPrintCharS+1
  7224     0E20  085E               	movf	_current_col,w
  7225     0E21  0721               	addwf	??_LcdPrintCharS+1,w
  7226     0E22  00A2               	movwf	??_LcdPrintCharS+2
  7227     0E23  0822               	movf	??_LcdPrintCharS+2,w
  7228     0E24  0086               	movwf	6
  7229     0E25  0187               	clrf	7
  7230     0E26  0875               	movf	LcdPrintCharS@c,w
  7231     0E27  0081               	movwf	1
  7232     0E28                     l369:
  7233     0E28  0008               	return
  7234     0E29                     __end_of_LcdPrintCharS:
  7235                           
  7236                           	psect	text28
  7237     0C89                     __ptext28:	
  7238 ;; *************** function _EEP_SaveCupTotal *****************
  7239 ;; Defined at:
  7240 ;;		line 39 in file "eeprom.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0, pclath, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;Total ram usage:        0 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 4
  7261 ;; This function calls:
  7262 ;;		_eeprom_write
  7263 ;; This function is called by:
  7264 ;;		_FSM_ModeControl
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268     0C89                     _EEP_SaveCupTotal:	
  7269                           ;psect for function _EEP_SaveCupTotal
  7270                           
  7271     0C89                     l3223:	
  7272                           ;incstack = 0
  7273                           ; Regs used in _EEP_SaveCupTotal: [wreg+status,2+status,0+pclath+cstack]
  7274                           
  7275                           
  7276                           ;eeprom.c: 40:     eeprom_write(0x02, _cupTotal);
  7277     0C89  0020               	movlb	0	; select bank0
  7278     0C8A  0866               	movf	__cupTotal,w
  7279     0C8B  00F4               	movwf	eeprom_write@value
  7280     0C8C  3002               	movlw	2
  7281     0C8D  318E  26F8  318C   	fcall	_eeprom_write
  7282                           
  7283                           ;eeprom.c: 41:     eeprom_write(0x03, _cupTotal >> 8);
  7284     0C90  0020               	movlb	0	; select bank0
  7285     0C91  0867               	movf	__cupTotal+1,w
  7286     0C92  00F4               	movwf	eeprom_write@value
  7287     0C93  3003               	movlw	3
  7288     0C94  318E  26F8  318C   	fcall	_eeprom_write
  7289     0C97                     l423:
  7290     0C97  0008               	return
  7291     0C98                     __end_of_EEP_SaveCupTotal:
  7292                           
  7293                           	psect	text29
  7294     0C6D                     __ptext29:	
  7295 ;; *************** function _EEP_SaveAutoTime *****************
  7296 ;; Defined at:
  7297 ;;		line 34 in file "eeprom.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 4
  7318 ;; This function calls:
  7319 ;;		_eeprom_write
  7320 ;; This function is called by:
  7321 ;;		_FSM_ModeControl
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325     0C6D                     _EEP_SaveAutoTime:	
  7326                           ;psect for function _EEP_SaveAutoTime
  7327                           
  7328     0C6D                     l3217:	
  7329                           ;incstack = 0
  7330                           ; Regs used in _EEP_SaveAutoTime: [wreg+status,2+status,0+pclath+cstack]
  7331                           
  7332                           
  7333                           ;eeprom.c: 35:     eeprom_write(0x00, _timeAuto);
  7334     0C6D  0878               	movf	__timeAuto,w
  7335     0C6E  00F4               	movwf	eeprom_write@value
  7336     0C6F  3000               	movlw	0
  7337     0C70  318E  26F8  318C   	fcall	_eeprom_write
  7338                           
  7339                           ;eeprom.c: 36:     eeprom_write(0x01, _timeAuto >> 8);
  7340     0C73  0879               	movf	__timeAuto+1,w
  7341     0C74  00F4               	movwf	eeprom_write@value
  7342     0C75  3001               	movlw	1
  7343     0C76  318E  26F8  318C   	fcall	_eeprom_write
  7344     0C79                     l420:
  7345     0C79  0008               	return
  7346     0C7A                     __end_of_EEP_SaveAutoTime:
  7347                           
  7348                           	psect	text30
  7349     0EF8                     __ptext30:	
  7350 ;; *************** function _eeprom_write *****************
  7351 ;; Defined at:
  7352 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  addr            1    wreg     unsigned char 
  7355 ;;  value           1    4[COMMON] unsigned char 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  addr            1    5[COMMON] unsigned char 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7371 ;;Total ram usage:        4 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; Hardware stack levels required when called: 3
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		_EEP_SaveAutoTime
  7378 ;;		_EEP_SaveCupTotal
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382     0EF8                     _eeprom_write:	
  7383                           ;psect for function _eeprom_write
  7384                           
  7385                           
  7386                           ;incstack = 0
  7387                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  7388                           ;eeprom_write@addr stored from wreg
  7389     0EF8  00F5               	movwf	eeprom_write@addr
  7390     0EF9                     l606:	
  7391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\pic\__eewrite.c: 7: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  7392                           
  7393     0EF9                     l607:
  7394     0EF9  0023               	movlb	3	; select bank3
  7395     0EFA  1895               	btfsc	21,1	;volsfr
  7396     0EFB  2EFD               	goto	u2551
  7397     0EFC  2EFE               	goto	u2550
  7398     0EFD                     u2551:
  7399     0EFD  2EF9               	goto	l607
  7400     0EFE                     u2550:
  7401     0EFE                     l3027:
  7402     0EFE  0875               	movf	eeprom_write@addr,w
  7403     0EFF  0020               	movlb	0	; select bank0
  7404     0F00  00A0               	movwf	??_eeprom_write
  7405     0F01  01A1               	clrf	??_eeprom_write+1
  7406     0F02  0820               	movf	??_eeprom_write,w
  7407     0F03  0023               	movlb	3	; select bank3
  7408     0F04  0091               	movwf	17	;volatile
  7409     0F05  0020               	movlb	0	; select bank0
  7410     0F06  0821               	movf	??_eeprom_write+1,w
  7411     0F07  0023               	movlb	3	; select bank3
  7412     0F08  0092               	movwf	18	;volatile
  7413     0F09  0874               	movf	eeprom_write@value,w
  7414     0F0A  0093               	movwf	19	;volatile
  7415     0F0B                     l3029:
  7416     0F0B  303F               	movlw	63
  7417     0F0C  0020               	movlb	0	; select bank0
  7418     0F0D  00A0               	movwf	??_eeprom_write
  7419     0F0E  0820               	movf	??_eeprom_write,w
  7420     0F0F  0023               	movlb	3	; select bank3
  7421     0F10  0595               	andwf	21,f	;volsfr
  7422     0F11                     l3031:
  7423     0F11  0020               	movlb	0	; select bank0
  7424     0F12  1003               	bcf	3,0	;volatile
  7425     0F13                     l3033:
  7426     0F13  1F8B               	btfss	11,7	;volatile
  7427     0F14  2F16               	goto	u2561
  7428     0F15  2F17               	goto	u2560
  7429     0F16                     u2561:
  7430     0F16  2F18               	goto	l610
  7431     0F17                     u2560:
  7432     0F17                     l3035:
  7433     0F17  1403               	bsf	3,0	;volatile
  7434     0F18                     l610:
  7435     0F18  138B               	bcf	11,7	;volatile
  7436     0F19  0023               	movlb	3	; select bank3
  7437     0F1A  1515               	bsf	21,2	;volsfr
  7438     0F1B                     l3037:
  7439     0F1B  3055               	movlw	85
  7440     0F1C  0096               	movwf	22	;volsfr
  7441     0F1D  30AA               	movlw	170
  7442     0F1E  0096               	movwf	22	;volsfr
  7443     0F1F                     l3039:
  7444     0F1F  1495               	bsf	21,1	;volsfr
  7445     0F20                     l3041:
  7446     0F20  1115               	bcf	21,2	;volsfr
  7447     0F21                     l3043:
  7448     0F21  0020               	movlb	0	; select bank0
  7449     0F22  1C03               	btfss	3,0	;volatile
  7450     0F23  2F25               	goto	u2571
  7451     0F24  2F26               	goto	u2570
  7452     0F25                     u2571:
  7453     0F25  2F27               	goto	l613
  7454     0F26                     u2570:
  7455     0F26                     l3045:
  7456     0F26  178B               	bsf	11,7	;volatile
  7457     0F27                     l613:
  7458     0F27  0008               	return
  7459     0F28                     __end_of_eeprom_write:
  7460                           
  7461                           	psect	text31
  7462     0C7A                     __ptext31:	
  7463 ;; *************** function _BTN_IsPressed_s *****************
  7464 ;; Defined at:
  7465 ;;		line 67 in file "button.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  index           1    wreg     unsigned char 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  index           1    4[COMMON] unsigned char 
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      unsigned char 
  7472 ;; Registers used:
  7473 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:        1 bytes
  7484 ;; Hardware stack levels used: 1
  7485 ;; Hardware stack levels required when called: 3
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_FSM_ModeControl
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493     0C7A                     _BTN_IsPressed_s:	
  7494                           ;psect for function _BTN_IsPressed_s
  7495                           
  7496                           
  7497                           ;incstack = 0
  7498                           ; Regs used in _BTN_IsPressed_s: [wreg+fsr1l+fsr1h+status,2+status,0]
  7499                           ;BTN_IsPressed_s@index stored from wreg
  7500     0C7A  00F4               	movwf	BTN_IsPressed_s@index
  7501     0C7B                     l2353:
  7502                           
  7503                           ;button.c: 68:     if(index >= 4) return 0;
  7504     0C7B  3004               	movlw	4
  7505     0C7C  0274               	subwf	BTN_IsPressed_s@index,w
  7506     0C7D  1C03               	skipc
  7507     0C7E  2C80               	goto	u1881
  7508     0C7F  2C81               	goto	u1880
  7509     0C80                     u1881:
  7510     0C80  2C83               	goto	l2359
  7511     0C81                     u1880:
  7512     0C81                     l2355:
  7513     0C81  3000               	movlw	0
  7514     0C82  2C88               	goto	l51
  7515     0C83                     l2359:
  7516                           
  7517                           ;button.c: 69:     return flagForButtonPress_s[index];
  7518     0C83  0874               	movf	BTN_IsPressed_s@index,w
  7519     0C84  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  7520     0C85  0086               	movwf	6
  7521     0C86  0187               	clrf	7
  7522     0C87  0801               	movf	1,w
  7523     0C88                     l51:
  7524     0C88  0008               	return
  7525     0C89                     __end_of_BTN_IsPressed_s:
  7526                           
  7527                           	psect	text32
  7528     0EA0                     __ptext32:	
  7529 ;; *************** function _BTN_IsPressed_ms *****************
  7530 ;; Defined at:
  7531 ;;		line 72 in file "button.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;  index           1    wreg     unsigned char 
  7534 ;;  milisec         2   12[BANK0 ] unsigned int 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  index           1   16[BANK0 ] unsigned char 
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      unsigned char 
  7539 ;; Registers used:
  7540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;Total ram usage:        5 bytes
  7551 ;; Hardware stack levels used: 1
  7552 ;; Hardware stack levels required when called: 4
  7553 ;; This function calls:
  7554 ;;		___lwdiv
  7555 ;; This function is called by:
  7556 ;;		_FSM_ModeControl
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560     0EA0                     _BTN_IsPressed_ms:	
  7561                           ;psect for function _BTN_IsPressed_ms
  7562                           
  7563                           
  7564                           ;incstack = 0
  7565                           ; Regs used in _BTN_IsPressed_ms: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7566                           ;BTN_IsPressed_ms@index stored from wreg
  7567     0EA0  0020               	movlb	0	; select bank0
  7568     0EA1  00B0               	movwf	BTN_IsPressed_ms@index
  7569     0EA2                     l2363:
  7570                           
  7571                           ;button.c: 73:     if(index >= 4) return 0;
  7572     0EA2  3004               	movlw	4
  7573     0EA3  0230               	subwf	BTN_IsPressed_ms@index,w
  7574     0EA4  1C03               	skipc
  7575     0EA5  2EA7               	goto	u1891
  7576     0EA6  2EA8               	goto	u1890
  7577     0EA7                     u1891:
  7578     0EA7  2EAA               	goto	l2369
  7579     0EA8                     u1890:
  7580     0EA8                     l2365:
  7581     0EA8  3000               	movlw	0
  7582     0EA9  2ECA               	goto	l55
  7583     0EAA                     l2369:
  7584                           
  7585                           ;button.c: 74:     return counterForButtonPress[index] > milisec / 10;
  7586     0EAA  3530               	lslf	BTN_IsPressed_ms@index,w
  7587     0EAB  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  7588     0EAC  0086               	movwf	6
  7589     0EAD  0187               	clrf	7
  7590     0EAE  3F40               	moviw [0]fsr1
  7591     0EAF  00AE               	movwf	??_BTN_IsPressed_ms
  7592     0EB0  3F41               	moviw [1]fsr1
  7593     0EB1  00AF               	movwf	??_BTN_IsPressed_ms+1
  7594     0EB2  300A               	movlw	10
  7595     0EB3  00A4               	movwf	___lwdiv@divisor
  7596     0EB4  3000               	movlw	0
  7597     0EB5  00A5               	movwf	___lwdiv@divisor+1
  7598     0EB6  082D               	movf	BTN_IsPressed_ms@milisec+1,w
  7599     0EB7  00A7               	movwf	___lwdiv@dividend+1
  7600     0EB8  082C               	movf	BTN_IsPressed_ms@milisec,w
  7601     0EB9  00A6               	movwf	___lwdiv@dividend
  7602     0EBA  3187  2799  318E   	fcall	___lwdiv
  7603     0EBD  0020               	movlb	0	; select bank0
  7604     0EBE  082F               	movf	??_BTN_IsPressed_ms+1,w
  7605     0EBF  0225               	subwf	?___lwdiv+1,w
  7606     0EC0  1D03               	skipz
  7607     0EC1  2EC4               	goto	u1905
  7608     0EC2  082E               	movf	??_BTN_IsPressed_ms,w
  7609     0EC3  0224               	subwf	?___lwdiv,w
  7610     0EC4                     u1905:
  7611     0EC4  1C03               	skipc
  7612     0EC5  2EC7               	goto	u1901
  7613     0EC6  2EC9               	goto	u1900
  7614     0EC7                     u1901:
  7615     0EC7  3001               	movlw	1
  7616     0EC8  2ECA               	goto	u1910
  7617     0EC9                     u1900:
  7618     0EC9  3000               	movlw	0
  7619     0ECA                     u1910:
  7620     0ECA                     l55:
  7621     0ECA  0008               	return
  7622     0ECB                     __end_of_BTN_IsPressed_ms:
  7623                           
  7624                           	psect	text33
  7625     0799                     __ptext33:	
  7626 ;; *************** function ___lwdiv *****************
  7627 ;; Defined at:
  7628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  divisor         2    4[BANK0 ] unsigned int 
  7631 ;;  dividend        2    6[BANK0 ] unsigned int 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;  quotient        2    9[BANK0 ] unsigned int 
  7634 ;;  counter         1   11[BANK0 ] unsigned char 
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  2    4[BANK0 ] unsigned int 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;Total ram usage:        8 bytes
  7649 ;; Hardware stack levels used: 1
  7650 ;; Hardware stack levels required when called: 3
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_BTN_IsPressed_ms
  7655 ;;		_TMR1_SetTime_ms
  7656 ;;		_LcdPrintFloatS
  7657 ;;		_FSM_ModeControl
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661     0799                     ___lwdiv:	
  7662                           ;psect for function ___lwdiv
  7663                           
  7664     0799                     l2245:	
  7665                           ;incstack = 0
  7666                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7667                           
  7668     0799  0020               	movlb	0	; select bank0
  7669     079A  01A9               	clrf	___lwdiv@quotient
  7670     079B  01AA               	clrf	___lwdiv@quotient+1
  7671     079C                     l2247:
  7672     079C  0824               	movf	___lwdiv@divisor,w
  7673     079D  0425               	iorwf	___lwdiv@divisor+1,w
  7674     079E  1903               	btfsc	3,2
  7675     079F  2FA1               	goto	u1651
  7676     07A0  2FA2               	goto	u1650
  7677     07A1                     u1651:
  7678     07A1  2FD1               	goto	l2267
  7679     07A2                     u1650:
  7680     07A2                     l2249:
  7681     07A2  01AB               	clrf	___lwdiv@counter
  7682     07A3  0AAB               	incf	___lwdiv@counter,f
  7683     07A4  2FAE               	goto	l2255
  7684     07A5                     l2251:
  7685     07A5  3001               	movlw	1
  7686     07A6                     u1665:
  7687     07A6  35A4               	lslf	___lwdiv@divisor,f
  7688     07A7  0DA5               	rlf	___lwdiv@divisor+1,f
  7689     07A8  0B89               	decfsz	9,f
  7690     07A9  2FA6               	goto	u1665
  7691     07AA                     l2253:
  7692     07AA  3001               	movlw	1
  7693     07AB  00A8               	movwf	??___lwdiv
  7694     07AC  0828               	movf	??___lwdiv,w
  7695     07AD  07AB               	addwf	___lwdiv@counter,f
  7696     07AE                     l2255:
  7697     07AE  1FA5               	btfss	___lwdiv@divisor+1,7
  7698     07AF  2FB1               	goto	u1671
  7699     07B0  2FB2               	goto	u1670
  7700     07B1                     u1671:
  7701     07B1  2FA5               	goto	l2251
  7702     07B2                     u1670:
  7703     07B2                     l2257:
  7704     07B2  3001               	movlw	1
  7705     07B3                     u1685:
  7706     07B3  35A9               	lslf	___lwdiv@quotient,f
  7707     07B4  0DAA               	rlf	___lwdiv@quotient+1,f
  7708     07B5  0B89               	decfsz	9,f
  7709     07B6  2FB3               	goto	u1685
  7710     07B7  0825               	movf	___lwdiv@divisor+1,w
  7711     07B8  0227               	subwf	___lwdiv@dividend+1,w
  7712     07B9  1D03               	skipz
  7713     07BA  2FBD               	goto	u1695
  7714     07BB  0824               	movf	___lwdiv@divisor,w
  7715     07BC  0226               	subwf	___lwdiv@dividend,w
  7716     07BD                     u1695:
  7717     07BD  1C03               	skipc
  7718     07BE  2FC0               	goto	u1691
  7719     07BF  2FC1               	goto	u1690
  7720     07C0                     u1691:
  7721     07C0  2FC6               	goto	l2263
  7722     07C1                     u1690:
  7723     07C1                     l2259:
  7724     07C1  0824               	movf	___lwdiv@divisor,w
  7725     07C2  02A6               	subwf	___lwdiv@dividend,f
  7726     07C3  0825               	movf	___lwdiv@divisor+1,w
  7727     07C4  3BA7               	subwfb	___lwdiv@dividend+1,f
  7728     07C5                     l2261:
  7729     07C5  1429               	bsf	___lwdiv@quotient,0
  7730     07C6                     l2263:
  7731     07C6  3001               	movlw	1
  7732     07C7                     u1705:
  7733     07C7  36A5               	lsrf	___lwdiv@divisor+1,f
  7734     07C8  0CA4               	rrf	___lwdiv@divisor,f
  7735     07C9  0B89               	decfsz	9,f
  7736     07CA  2FC7               	goto	u1705
  7737     07CB                     l2265:
  7738     07CB  3001               	movlw	1
  7739     07CC  02AB               	subwf	___lwdiv@counter,f
  7740     07CD  1D03               	btfss	3,2
  7741     07CE  2FD0               	goto	u1711
  7742     07CF  2FD1               	goto	u1710
  7743     07D0                     u1711:
  7744     07D0  2FB2               	goto	l2257
  7745     07D1                     u1710:
  7746     07D1                     l2267:
  7747     07D1  082A               	movf	___lwdiv@quotient+1,w
  7748     07D2  00A5               	movwf	?___lwdiv+1
  7749     07D3  0829               	movf	___lwdiv@quotient,w
  7750     07D4  00A4               	movwf	?___lwdiv
  7751     07D5                     l897:
  7752     07D5  0008               	return
  7753     07D6                     __end_of___lwdiv:
  7754                           
  7755                           	psect	text34
  7756     0CC1                     __ptext34:	
  7757 ;; *************** function _BTN_IsPressed *****************
  7758 ;; Defined at:
  7759 ;;		line 59 in file "button.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  index           1    wreg     unsigned char 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  index           1    5[COMMON] unsigned char 
  7764 ;;  result          1    4[COMMON] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      unsigned char 
  7767 ;; Registers used:
  7768 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7775 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;Total ram usage:        2 bytes
  7779 ;; Hardware stack levels used: 1
  7780 ;; Hardware stack levels required when called: 3
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_FSM_ModeControl
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788     0CC1                     _BTN_IsPressed:	
  7789                           ;psect for function _BTN_IsPressed
  7790                           
  7791                           
  7792                           ;incstack = 0
  7793                           ; Regs used in _BTN_IsPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  7794                           ;BTN_IsPressed@index stored from wreg
  7795     0CC1  00F5               	movwf	BTN_IsPressed@index
  7796     0CC2                     l2339:
  7797                           
  7798                           ;button.c: 60:     unsigned char result = flagForButtonPress[index];
  7799     0CC2  0875               	movf	BTN_IsPressed@index,w
  7800     0CC3  3E56               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  7801     0CC4  0086               	movwf	6
  7802     0CC5  0187               	clrf	7
  7803     0CC6  0801               	movf	1,w
  7804     0CC7  00F4               	movwf	BTN_IsPressed@result
  7805     0CC8                     l2341:
  7806                           
  7807                           ;button.c: 61:     if(index >= 4) return 0;
  7808     0CC8  3004               	movlw	4
  7809     0CC9  0275               	subwf	BTN_IsPressed@index,w
  7810     0CCA  1C03               	skipc
  7811     0CCB  2CCD               	goto	u1871
  7812     0CCC  2CCE               	goto	u1870
  7813     0CCD                     u1871:
  7814     0CCD  2CD0               	goto	l2347
  7815     0CCE                     u1870:
  7816     0CCE                     l2343:
  7817     0CCE  3000               	movlw	0
  7818     0CCF  2CD6               	goto	l47
  7819     0CD0                     l2347:
  7820                           
  7821                           ;button.c: 63:     flagForButtonPress[index] = 0;
  7822     0CD0  0875               	movf	BTN_IsPressed@index,w
  7823     0CD1  3E56               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  7824     0CD2  0086               	movwf	6
  7825     0CD3  0187               	clrf	7
  7826     0CD4  0181               	clrf	1
  7827     0CD5                     l2349:
  7828                           
  7829                           ;button.c: 64:     return result;
  7830     0CD5  0874               	movf	BTN_IsPressed@result,w
  7831     0CD6                     l47:
  7832     0CD6  0008               	return
  7833     0CD7                     __end_of_BTN_IsPressed:
  7834                           
  7835                           	psect	text35
  7836     0D04                     __ptext35:	
  7837 ;; *************** function _BTN_IsHeld *****************
  7838 ;; Defined at:
  7839 ;;		line 53 in file "button.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  index           1    wreg     unsigned char 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  index           1    0[BANK0 ] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      unsigned char 
  7846 ;; Registers used:
  7847 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7856 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7857 ;;Total ram usage:        3 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 3
  7860 ;; This function calls:
  7861 ;;		Nothing
  7862 ;; This function is called by:
  7863 ;;		_FSM_ModeControl
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867     0D04                     _BTN_IsHeld:	
  7868                           ;psect for function _BTN_IsHeld
  7869                           
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _BTN_IsHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
  7873                           ;BTN_IsHeld@index stored from wreg
  7874     0D04  0020               	movlb	0	; select bank0
  7875     0D05  00A0               	movwf	BTN_IsHeld@index
  7876     0D06                     l3155:
  7877                           
  7878                           ;button.c: 54:     if(index >= 4) return 0;
  7879     0D06  3004               	movlw	4
  7880     0D07  0220               	subwf	BTN_IsHeld@index,w
  7881     0D08  1C03               	skipc
  7882     0D09  2D0B               	goto	u2841
  7883     0D0A  2D0C               	goto	u2840
  7884     0D0B                     u2841:
  7885     0D0B  2D0E               	goto	l3161
  7886     0D0C                     u2840:
  7887     0D0C                     l3157:
  7888     0D0C  3000               	movlw	0
  7889     0D0D  2D1A               	goto	l43
  7890     0D0E                     l3161:
  7891                           
  7892                           ;button.c: 56:     return counterForButtonPress[index] > 0;
  7893     0D0E  3520               	lslf	BTN_IsHeld@index,w
  7894     0D0F  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  7895     0D10  0086               	movwf	6
  7896     0D11  0187               	clrf	7
  7897     0D12  0016               	moviw fsr1++
  7898     0D13  0401               	iorwf	1,w
  7899     0D14  1D03               	btfss	3,2
  7900     0D15  2D17               	goto	u2851
  7901     0D16  2D19               	goto	u2850
  7902     0D17                     u2851:
  7903     0D17  3001               	movlw	1
  7904     0D18  2D1A               	goto	u2860
  7905     0D19                     u2850:
  7906     0D19  3000               	movlw	0
  7907     0D1A                     u2860:
  7908     0D1A                     l43:
  7909     0D1A  0008               	return
  7910     0D1B                     __end_of_BTN_IsHeld:
  7911                           
  7912                           	psect	text36
  7913     0F91                     __ptext36:	
  7914 ;; *************** function _DisplayLcdScreen *****************
  7915 ;; Defined at:
  7916 ;;		line 143 in file "lcd.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;		None
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  i               1   14[BANK0 ] unsigned char 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;Total ram usage:        2 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; Hardware stack levels required when called: 7
  7937 ;; This function calls:
  7938 ;;		_lcd_print_char
  7939 ;;		_lcd_set_cursor
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945     0F91                     _DisplayLcdScreen:	
  7946                           ;psect for function _DisplayLcdScreen
  7947                           
  7948     0F91                     l3559:	
  7949                           ;incstack = 0
  7950                           ; Regs used in _DisplayLcdScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7951                           
  7952                           
  7953                           ;lcd.c: 145:      unsigned char i;;lcd.c: 146:     lcd_set_cursor (0,0);
  7954     0F91  0020               	movlb	0	; select bank0
  7955     0F92  01A8               	clrf	lcd_set_cursor@column
  7956     0F93  3000               	movlw	0
  7957     0F94  318D  25C1  318F   	fcall	_lcd_set_cursor
  7958     0F97                     l3561:
  7959                           
  7960                           ;lcd.c: 147:     for (i = 0; i<16; i++)
  7961     0F97  0020               	movlb	0	; select bank0
  7962     0F98  01AE               	clrf	DisplayLcdScreen@i
  7963     0F99                     l3567:
  7964                           
  7965                           ;lcd.c: 148:         lcd_print_char(LcdScreen[0][i]);
  7966     0F99  082E               	movf	DisplayLcdScreen@i,w
  7967     0F9A  3EA0               	addlw	(low (_LcdScreen| 0))& (0+255)
  7968     0F9B  0086               	movwf	6
  7969     0F9C  0187               	clrf	7
  7970     0F9D  0801               	movf	1,w
  7971     0F9E  318C  2450  318F   	fcall	_lcd_print_char
  7972     0FA1                     l3569:
  7973     0FA1  3001               	movlw	1
  7974     0FA2  0020               	movlb	0	; select bank0
  7975     0FA3  00AD               	movwf	??_DisplayLcdScreen
  7976     0FA4  082D               	movf	??_DisplayLcdScreen,w
  7977     0FA5  07AE               	addwf	DisplayLcdScreen@i,f
  7978     0FA6                     l3571:
  7979     0FA6  3010               	movlw	16
  7980     0FA7  022E               	subwf	DisplayLcdScreen@i,w
  7981     0FA8  1C03               	skipc
  7982     0FA9  2FAB               	goto	u3271
  7983     0FAA  2FAC               	goto	u3270
  7984     0FAB                     u3271:
  7985     0FAB  2F99               	goto	l3567
  7986     0FAC                     u3270:
  7987     0FAC                     l3573:
  7988                           
  7989                           ;lcd.c: 149:     lcd_set_cursor (1,0);
  7990     0FAC  01A8               	clrf	lcd_set_cursor@column
  7991     0FAD  3001               	movlw	1
  7992     0FAE  318D  25C1  318F   	fcall	_lcd_set_cursor
  7993     0FB1                     l3575:
  7994                           
  7995                           ;lcd.c: 150:     for (i = 0; i<16; i++)
  7996     0FB1  0020               	movlb	0	; select bank0
  7997     0FB2  01AE               	clrf	DisplayLcdScreen@i
  7998     0FB3                     l3581:
  7999                           
  8000                           ;lcd.c: 151:         lcd_print_char(LcdScreen[1][i]);
  8001     0FB3  082E               	movf	DisplayLcdScreen@i,w
  8002     0FB4  3EB0               	addlw	(low ((_LcdScreen| 0+16)))& (0+255)
  8003     0FB5  0086               	movwf	6
  8004     0FB6  0187               	clrf	7
  8005     0FB7  0801               	movf	1,w
  8006     0FB8  318C  2450  318F   	fcall	_lcd_print_char
  8007     0FBB                     l3583:
  8008     0FBB  3001               	movlw	1
  8009     0FBC  0020               	movlb	0	; select bank0
  8010     0FBD  00AD               	movwf	??_DisplayLcdScreen
  8011     0FBE  082D               	movf	??_DisplayLcdScreen,w
  8012     0FBF  07AE               	addwf	DisplayLcdScreen@i,f
  8013     0FC0                     l3585:
  8014     0FC0  3010               	movlw	16
  8015     0FC1  022E               	subwf	DisplayLcdScreen@i,w
  8016     0FC2  1C03               	skipc
  8017     0FC3  2FC5               	goto	u3281
  8018     0FC4  2FC6               	goto	u3280
  8019     0FC5                     u3281:
  8020     0FC5  2FB3               	goto	l3581
  8021     0FC6                     u3280:
  8022     0FC6                     l363:
  8023     0FC6  0008               	return
  8024     0FC7                     __end_of_DisplayLcdScreen:
  8025                           
  8026                           	psect	text37
  8027     0DC1                     __ptext37:	
  8028 ;; *************** function _lcd_set_cursor *****************
  8029 ;; Defined at:
  8030 ;;		line 119 in file "lcd.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  row             1    wreg     unsigned char 
  8033 ;;  column          1    8[BANK0 ] unsigned char 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  row             1   11[BANK0 ] unsigned char 
  8036 ;;  address         1   12[BANK0 ] unsigned char 
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1    wreg      void 
  8039 ;; Registers used:
  8040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8046 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8047 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8049 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8050 ;;Total ram usage:        5 bytes
  8051 ;; Hardware stack levels used: 1
  8052 ;; Hardware stack levels required when called: 6
  8053 ;; This function calls:
  8054 ;;		_lcd_write_cmd
  8055 ;; This function is called by:
  8056 ;;		_DisplayLcdScreen
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060     0DC1                     _lcd_set_cursor:	
  8061                           ;psect for function _lcd_set_cursor
  8062                           
  8063                           
  8064                           ;incstack = 0
  8065                           ; Regs used in _lcd_set_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8066                           ;lcd_set_cursor@row stored from wreg
  8067     0DC1  0020               	movlb	0	; select bank0
  8068     0DC2  00AB               	movwf	lcd_set_cursor@row
  8069     0DC3                     l3309:
  8070                           
  8071                           ;lcd.c: 119: void lcd_set_cursor (unsigned char row, unsigned char column);lcd.c: 120: {
      +                          ;lcd.c: 121:     unsigned char address;;lcd.c: 123:     switch(row)
  8072     0DC3  2DCA               	goto	l3317
  8073     0DC4                     l3311:
  8074     0DC4  3080               	movlw	128
  8075     0DC5  00AC               	movwf	lcd_set_cursor@address
  8076     0DC6  2DDA               	goto	l3319
  8077     0DC7                     l3313:
  8078     0DC7  30C0               	movlw	192
  8079     0DC8  00AC               	movwf	lcd_set_cursor@address
  8080     0DC9  2DDA               	goto	l3319
  8081     0DCA                     l3317:
  8082     0DCA  082B               	movf	lcd_set_cursor@row,w
  8083     0DCB  00A9               	movwf	??_lcd_set_cursor
  8084     0DCC  01AA               	clrf	??_lcd_set_cursor+1
  8085                           
  8086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8087                           ; Switch size 1, requested type "simple"
  8088                           ; Number of cases is 1, Range of values is 0 to 0
  8089                           ; switch strategies available:
  8090                           ; Name         Instructions Cycles
  8091                           ; simple_byte            4     3 (average)
  8092                           ; direct_byte            8     6 (fixed)
  8093                           ; jumptable            260     6 (fixed)
  8094                           ;	Chosen strategy is simple_byte
  8095     0DCD  082A               	movf	??_lcd_set_cursor+1,w
  8096     0DCE  3A00               	xorlw	0	; case 0
  8097     0DCF  1903               	skipnz
  8098     0DD0  2DD2               	goto	l3677
  8099     0DD1  2DDA               	goto	l3319
  8100     0DD2                     l3677:
  8101                           
  8102                           ; Switch size 1, requested type "simple"
  8103                           ; Number of cases is 2, Range of values is 0 to 1
  8104                           ; switch strategies available:
  8105                           ; Name         Instructions Cycles
  8106                           ; simple_byte            7     4 (average)
  8107                           ; direct_byte           10     6 (fixed)
  8108                           ; jumptable            260     6 (fixed)
  8109                           ;	Chosen strategy is simple_byte
  8110     0DD2  0829               	movf	??_lcd_set_cursor,w
  8111     0DD3  3A00               	xorlw	0	; case 0
  8112     0DD4  1903               	skipnz
  8113     0DD5  2DC4               	goto	l3311
  8114     0DD6  3A01               	xorlw	1	; case 1
  8115     0DD7  1903               	skipnz
  8116     0DD8  2DC7               	goto	l3313
  8117     0DD9  2DDA               	goto	l3319
  8118     0DDA                     l3319:
  8119                           
  8120                           ;lcd.c: 128:     address = address + column;
  8121     0DDA  082C               	movf	lcd_set_cursor@address,w
  8122     0DDB  0728               	addwf	lcd_set_cursor@column,w
  8123     0DDC  00AC               	movwf	lcd_set_cursor@address
  8124     0DDD                     l3321:
  8125                           
  8126                           ;lcd.c: 129:     lcd_write_cmd(address);
  8127     0DDD  082C               	movf	lcd_set_cursor@address,w
  8128     0DDE  318D  2567  318D   	fcall	_lcd_write_cmd
  8129     0DE1                     l353:
  8130     0DE1  0008               	return
  8131     0DE2                     __end_of_lcd_set_cursor:
  8132                           
  8133                           	psect	text38
  8134     0D67                     __ptext38:	
  8135 ;; *************** function _lcd_write_cmd *****************
  8136 ;; Defined at:
  8137 ;;		line 102 in file "lcd.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  cmd             1    wreg     unsigned char 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  cmd             1    7[BANK0 ] unsigned char 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;Total ram usage:        2 bytes
  8156 ;; Hardware stack levels used: 1
  8157 ;; Hardware stack levels required when called: 5
  8158 ;; This function calls:
  8159 ;;		_lcd_delay
  8160 ;;		_lcd_write_4bits
  8161 ;; This function is called by:
  8162 ;;		_lcd_set_cursor
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166     0D67                     _lcd_write_cmd:	
  8167                           ;psect for function _lcd_write_cmd
  8168                           
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in _lcd_write_cmd: [wreg+status,2+status,0+pclath+cstack]
  8172                           ;lcd_write_cmd@cmd stored from wreg
  8173     0D67  0020               	movlb	0	; select bank0
  8174     0D68  00A7               	movwf	lcd_write_cmd@cmd
  8175     0D69                     l2997:
  8176     0D69                     l3001:	
  8177                           ;lcd.c: 102: void lcd_write_cmd(unsigned char cmd);lcd.c: 103: {;lcd.c: 104:  ( (0) ? ( 
      +                          PORTC |= (1<<2) ) : ( PORTC &= ~(1<<2) ) );
  8178                           
  8179     0D69  30FB               	movlw	251
  8180     0D6A  00A6               	movwf	??_lcd_write_cmd
  8181     0D6B  0826               	movf	??_lcd_write_cmd,w
  8182     0D6C  058E               	andwf	14,f	;volatile
  8183     0D6D                     l3003:
  8184                           
  8185                           ;lcd.c: 105:     lcd_delay(1);
  8186     0D6D  3001               	movlw	1
  8187     0D6E  318E  26CB  318D   	fcall	_lcd_delay
  8188     0D71                     l3005:
  8189                           
  8190                           ;lcd.c: 106:  lcd_write_4bits(cmd);
  8191     0D71  0020               	movlb	0	; select bank0
  8192     0D72  0827               	movf	lcd_write_cmd@cmd,w
  8193     0D73  318D  2533  318D   	fcall	_lcd_write_4bits
  8194     0D76                     l3007:
  8195                           
  8196                           ;lcd.c: 107:  lcd_write_4bits(cmd<<4);
  8197     0D76  0020               	movlb	0	; select bank0
  8198     0D77  0827               	movf	lcd_write_cmd@cmd,w
  8199     0D78  00A6               	movwf	??_lcd_write_cmd
  8200     0D79  3003               	movlw	3
  8201     0D7A                     u2525:
  8202     0D7A  35A6               	lslf	??_lcd_write_cmd,f
  8203     0D7B  3EFF               	addlw	-1
  8204     0D7C  1D03               	skipz
  8205     0D7D  2D7A               	goto	u2525
  8206     0D7E  3526               	lslf	??_lcd_write_cmd,w
  8207     0D7F  318D  2533  318D   	fcall	_lcd_write_4bits
  8208     0D82                     l335:
  8209     0D82  0008               	return
  8210     0D83                     __end_of_lcd_write_cmd:
  8211                           
  8212                           	psect	text39
  8213     0C50                     __ptext39:	
  8214 ;; *************** function _lcd_print_char *****************
  8215 ;; Defined at:
  8216 ;;		line 138 in file "lcd.c"
  8217 ;; Parameters:    Size  Location     Type
  8218 ;;  c               1    wreg     unsigned char 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;  c               1    8[BANK0 ] unsigned char 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  1    wreg      void 
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0, pclath, cstack
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8233 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8234 ;;Total ram usage:        1 bytes
  8235 ;; Hardware stack levels used: 1
  8236 ;; Hardware stack levels required when called: 6
  8237 ;; This function calls:
  8238 ;;		_lcd_write_data
  8239 ;; This function is called by:
  8240 ;;		_DisplayLcdScreen
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244     0C50                     _lcd_print_char:	
  8245                           ;psect for function _lcd_print_char
  8246                           
  8247                           
  8248                           ;incstack = 0
  8249                           ; Regs used in _lcd_print_char: [wreg+status,2+status,0+pclath+cstack]
  8250                           ;lcd_print_char@c stored from wreg
  8251     0C50  0020               	movlb	0	; select bank0
  8252     0C51  00A8               	movwf	lcd_print_char@c
  8253     0C52                     l3329:
  8254                           
  8255                           ;lcd.c: 138: void lcd_print_char (char c);lcd.c: 139: {;lcd.c: 140:     lcd_write_data (
      +                          c);
  8256     0C52  0828               	movf	lcd_print_char@c,w
  8257     0C53  318D  2583  318C   	fcall	_lcd_write_data
  8258     0C56                     l356:
  8259     0C56  0008               	return
  8260     0C57                     __end_of_lcd_print_char:
  8261                           
  8262                           	psect	text40
  8263     0D83                     __ptext40:	
  8264 ;; *************** function _lcd_write_data *****************
  8265 ;; Defined at:
  8266 ;;		line 110 in file "lcd.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  data            1    wreg     unsigned char 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  data            1    7[BANK0 ] unsigned char 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1    wreg      void 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, pclath, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;Total ram usage:        2 bytes
  8285 ;; Hardware stack levels used: 1
  8286 ;; Hardware stack levels required when called: 5
  8287 ;; This function calls:
  8288 ;;		_lcd_delay
  8289 ;;		_lcd_write_4bits
  8290 ;; This function is called by:
  8291 ;;		_lcd_print_char
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295     0D83                     _lcd_write_data:	
  8296                           ;psect for function _lcd_write_data
  8297                           
  8298                           
  8299                           ;incstack = 0
  8300                           ; Regs used in _lcd_write_data: [wreg+status,2+status,0+pclath+cstack]
  8301                           ;lcd_write_data@data stored from wreg
  8302     0D83  0020               	movlb	0	; select bank0
  8303     0D84  00A7               	movwf	lcd_write_data@data
  8304     0D85                     l3009:
  8305     0D85  150E               	bsf	14,2	;volatile
  8306     0D86                     l3013:
  8307                           
  8308                           ;lcd.c: 113:     lcd_delay(1);
  8309     0D86  3001               	movlw	1
  8310     0D87  318E  26CB  318D   	fcall	_lcd_delay
  8311     0D8A                     l3015:
  8312                           
  8313                           ;lcd.c: 114:  lcd_write_4bits(data);
  8314     0D8A  0020               	movlb	0	; select bank0
  8315     0D8B  0827               	movf	lcd_write_data@data,w
  8316     0D8C  318D  2533  318D   	fcall	_lcd_write_4bits
  8317     0D8F                     l3017:
  8318                           
  8319                           ;lcd.c: 115:     lcd_write_4bits(data<<4);
  8320     0D8F  0020               	movlb	0	; select bank0
  8321     0D90  0827               	movf	lcd_write_data@data,w
  8322     0D91  00A6               	movwf	??_lcd_write_data
  8323     0D92  3003               	movlw	3
  8324     0D93                     u2535:
  8325     0D93  35A6               	lslf	??_lcd_write_data,f
  8326     0D94  3EFF               	addlw	-1
  8327     0D95  1D03               	skipz
  8328     0D96  2D93               	goto	u2535
  8329     0D97  3526               	lslf	??_lcd_write_data,w
  8330     0D98  318D  2533  318D   	fcall	_lcd_write_4bits
  8331     0D9B                     l3021:	
  8332                           ;lcd.c: 116:     ( (0) ? ( PORTC |= (1<<2) ) : ( PORTC &= ~(1<<2) ) );
  8333                           
  8334     0D9B  30FB               	movlw	251
  8335     0D9C  0020               	movlb	0	; select bank0
  8336     0D9D  00A6               	movwf	??_lcd_write_data
  8337     0D9E  0826               	movf	??_lcd_write_data,w
  8338     0D9F  058E               	andwf	14,f	;volatile
  8339     0DA0                     l346:
  8340     0DA0  0008               	return
  8341     0DA1                     __end_of_lcd_write_data:
  8342                           
  8343                           	psect	text41
  8344     0D33                     __ptext41:	
  8345 ;; *************** function _lcd_write_4bits *****************
  8346 ;; Defined at:
  8347 ;;		line 93 in file "lcd.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  dat             1    wreg     unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  dat             1    5[BANK0 ] unsigned char 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2, status,0, pclath, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;Total ram usage:        2 bytes
  8366 ;; Hardware stack levels used: 1
  8367 ;; Hardware stack levels required when called: 4
  8368 ;; This function calls:
  8369 ;;		_lcd_delay
  8370 ;; This function is called by:
  8371 ;;		_lcd_write_cmd
  8372 ;;		_lcd_write_data
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376     0D33                     _lcd_write_4bits:	
  8377                           ;psect for function _lcd_write_4bits
  8378                           
  8379                           
  8380                           ;incstack = 0
  8381                           ; Regs used in _lcd_write_4bits: [wreg+status,2+status,0+pclath+cstack]
  8382                           ;lcd_write_4bits@dat stored from wreg
  8383     0D33  0020               	movlb	0	; select bank0
  8384     0D34  00A5               	movwf	lcd_write_4bits@dat
  8385     0D35                     l2937:
  8386                           
  8387                           ;lcd.c: 93: void lcd_write_4bits(unsigned char dat);lcd.c: 94: {;lcd.c: 96:     PORTC &=
      +                           0x0F; PORTC |= (dat);;
  8388     0D35  300F               	movlw	15
  8389     0D36  00F5               	movwf	??_lcd_write_4bits
  8390     0D37  0875               	movf	??_lcd_write_4bits,w
  8391     0D38  058E               	andwf	14,f	;volatile
  8392                           
  8393                           ;lcd.c: 97:  ( (1) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  8394     0D39  0825               	movf	lcd_write_4bits@dat,w	;volatile
  8395     0D3A  00F5               	movwf	??_lcd_write_4bits
  8396     0D3B  0875               	movf	??_lcd_write_4bits,w
  8397     0D3C  048E               	iorwf	14,f	;volatile
  8398     0D3D                     l2939:
  8399     0D3D  158E               	bsf	14,3	;volatile
  8400     0D3E                     l2943:
  8401                           
  8402                           ;lcd.c: 98:     lcd_delay(1);
  8403     0D3E  3001               	movlw	1
  8404     0D3F  318E  26CB  318D   	fcall	_lcd_delay
  8405     0D42                     l2947:	
  8406                           ;lcd.c: 99:  ( (0) ? ( PORTC |= (1<<3) ) : ( PORTC &= ~(1<<3) ) );
  8407                           
  8408     0D42  30F7               	movlw	247
  8409     0D43  00F5               	movwf	??_lcd_write_4bits
  8410     0D44  0875               	movf	??_lcd_write_4bits,w
  8411     0D45  0020               	movlb	0	; select bank0
  8412     0D46  058E               	andwf	14,f	;volatile
  8413     0D47                     l2949:
  8414                           
  8415                           ;lcd.c: 100:     lcd_delay(1);
  8416     0D47  3001               	movlw	1
  8417     0D48  318E  26CB  318D   	fcall	_lcd_delay
  8418     0D4B                     l328:
  8419     0D4B  0008               	return
  8420     0D4C                     __end_of_lcd_write_4bits:
  8421                           
  8422                           	psect	text42
  8423     0ECB                     __ptext42:	
  8424 ;; *************** function _lcd_delay *****************
  8425 ;; Defined at:
  8426 ;;		line 10 in file "lcd.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  time            1    wreg     unsigned char 
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;  time            1    0[BANK0 ] unsigned char 
  8431 ;;  j               2    3[BANK0 ] int 
  8432 ;;  i               2    1[BANK0 ] int 
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8445 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8446 ;;Total ram usage:        6 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 3
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_lcd_write_4bits
  8453 ;;		_lcd_write_cmd
  8454 ;;		_lcd_write_data
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458     0ECB                     _lcd_delay:	
  8459                           ;psect for function _lcd_delay
  8460                           
  8461                           
  8462                           ;incstack = 0
  8463                           ; Regs used in _lcd_delay: [wreg+status,2]
  8464                           ;lcd_delay@time stored from wreg
  8465     0ECB  0020               	movlb	0	; select bank0
  8466     0ECC  00A0               	movwf	lcd_delay@time
  8467     0ECD                     l2913:
  8468                           
  8469                           ;lcd.c: 10: void lcd_delay(unsigned char time);lcd.c: 11: {;lcd.c: 12:     int i,j;;lcd.
      +                          c: 13:     for(i=0;i<time;i++)
  8470     0ECD  01A1               	clrf	lcd_delay@i
  8471     0ECE  01A2               	clrf	lcd_delay@i+1
  8472     0ECF  2EEA               	goto	l260
  8473     0ED0                     l2915:
  8474                           
  8475                           ;lcd.c: 14:         for(j=0;j<1;j++);
  8476     0ED0  0020               	movlb	0	; select bank0
  8477     0ED1  01A3               	clrf	lcd_delay@j
  8478     0ED2  01A4               	clrf	lcd_delay@j+1
  8479     0ED3                     l2921:
  8480     0ED3  3001               	movlw	1
  8481     0ED4  0020               	movlb	0	; select bank0
  8482     0ED5  07A3               	addwf	lcd_delay@j,f
  8483     0ED6  3000               	movlw	0
  8484     0ED7  3DA4               	addwfc	lcd_delay@j+1,f
  8485     0ED8  0824               	movf	lcd_delay@j+1,w
  8486     0ED9  3A80               	xorlw	128
  8487     0EDA  00F4               	movwf	??_lcd_delay
  8488     0EDB  3080               	movlw	128
  8489     0EDC  0274               	subwf	??_lcd_delay,w
  8490     0EDD  1D03               	skipz
  8491     0EDE  2EE1               	goto	u2425
  8492     0EDF  3001               	movlw	1
  8493     0EE0  0223               	subwf	lcd_delay@j,w
  8494     0EE1                     u2425:
  8495     0EE1  1C03               	skipc
  8496     0EE2  2EE4               	goto	u2421
  8497     0EE3  2EE5               	goto	u2420
  8498     0EE4                     u2421:
  8499     0EE4  2ED3               	goto	l2921
  8500     0EE5                     u2420:
  8501     0EE5                     l2923:
  8502     0EE5  3001               	movlw	1
  8503     0EE6  0020               	movlb	0	; select bank0
  8504     0EE7  07A1               	addwf	lcd_delay@i,f
  8505     0EE8  3000               	movlw	0
  8506     0EE9  3DA2               	addwfc	lcd_delay@i+1,f
  8507     0EEA                     l260:
  8508     0EEA  0822               	movf	lcd_delay@i+1,w
  8509     0EEB  3A80               	xorlw	128
  8510     0EEC  00F4               	movwf	??_lcd_delay
  8511     0EED  3080               	movlw	128
  8512     0EEE  0274               	subwf	??_lcd_delay,w
  8513     0EEF  1D03               	skipz
  8514     0EF0  2EF3               	goto	u2435
  8515     0EF1  0820               	movf	lcd_delay@time,w
  8516     0EF2  0221               	subwf	lcd_delay@i,w
  8517     0EF3                     u2435:
  8518     0EF3  1C03               	skipc
  8519     0EF4  2EF6               	goto	u2431
  8520     0EF5  2EF7               	goto	u2430
  8521     0EF6                     u2431:
  8522     0EF6  2ED0               	goto	l2915
  8523     0EF7                     u2430:
  8524     0EF7                     l265:
  8525     0EF7  0008               	return
  8526     0EF8                     __end_of_lcd_delay:
  8527                           
  8528                           	psect	intentry
  8529     0004                     __pintentry:	
  8530 ;; *************** function _isr *****************
  8531 ;; Defined at:
  8532 ;;		line 8 in file "interrupt.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;Total ram usage:        0 bytes
  8551 ;; Hardware stack levels used: 1
  8552 ;; Hardware stack levels required when called: 2
  8553 ;; This function calls:
  8554 ;;		_TMR1_Isr
  8555 ;;		_TMR1_Start
  8556 ;;		_TMR1_Stop
  8557 ;; This function is called by:
  8558 ;;		Interrupt level 1
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562     0004                     _isr:
  8563                           
  8564                           ;incstack = 0
  8565     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8566                           
  8567                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8568     0005  3180               	pagesel	$
  8569     0006                     i1l2851:
  8570                           
  8571                           ;interrupt.c: 9:     if(TMR1IF == 1 && TMR1IE == 1){
  8572     0006  0020               	movlb	0	; select bank0
  8573     0007  1C11               	btfss	17,0	;volatile
  8574     0008  280A               	goto	u240_21
  8575     0009  280B               	goto	u240_20
  8576     000A                     u240_21:
  8577     000A  281B               	goto	i1l409
  8578     000B                     u240_20:
  8579     000B                     i1l2853:
  8580     000B  0021               	movlb	1	; select bank1
  8581     000C  1C11               	btfss	17,0	;volatile
  8582     000D  280F               	goto	u241_21
  8583     000E  2810               	goto	u241_20
  8584     000F                     u241_21:
  8585     000F  281B               	goto	i1l409
  8586     0010                     u241_20:
  8587     0010                     i1l2855:
  8588                           
  8589                           ;interrupt.c: 10:         TMR1_Stop();
  8590     0010  318C  2432  3180   	fcall	_TMR1_Stop
  8591     0013                     i1l2857:
  8592                           
  8593                           ;interrupt.c: 11:         TMR1IF = 0;
  8594     0013  0020               	movlb	0	; select bank0
  8595     0014  1011               	bcf	17,0	;volatile
  8596     0015                     i1l2859:
  8597                           
  8598                           ;interrupt.c: 12:         TMR1_Start();
  8599     0015  318C  2449  3180   	fcall	_TMR1_Start
  8600     0018                     i1l2861:
  8601                           
  8602                           ;interrupt.c: 13:         TMR1_Isr();
  8603     0018  318C  24ED  3180   	fcall	_TMR1_Isr
  8604     001B                     i1l409:
  8605     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8606     001C  0009               	retfie
  8607     001D                     __end_of_isr:
  8608                           
  8609                           	psect	text44
  8610     0C32                     __ptext44:	
  8611 ;; *************** function _TMR1_Stop *****************
  8612 ;; Defined at:
  8613 ;;		line 32 in file "timer.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		None
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;Total ram usage:        0 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_isr
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640     0C32                     _TMR1_Stop:	
  8641                           ;psect for function _TMR1_Stop
  8642                           
  8643     0C32                     i1l1847:	
  8644                           ;incstack = 0
  8645                           ; Regs used in _TMR1_Stop: []
  8646                           
  8647                           
  8648                           ;timer.c: 34:  T1CONbits.TMR1ON = 0;
  8649     0C32  0020               	movlb	0	; select bank0
  8650     0C33  1018               	bcf	24,0	;volatile
  8651     0C34                     i1l191:
  8652     0C34  0008               	return
  8653     0C35                     __end_of_TMR1_Stop:
  8654                           
  8655                           	psect	text45
  8656     0C49                     __ptext45:	
  8657 ;; *************** function _TMR1_Start *****************
  8658 ;; Defined at:
  8659 ;;		line 26 in file "timer.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  1    wreg      void 
  8666 ;; Registers used:
  8667 ;;		wreg
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8677 ;;Total ram usage:        0 bytes
  8678 ;; Hardware stack levels used: 1
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_isr
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686     0C49                     _TMR1_Start:	
  8687                           ;psect for function _TMR1_Start
  8688                           
  8689     0C49                     i1l2775:	
  8690                           ;incstack = 0
  8691                           ; Regs used in _TMR1_Start: [wreg]
  8692                           
  8693                           
  8694                           ;timer.c: 28:     TMR1 = timer1_value;
  8695     0C49  0020               	movlb	0	; select bank0
  8696     0C4A  086C               	movf	_timer1_value+1,w
  8697     0C4B  0097               	movwf	23	;volatile
  8698     0C4C  086B               	movf	_timer1_value,w
  8699     0C4D  0096               	movwf	22	;volatile
  8700     0C4E                     i1l2777:
  8701                           
  8702                           ;timer.c: 29:  T1CONbits.TMR1ON = 1;
  8703     0C4E  1418               	bsf	24,0	;volatile
  8704     0C4F                     i1l188:
  8705     0C4F  0008               	return
  8706     0C50                     __end_of_TMR1_Start:
  8707                           
  8708                           	psect	text46
  8709     0CED                     __ptext46:	
  8710 ;; *************** function _TMR1_Isr *****************
  8711 ;; Defined at:
  8712 ;;		line 38 in file "timer.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;		None
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;Total ram usage:        0 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 1
  8733 ;; This function calls:
  8734 ;;		_BTN_Reading
  8735 ;; This function is called by:
  8736 ;;		_isr
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740     0CED                     _TMR1_Isr:	
  8741                           ;psect for function _TMR1_Isr
  8742                           
  8743     0CED                     i1l2779:	
  8744                           ;incstack = 0
  8745                           ; Regs used in _TMR1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8746                           
  8747                           
  8748                           ;timer.c: 40:  timer1_cnt ++;
  8749     0CED  3001               	movlw	1
  8750     0CEE  0020               	movlb	0	; select bank0
  8751     0CEF  07E2               	addwf	_timer1_cnt,f
  8752     0CF0  3000               	movlw	0
  8753     0CF1  3DE3               	addwfc	_timer1_cnt+1,f
  8754                           
  8755                           ;timer.c: 41:  if (timer1_cnt >= timer1_MUL)
  8756     0CF2  086E               	movf	_timer1_MUL+1,w
  8757     0CF3  0263               	subwf	_timer1_cnt+1,w
  8758     0CF4  1D03               	skipz
  8759     0CF5  2CF8               	goto	u234_25
  8760     0CF6  086D               	movf	_timer1_MUL,w
  8761     0CF7  0262               	subwf	_timer1_cnt,w
  8762     0CF8                     u234_25:
  8763     0CF8  1C03               	skipc
  8764     0CF9  2CFB               	goto	u234_21
  8765     0CFA  2CFC               	goto	u234_20
  8766     0CFB                     u234_21:
  8767     0CFB  2D00               	goto	i1l2785
  8768     0CFC                     u234_20:
  8769     0CFC                     i1l2781:
  8770                           
  8771                           ;timer.c: 42:  {;timer.c: 43:   timer1_cnt = 0;
  8772     0CFC  01E2               	clrf	_timer1_cnt
  8773     0CFD  01E3               	clrf	_timer1_cnt+1
  8774     0CFE                     i1l2783:
  8775                           
  8776                           ;timer.c: 44:   flag_timer1 = 1;
  8777     0CFE  01E8               	clrf	_flag_timer1
  8778     0CFF  0AE8               	incf	_flag_timer1,f
  8779     0D00                     i1l2785:
  8780                           
  8781                           ;timer.c: 48:     BTN_Reading();
  8782     0D00  3184  24A4  318C   	fcall	_BTN_Reading
  8783     0D03                     i1l195:
  8784     0D03  0008               	return
  8785     0D04                     __end_of_TMR1_Isr:
  8786                           
  8787                           	psect	text47
  8788     04A4                     __ptext47:	
  8789 ;; *************** function _BTN_Reading *****************
  8790 ;; Defined at:
  8791 ;;		line 27 in file "button.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  i               1    3[COMMON] unsigned char 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;Total ram usage:        4 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_TMR1_Isr
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818     04A4                     _BTN_Reading:	
  8819                           ;psect for function _BTN_Reading
  8820                           
  8821     04A4                     i1l2297:	
  8822                           ;incstack = 0
  8823                           ; Regs used in _BTN_Reading: [wreg-fsr1h+status,2+status,0]
  8824                           
  8825                           
  8826                           ;button.c: 28:     unsigned char i;;button.c: 29:     for(i = 0; i < 4; i++){
  8827     04A4  01F3               	clrf	BTN_Reading@i
  8828     04A5                     i1l2303:
  8829                           
  8830                           ;button.c: 30:         debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
  8831     04A5  0873               	movf	BTN_Reading@i,w
  8832     04A6  3EC8               	addlw	(low (_debounceButtonBuffer2| 0))& (0+255)
  8833     04A7  0086               	movwf	6
  8834     04A8  0187               	clrf	7
  8835     04A9  0873               	movf	BTN_Reading@i,w
  8836     04AA  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  8837     04AB  0084               	movwf	4
  8838     04AC  0185               	clrf	5
  8839     04AD  0800               	movf	0,w
  8840     04AE  0081               	movwf	1
  8841                           
  8842                           ;button.c: 31:         debounceButtonBuffer1[i] = PORTA & buttonInputMask[i];
  8843     04AF  0873               	movf	BTN_Reading@i,w
  8844     04B0  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  8845     04B1  0086               	movwf	6
  8846     04B2  0187               	clrf	7
  8847     04B3  0873               	movf	BTN_Reading@i,w
  8848     04B4  3EC4               	addlw	(low (_buttonInputMask| 0))& (0+255)
  8849     04B5  0084               	movwf	4
  8850     04B6  0185               	clrf	5
  8851     04B7  0800               	movf	0,w
  8852     04B8  0020               	movlb	0	; select bank0
  8853     04B9  050C               	andwf	12,w	;volatile
  8854     04BA  0081               	movwf	1
  8855                           
  8856                           ;button.c: 33:         if(debounceButtonBuffer1[i] == debounceButtonBuffer2[i]){
  8857     04BB  0873               	movf	BTN_Reading@i,w
  8858     04BC  3EC8               	addlw	(low (_debounceButtonBuffer2| 0))& (0+255)
  8859     04BD  0086               	movwf	6
  8860     04BE  0187               	clrf	7
  8861     04BF  0873               	movf	BTN_Reading@i,w
  8862     04C0  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  8863     04C1  0084               	movwf	4
  8864     04C2  0185               	clrf	5
  8865     04C3  0800               	movf	0,w
  8866     04C4  0601               	xorwf	1,w
  8867     04C5  1D03               	skipz
  8868     04C6  2CC8               	goto	u178_21
  8869     04C7  2CC9               	goto	u178_20
  8870     04C8                     u178_21:
  8871     04C8  2D26               	goto	i1l2325
  8872     04C9                     u178_20:
  8873     04C9                     i1l2305:
  8874                           
  8875                           ;button.c: 34:             buttonBuffer[i] = debounceButtonBuffer1[i];
  8876     04C9  0873               	movf	BTN_Reading@i,w
  8877     04CA  3EC0               	addlw	(low (_buttonBuffer| 0))& (0+255)
  8878     04CB  0086               	movwf	6
  8879     04CC  0187               	clrf	7
  8880     04CD  0873               	movf	BTN_Reading@i,w
  8881     04CE  3E5A               	addlw	(low (_debounceButtonBuffer1| 0))& (0+255)
  8882     04CF  0084               	movwf	4
  8883     04D0  0185               	clrf	5
  8884     04D1  0800               	movf	0,w
  8885     04D2  0081               	movwf	1
  8886     04D3                     i1l2307:
  8887                           
  8888                           ;button.c: 35:             if(buttonBuffer[i] == 0){
  8889     04D3  0873               	movf	BTN_Reading@i,w
  8890     04D4  3EC0               	addlw	(low (_buttonBuffer| 0))& (0+255)
  8891     04D5  0086               	movwf	6
  8892     04D6  0187               	clrf	7
  8893     04D7  0801               	movf	1,w
  8894     04D8  1D03               	btfss	3,2
  8895     04D9  2CDB               	goto	u179_21
  8896     04DA  2CDC               	goto	u179_20
  8897     04DB                     u179_21:
  8898     04DB  2CFE               	goto	i1l2315
  8899     04DC                     u179_20:
  8900     04DC                     i1l2309:
  8901                           
  8902                           ;button.c: 36:                 if(counterForButtonPress[i] < 200){
  8903     04DC  3573               	lslf	BTN_Reading@i,w
  8904     04DD  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  8905     04DE  0086               	movwf	6
  8906     04DF  0187               	clrf	7
  8907     04E0  3F40               	moviw [0]fsr1
  8908     04E1  00F0               	movwf	??_BTN_Reading
  8909     04E2  3F41               	moviw [1]fsr1
  8910     04E3  00F1               	movwf	??_BTN_Reading+1
  8911     04E4  3000               	movlw	0
  8912     04E5  0271               	subwf	??_BTN_Reading+1,w
  8913     04E6  30C8               	movlw	200
  8914     04E7  1903               	skipnz
  8915     04E8  0270               	subwf	??_BTN_Reading,w
  8916     04E9  1803               	skipnc
  8917     04EA  2CEC               	goto	u180_21
  8918     04EB  2CED               	goto	u180_20
  8919     04EC                     u180_21:
  8920     04EC  2CF7               	goto	i1l2313
  8921     04ED                     u180_20:
  8922     04ED                     i1l2311:
  8923                           
  8924                           ;button.c: 37:                     counterForButtonPress[i]++;
  8925     04ED  3573               	lslf	BTN_Reading@i,w
  8926     04EE  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  8927     04EF  0086               	movwf	6
  8928     04F0  0187               	clrf	7
  8929     04F1  3001               	movlw	1
  8930     04F2  0781               	addwf	1,f
  8931     04F3  3141               	addfsr 1,1
  8932     04F4  1803               	skipnc
  8933     04F5  0A81               	incf	1,f
  8934                           
  8935                           ;button.c: 38:                 }
  8936     04F6  2D26               	goto	i1l2325
  8937     04F7                     i1l2313:
  8938     04F7  0873               	movf	BTN_Reading@i,w
  8939     04F8  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  8940     04F9  0086               	movwf	6
  8941     04FA  0187               	clrf	7
  8942     04FB  0181               	clrf	1
  8943     04FC  0A81               	incf	1,f
  8944     04FD  2D26               	goto	i1l2325
  8945     04FE                     i1l2315:
  8946                           
  8947                           ;button.c: 43:                 flagForButtonPress[i] = counterForButtonPress[i] && (!fla
      +                          gForButtonPress_s[i]);
  8948     04FE  01F2               	clrf	_BTN_Reading$37
  8949     04FF                     i1l2317:
  8950     04FF  3573               	lslf	BTN_Reading@i,w
  8951     0500  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  8952     0501  0086               	movwf	6
  8953     0502  0187               	clrf	7
  8954     0503  0016               	moviw fsr1++
  8955     0504  0401               	iorwf	1,w
  8956     0505  1903               	btfsc	3,2
  8957     0506  2D08               	goto	u181_21
  8958     0507  2D09               	goto	u181_20
  8959     0508                     u181_21:
  8960     0508  2D14               	goto	i1l2323
  8961     0509                     u181_20:
  8962     0509                     i1l2319:
  8963     0509  0873               	movf	BTN_Reading@i,w
  8964     050A  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  8965     050B  0086               	movwf	6
  8966     050C  0187               	clrf	7
  8967     050D  0801               	movf	1,w
  8968     050E  1D03               	btfss	3,2
  8969     050F  2D11               	goto	u182_21
  8970     0510  2D12               	goto	u182_20
  8971     0511                     u182_21:
  8972     0511  2D14               	goto	i1l2323
  8973     0512                     u182_20:
  8974     0512                     i1l2321:
  8975     0512  01F2               	clrf	_BTN_Reading$37
  8976     0513  0AF2               	incf	_BTN_Reading$37,f
  8977     0514                     i1l2323:
  8978     0514  0873               	movf	BTN_Reading@i,w
  8979     0515  3E56               	addlw	(low (_flagForButtonPress| 0))& (0+255)
  8980     0516  0086               	movwf	6
  8981     0517  0187               	clrf	7
  8982     0518  0872               	movf	_BTN_Reading$37,w
  8983     0519  0081               	movwf	1
  8984                           
  8985                           ;button.c: 44:                 counterForButtonPress[i] = 0;
  8986     051A  3573               	lslf	BTN_Reading@i,w
  8987     051B  3E4A               	addlw	(low (_counterForButtonPress| 0))& (0+255)
  8988     051C  0086               	movwf	6
  8989     051D  0187               	clrf	7
  8990     051E  3000               	movlw	0
  8991     051F  3FC0               	movwi [0]fsr1
  8992     0520  3FC1               	movwi [1]fsr1
  8993                           
  8994                           ;button.c: 45:                 flagForButtonPress_s[i] = 0;
  8995     0521  0873               	movf	BTN_Reading@i,w
  8996     0522  3E52               	addlw	(low (_flagForButtonPress_s| 0))& (0+255)
  8997     0523  0086               	movwf	6
  8998     0524  0187               	clrf	7
  8999     0525  0181               	clrf	1
  9000     0526                     i1l2325:
  9001                           
  9002                           ;button.c: 48:     }
  9003     0526  3001               	movlw	1
  9004     0527  00F0               	movwf	??_BTN_Reading
  9005     0528  0870               	movf	??_BTN_Reading,w
  9006     0529  07F3               	addwf	BTN_Reading@i,f
  9007     052A                     i1l2327:
  9008     052A  3004               	movlw	4
  9009     052B  0273               	subwf	BTN_Reading@i,w
  9010     052C  1C03               	skipc
  9011     052D  2D2F               	goto	u183_21
  9012     052E  2D30               	goto	u183_20
  9013     052F                     u183_21:
  9014     052F  2CA5               	goto	i1l2303
  9015     0530                     u183_20:
  9016     0530                     i1l39:
  9017     0530  0008               	return
  9018     0531                     __end_of_BTN_Reading:
  9019     007E                     btemp	set	126	;btemp
  9020     007E                     int$flags	set	126
  9021     007E                     wtemp0	set	126
  9022                           
  9023                           	psect	idloc
  9024                           
  9025                           ;Config register IDLOC0 @ 0x8000
  9026                           ;	unspecified, using default values
  9027     8000                     	org	32768
  9028     8000  3FFF               	dw	16383
  9029                           
  9030                           ;Config register IDLOC1 @ 0x8001
  9031                           ;	unspecified, using default values
  9032     8001                     	org	32769
  9033     8001  3FFF               	dw	16383
  9034                           
  9035                           ;Config register IDLOC2 @ 0x8002
  9036                           ;	unspecified, using default values
  9037     8002                     	org	32770
  9038     8002  3FFF               	dw	16383
  9039                           
  9040                           ;Config register IDLOC3 @ 0x8003
  9041                           ;	unspecified, using default values
  9042     8003                     	org	32771
  9043     8003  3FFF               	dw	16383
  9044                           
  9045                           	psect	config
  9046                           
  9047                           ;Config register CONFIG1 @ 0x8007
  9048                           ;	Oscillator Selection
  9049                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9050                           ;	Watchdog Timer Enable
  9051                           ;	WDTE = OFF, WDT disabled
  9052                           ;	Power-up Timer Enable
  9053                           ;	PWRTE = OFF, PWRT disabled
  9054                           ;	MCLR Pin Function Select
  9055                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  9056                           ;	Flash Program Memory Code Protection
  9057                           ;	CP = OFF, Program memory code protection is disabled
  9058                           ;	Data Memory Code Protection
  9059                           ;	CPD = OFF, Data memory code protection is disabled
  9060                           ;	Brown-out Reset Enable
  9061                           ;	BOREN = OFF, Brown-out Reset disabled
  9062                           ;	Clock Out Enable
  9063                           ;	CLKOUTEN = 0x1, unprogrammed default
  9064                           ;	Internal/External Switchover
  9065                           ;	IESO = 0x1, unprogrammed default
  9066                           ;	Fail-Safe Clock Monitor Enable
  9067                           ;	FCMEN = 0x1, unprogrammed default
  9068     8007                     	org	32775
  9069     8007  39A4               	dw	14756
  9070                           
  9071                           ;Config register CONFIG2 @ 0x8008
  9072                           ;	Flash Memory Self-Write Protection
  9073                           ;	WRT = 0x3, unprogrammed default
  9074                           ;	PLL Enable
  9075                           ;	PLLEN = 0x1, unprogrammed default
  9076                           ;	Stack Overflow/Underflow Reset Enable
  9077                           ;	STVREN = 0x1, unprogrammed default
  9078                           ;	Brown-out Reset Voltage Selection
  9079                           ;	BORV = 0x1, unprogrammed default
  9080                           ;	Low-Voltage Programming Enable
  9081                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9082     8008                     	org	32776
  9083     8008  1FFF               	dw	8191

Data Sizes:
    Strings     170
    Constant    0
    Data        44
    BSS         39
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     42      79
    BANK1            80      2      46
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    LcdPrintStringS@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[17]), STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _SYS_Init->_TMR1_Init
    _init_lcd->_lcd_send_command
    _EEP_ReadCupTotal->_eeprom_read
    _EEP_ReadAutoTime->_eeprom_read
    _FSM_ModeControl->_BTN_IsHeld
    _FSM_ModeControl->_BTN_IsPressed
    _FSM_ModeControl->_LcdPrintCharS
    _FSM_ModeControl->_LcdPrintStringS
    _FSM_ModeControl->___wmul
    _LcdPrintStringS->_lcd_print_charS
    _LcdPrintNumS->___lldiv
    _LcdPrintNumS->___llmod
    ___llmod->_lcd_power_of
    ___lldiv->_lcd_power_of
    _LcdPrintFloatS->___lwmod
    _EEP_SaveCupTotal->_eeprom_write
    _EEP_SaveAutoTime->_eeprom_write
    ___lwdiv->___lwmod
    ___lwdiv->___wmul
    _lcd_write_cmd->_lcd_write_4bits
    _lcd_write_data->_lcd_write_4bits
    _lcd_write_4bits->_lcd_delay

Critical Paths under _isr in COMMON

    _TMR1_Isr->_BTN_Reading

Critical Paths under _main in BANK0

    _SYS_Init->_TMR1_SetTime_ms
    _SYS_Init->_init_lcd
    _init_lcd->_lcd_send_command
    _lcd_send_command->_v_timer0
    _TMR1_SetTime_ms->___lwdiv
    _EEP_ReadCupTotal->_eeprom_read
    _EEP_ReadAutoTime->_eeprom_read
    _FSM_ModeControl->_LcdPrintNumS
    _LcdPrintStringS->_lcd_print_charS
    _LcdPrintNumS->___lldiv
    _lcd_power_of->___lmul
    ___llmod->_lcd_power_of
    ___lldiv->_lcd_power_of
    _LcdPrintFloatS->___lwdiv
    _EEP_SaveCupTotal->_eeprom_write
    _EEP_SaveAutoTime->_eeprom_write
    _BTN_IsPressed_ms->___lwdiv
    ___lwdiv->___lwmod
    ___lwdiv->___wmul
    _DisplayLcdScreen->_lcd_set_cursor
    _lcd_set_cursor->_lcd_write_cmd
    _lcd_write_cmd->_lcd_write_4bits
    _lcd_print_char->_lcd_write_data
    _lcd_write_data->_lcd_write_4bits
    _lcd_write_4bits->_lcd_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_FSM_ModeControl

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18331
                   _DisplayLcdScreen
                    _FSM_ModeControl
                           _SYS_Init
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0    3704
                           _BTN_Init
                   _EEP_ReadAutoTime
                   _EEP_ReadCupTotal
                           _FSM_Init
                           _INT_Init
                          _TMR1_Init
                    _TMR1_SetTime_ms
                           _init_lcd
 ---------------------------------------------------------------------------------
 (2) _init_lcd                                             1     1      0    2674
                                             13 BANK0      1     1      0
                   _lcd_send_command
                           _v_timer0
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     3     3      0    1368
                                              4 COMMON     2     2      0
                                             12 BANK0      1     1      0
                           _v_timer0
 ---------------------------------------------------------------------------------
 (3) _v_timer0                                            12     8      4    1306
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetTime_ms                                      2     0      2     870
                                             12 BANK0      2     0      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _TMR1_Init                                            2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FSM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEP_ReadCupTotal                                     4     4      0      31
                                              3 BANK0      4     4      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _EEP_ReadAutoTime                                     4     4      0      31
                                              3 BANK0      4     4      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _BTN_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM_ModeControl                                      2     2      0   13355
                                              0 BANK1      2     2      0
                         _BTN_IsHeld
                      _BTN_IsPressed
                   _BTN_IsPressed_ms
                    _BTN_IsPressed_s
                   _EEP_SaveAutoTime
                   _EEP_SaveCupTotal
                      _LcdPrintCharS
                     _LcdPrintFloatS
                       _LcdPrintNumS
                    _LcdPrintStringS
                            _MTR_Set
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _MTR_Set                                              1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LcdPrintStringS                                      6     3      3    3038
                                              5 COMMON     1     1      0
                                              3 BANK0      5     2      3
                    _lcd_print_charS
 ---------------------------------------------------------------------------------
 (2) _LcdPrintNumS                                         8     5      3    2758
                                             34 BANK0      8     5      3
                            ___lldiv
                            ___llmod
                       _lcd_power_of
                    _lcd_print_charS
 ---------------------------------------------------------------------------------
 (3) _lcd_power_of                                        10     6      4    1023
                                              4 COMMON     1     1      0
                                             12 BANK0      9     5      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     316
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              5 COMMON     1     1      0
                                             21 BANK0      9     1      8
                       _lcd_power_of (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              5 COMMON     1     1      0
                                             21 BANK0     13     5      8
                       _lcd_power_of (ARG)
 ---------------------------------------------------------------------------------
 (2) _LcdPrintFloatS                                       8     5      3    4147
                                             12 BANK0      8     5      3
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                    _lcd_print_charS
 ---------------------------------------------------------------------------------
 (3) _lcd_print_charS                                      4     4      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LcdPrintCharS                                        6     4      2     273
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _EEP_SaveCupTotal                                     0     0      0     422
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _EEP_SaveAutoTime                                     0     0      0     422
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         4     3      1     422
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _BTN_IsPressed_s                                      1     1      0      44
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BTN_IsPressed_ms                                     5     3      2     990
                                             12 BANK0      5     3      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     772
                                              4 BANK0      8     4      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _BTN_IsPressed                                        2     2      0      89
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _BTN_IsHeld                                           3     3      0      62
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DisplayLcdScreen                                     2     2      0    1272
                                             13 BANK0      2     2      0
                     _lcd_print_char
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       5     4      1     678
                                              8 BANK0      5     4      1
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_write_cmd                                        2     2      0     365
                                              6 BANK0      2     2      0
                          _lcd_delay
                    _lcd_write_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_print_char                                       1     1      0     396
                                              8 BANK0      1     1      0
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (3) _lcd_write_data                                       2     2      0     365
                                              6 BANK0      2     2      0
                          _lcd_delay
                    _lcd_write_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_write_4bits                                      2     2      0     167
                                              5 COMMON     1     1      0
                                              5 BANK0      1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (5) _lcd_delay                                            6     6      0     136
                                              4 COMMON     1     1      0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  0     0      0     444
                           _TMR1_Isr
                         _TMR1_Start
                          _TMR1_Stop
 ---------------------------------------------------------------------------------
 (7) _TMR1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_Isr                                             0     0      0     444
                        _BTN_Reading
 ---------------------------------------------------------------------------------
 (8) _BTN_Reading                                          4     4      0     444
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayLcdScreen
     _lcd_print_char
       _lcd_write_data
         _lcd_delay
         _lcd_write_4bits
           _lcd_delay
     _lcd_set_cursor
       _lcd_write_cmd
         _lcd_delay
         _lcd_write_4bits
   _FSM_ModeControl
     _BTN_IsHeld
     _BTN_IsPressed
     _BTN_IsPressed_ms
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
     _BTN_IsPressed_s
     _EEP_SaveAutoTime
       _eeprom_write
     _EEP_SaveCupTotal
       _eeprom_write
     _LcdPrintCharS
     _LcdPrintFloatS
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
       _lcd_print_charS
     _LcdPrintNumS
       ___lldiv
         _lcd_power_of (ARG)
           ___lmul
       ___llmod
         _lcd_power_of (ARG)
       _lcd_power_of
       _lcd_print_charS
     _LcdPrintStringS
       _lcd_print_charS
     _MTR_Set
     ___lwdiv
     ___wmul
   _SYS_Init
     _BTN_Init
     _EEP_ReadAutoTime
       _eeprom_read
     _EEP_ReadCupTotal
       _eeprom_read
     _FSM_Init
     _INT_Init
     _TMR1_Init
     _TMR1_SetTime_ms
       ___lwdiv
     _init_lcd
       _lcd_send_command
         _v_timer0
       _v_timer0

 _isr (ROOT)
   _TMR1_Isr
     _BTN_Reading
   _TMR1_Start
   _TMR1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      2E       7       57.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      87      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      87      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jan 29 13:49:04 2023

          ?_EEP_SaveCupTotal 0070            ?_EEP_SaveAutoTime 0070                           l43 0D1A  
                         l51 0C88                           l27 0C6C                           l47 0CD6  
                         l55 0ECA                           l94 0C3C                 ___awdiv@sign 0025  
                ?_BTN_IsHeld 0070          ___wmul@multiplicand 0022           ??_EEP_SaveCupTotal 0076  
              ?_lcd_power_of 002C           ??_EEP_SaveAutoTime 0076                          l103 00B8  
                        l203 0C61                          l403 0C37                          l260 0EEA  
                        l420 0C79                          l156 034A                          l317 03FA  
                        l430 0CEC                          l335 0D82                          l423 0C97  
                        l247 0E4F                          l328 0D4B                          l265 0EF7  
                        l353 0DE1                          l185 0CAB                          l273 0FFF  
                        l346 0DA0                          l610 0F18                          l282 06B7  
                        l363 0FC6                          l427 0E04                          l356 0C56  
                        l372 0585                          l268 0FE4                          l613 0F27  
                        l373 05A8                          l606 0EF9                          l366 0D32  
                        l198 0CC0                          l607 0EF9                          l631 0F5B  
                        l279 0798                          l369 0E28                          l377 04A3  
                        l617 0DAC                          l619 0DC0                          l388 07FF  
                        l653 0663                          l770 0608                          l907 0F90  
                        l587 0D4D                          l589 0D66                          l783 070B  
                        l847 0756                          l897 07D5                          _isr 0004  
               ___awmod@sign 0025                          wreg 0009                 MTR_Set@state 0074  
            _TMR1_SetTime_ms 0CAC                 ?_BTN_Reading 0070                lcd_delay@time 0020  
            ?_lcd_set_cursor 0028                         l3001 0D69                         l2121 061A  
                       l3003 0D6D                         l2131 0645                         l2123 061D  
                       l3021 0D9B                         l3013 0D86                         l3005 0D71  
                       l3101 06C3                         l2133 064D                         l2125 0628  
                       l3015 0D8A                         l3007 0D76                         l3031 0F11  
                       l3111 06D7                         l3103 06C5                         l3023 0D1C  
                       l2135 064E                         l2127 062C                         l2119 0609  
                       l2231 0723                         l3017 0D8F                         l3009 0D85  
                       l3041 0F20                         l3033 0F13                         l3121 06F2  
                       l3113 06DC                         l3105 06C9                         l3025 0D2E  
                       l2137 0655                         l2129 0633                         l2233 0727  
                       l2241 074E                         l2225 070C                         l3201 041B  
                       l2251 07A5                         l3043 0F21                         l3035 0F17  
                       l3027 0EFE                         l3051 05A9                         l3123 06F7  
                       l3115 06E0                         l3107 06CE                         l2139 065B  
                       l2235 0739                         l2227 0715                         l3211 0476  
                       l3203 0444                         l2341 0CC8                         l2261 07C5  
                       l2253 07AA                         l2245 0799                         l3045 0F26  
                       l3037 0F1B                         l3029 0F0B                         l3221 0E17  
                       l3061 05BA                         l3053 05AB                         l3117 06E4  
                       l3109 06D4                         l3125 06FD                         l3141 0F6F  
                       l3133 0F5C                         l2237 0741                         l2229 0718  
                       l3213 049C                         l3205 0446                         l3301 0DE2  
                       l3311 0DC4                         l2343 0CCE                         l2263 07C6  
                       l2255 07AE                         l2247 079C                         l3039 0F1F  
                       l3223 0C89                         l3071 05CE                         l3063 05BF  
                       l3055 05AF                         l3127 0702                         l3119 06EE  
                       l3143 0F73                         l3135 0F63                         l3151 0F8C  
                       l2239 0748                         l3215 049E                         l3207 046D  
                       l3047 0D53                         l3303 0DF7                         l3231 035E  
                       l3321 0DDD                         l3313 0DC7                         l3161 0D0E  
                       l2265 07CB                         l2257 07B2                         l2249 07A2  
                       l2353 0C7B                         l3217 0C6D                         l3081 05EE  
                       l3073 05D3                         l3065 05C3                         l3057 05B4  
                       l3129 0707                         l3145 0F7D                         l3137 0F66  
                       l3209 0472                         l3401 0143                         l3305 0E00  
                       l2441 0C9E                         l3241 036B                         l3233 0362  
                       l3225 034B                         l3155 0D06                         l2347 0CD0  
                       l2339 0CC2                         l2259 07C1                         l2267 07D1  
                       l2363 0EA2                         l2355 0C81                         l3219 0E07  
                       l3091 0604                         l3083 05EF                         l3075 05D7  
                       l3067 05C5                         l3059 05B6                         l3147 0F81  
                       l3139 0F6B                         l3171 07F6                         l3331 0DA1  
                       l3411 0169                         l3403 0157                         l3307 0CD7  
                       l2451 0CA7                         l2443 0CA2                         l3251 038B  
                       l3235 0366                         l3227 034D                         l3317 0DCA  
                       l3309 0DC3                         l3157 0D0C                         l2349 0CD5  
                       l2365 0EA8                         l3085 05F4                         l3077 05DB  
                       l3069 05CB                         l3149 0F86                         l3181 0571  
                       l3173 0533                         l3165 07D7                         l3341 0DBC  
                       l3333 0DA3                         l3501 02C2                         l3421 0183  
                       l3413 0172                         l3405 015B                         l2293 0C62  
                       l2373 0C38                         l2461 0C35                         l2453 0CA9  
                       l2445 0CA4                         l2437 0C98                         l3261 039B  
                       l3253 038F                         l3245 0376                         l3237 036A  
                       l3229 0359                         l3319 0DDA                         l2359 0C83  
                       l3079 05EA                         l3087 05FA                         l3095 06B8  
                       l3175 0543                         l3191 0414                         l3183 03FD  
                       l3167 07E9                         l2383 0C58                         l3335 0DA8  
                       l3503 02CB                         l3431 01B2                         l3423 018D  
                       l3415 0173                         l3407 0164                         l3351 0067  
                       l2295 0C66                         l2447 0CA5                         l2439 0C9A  
                       l2455 0CAC                         l3263 03A0                         l3247 037B  
                       l3329 0C52                         l2369 0EAA                         l3089 05FF  
                       l3097 06BA                         l3177 0551                         l3185 03FE  
                       l3169 07F1                         l3337 0DB1                         l3521 0318  
                       l3513 02FA                         l3505 02DF                         l3441 01DE  
                       l3433 01C0                         l3425 0197                         l3417 0177  
                       l3409 0165                         l3361 0086                         l3353 006B  
                       l3345 004E                         l2449 0CA6                         l2457 0CBD  
                       l3281 03D0                         l3273 03B5                         l3265 03AB  
                       l3257 0390                         l3249 0386                         l3601 0E6E  
                       l3099 06BE                         l3179 056B                         l3195 0419  
                       l3187 0406                         l3339 0DB6                         l3523 031D  
                       l3515 0303                         l3507 02EA                         l3451 01FE  
                       l3443 01E2                         l3435 01C5                         l3427 01A2  
                       l3419 0180                         l3371 00B9                         l3363 009A  
                       l3355 0074                         l3347 004F                         l3531 0326  
                       l2459 0CBF                         l3283 03D5                         l3267 03B0  
                       l3603 0E73                         l3189 040E                         l3525 0320  
                       l3517 030C                         l3509 02F5                         l3461 0225  
                       l3453 020E                         l3445 01ED                         l3437 01C7  
                       l3373 00C2                         l3381 00E3                         l3365 00A5  
                       l3357 0079                         l3349 0063                         l3293 03E2  
                       l3285 03D6                         l3277 03C0                         l3269 03B4  
                       l3541 0E29                         l3519 030F                         l3471 024C  
                       l3463 0233                         l3455 0215                         l3439 01D7  
                       l3447 01F0                         l3391 010E                         l3383 00EC  
                       l3375 00D6                         l3367 00B0                         l3359 007D  
                       l3295 03E7                         l3279 03C5                         l3551 0E3E  
                       l3543 0E2E                         l2921 0ED3                         l2913 0ECD  
                       l3561 0F97                         l3481 026F                         l3465 0238  
                       l3457 0219                         l3449 01F9                         l3393 0122  
                       l3385 0100                         l3377 00DB                         l3369 00B4  
                       l3297 03F2                         l3289 03D7                         l3553 0E41  
                       l3545 0E31                         l2923 0EE5                         l2915 0ED0  
                       l3571 0FA6                         l3491 02A2                         l3483 0272  
                       l3467 0243                         l3475 0258                         l3395 012D  
                       l3379 00DF                         l3299 03F6                         l3555 0E49  
                       l3547 0E38                         l3581 0FB3                         l3573 0FAC  
                       l3493 02AA                         l3485 0278                         l3477 0261  
                       l3469 0246                         l3397 0131                         l3389 0105  
                       l2933 0FCD                         l2925 0FC7                         l3557 0E4C  
                       l3549 0E3B                         l2943 0D3E                         l3583 0FBB  
                       l3575 0FB1                         l3567 0F99                         l3559 0F91  
                       l2951 0F28                         l3495 02B1                         l3479 0266  
                       l3399 013A                         l2935 0FDF                         l2927 0FCB  
                       l3591 0E56                         l2937 0D35                         l3585 0FC0  
                       l3569 0FA1                         l2961 0F53                         l2953 0F31  
                       l3497 02B5                         l3489 0284                         l3593 0E5C  
                       l2947 0D42                         l2939 0D3D                         l2955 0F35  
                       l2971 0780                         l3675 0330                         l3499 02B8  
                       l3595 0E5D                         l3587 0E50                         l2949 0D47  
                       l3677 0DD2                         l2957 0F3D                         l2973 0784  
                       l2965 0757                         l2981 066F                         l3597 0E60  
                       l3589 0E53                         l2959 0F44                         l2975 078F  
                       l2967 0760                         l2991 069B                         l2983 0670  
                       l3599 0E6A                         l2969 0762                         l2993 06A7  
                       l2985 067B                         l2995 06AC                         l2987 068B  
                       l2979 0666                         l2997 0D69                         l2989 0690  
                       ?_isr 0070        _counterForButtonPress 004A                         STR_1 1077  
                       STR_2 1033                         STR_3 1099                         STR_4 1000  
                       STR_5 1044                         STR_6 1011                         STR_7 1077  
                       STR_8 1033                         STR_9 1088                         u3000 0086  
                       u3001 0085                         u1330 061A                         u3010 00C2  
                       u1331 0619                         u3011 00C1                         u3100 01C5  
                       u3020 00EC                         u3101 01C4                         u3021 00EB  
                       u1350 062C                         u3110 01D7                         u3030 010E  
                       u1351 062B                         u3111 01D6                         u3031 010D  
                       u3200 026F                         u3120 01F9                         u3040 013A  
                       u1345 061E                         u3201 026E                         u3121 01F8  
                       u3041 0139                         u1370 0645                         u1610 0727  
                       u3210 02B1                         u3130 01FE                         u3050 0143  
                       u1371 0644                         u1611 0726                         u3211 02B0  
                       u3131 01FD                         u3051 0142                         u2420 0EE5  
                       u1620 0739                         u2500 078F                         u3220 02C2  
                       u3140 020E                         u3060 0164                         u3300 0E6A  
                       u2421 0EE4                         u1365 062D                         u1621 0738  
                       u1605 0719                         u2501 078E                         u3221 02C1  
                       u3141 020D                         u3061 0163                         u3301 0E69  
                       u2430 0EF7                         u1710 07D1                         u1390 065B  
                       u3230 02CB                         u3150 0233                         u3070 0172  
                       u3310 0E73                         u2431 0EF6                         u1711 07D0  
                       u1391 065A                         u1375 0641                         u3231 02CA  
                       u3151 0232                         u3071 0171                         u3311 0E72  
                       u2600 05BA                         u1640 074E                         u3240 0303  
                       u3160 0238                         u3080 0180                         u2440 0FDF  
                       u2425 0EE1                         u1705 07C7                         u2601 05B9  
                       u1385 064F                         u1641 074D                         u1625 0735  
                       u2505 078B                         u3241 0302                         u3161 0237  
                       u3081 017F                         u2441 0FDE                         u1650 07A2  
                       u2610 05CB                         u3250 030C                         u3170 0243  
                       u3090 01C0                         u2450 0FFF                         u2435 0EF3  
                       u1651 07A1                         u2611 05CA                         u1635 0742  
                       u3251 030B                         u3171 0242                         u3091 01BF  
                       u2451 0FFE                         u2515 0693                         u1900 0EC9  
                       u2700 06C9                         u2460 0F35                         u3260 0318  
                       u3180 0261                         u2525 0D7A                         u1901 0EC7  
                       u2701 06C8                         u2461 0F34                         u3261 0317  
                       u3181 0260                         u2445 0FDB                         u3270 0FAC  
                       u1670 07B2                         u1910 0ECA                         u2550 0EFE  
                       u2630 05DB                         u2710 06D4                         u1590 0715  
                       u3190 0266                         u2535 0D93                         u3271 0FAB  
                       u1671 07B1                         u2551 0EFD                         u2631 05DA  
                       u2711 06D3                         u1591 0714                         u3191 0265  
                       u2455 0FFB                         u3280 0FC6                         u2560 0F17  
                       u2800 0F73                         u3281 0FC5                         u1665 07A6  
                       u1905 0EC4                         u2561 0F16                         u2625 05CF  
                       u2801 0F72                         u2545 0D20                         u1690 07C1  
                       u2570 0F26                         u2650 05EA                         u2730 06E4  
                       u2810 0F7D                         u2490 0F53                         u1930 0C5F  
                       u3290 0E5C                         u1691 07C0                         u2571 0F25  
                       u2651 05E9                         u2731 06E3                         u2811 0F7C  
                       u2491 0F52                         u2475 0F3E                         u1931 0C5C  
                       u3291 0E5B                         u2740 06EE                         u2900 0444  
                       u2580 0D53                         u1685 07B3                         u2645 05DC  
                       u2741 06ED                         u2725 06D8                         u2485 0F45  
                       u2901 0443                         u2581 0D52                         u1870 0CCE  
                       u2670 05FA                         u2590 05AF                         u2830 0F8C  
                       u2910 0472                         u1871 0CCD                         u1695 07BD  
                       u2671 05F9                         u2655 05E6                         u2591 05AE  
                       u2831 0F8B                         u2815 0F79                         u2911 0471  
                       u2840 0D0C                         u1880 0C81                         u2680 05FF  
                       u2760 06FD                         u2920 04A3                         u1944 0C61  
                       u2841 0D0B                         u1881 0C80                         u2681 05FE  
                       u2665 05F0                         u2761 06FC                         u2745 06EA  
                       u2825 0F82                         u2921 04A2                         u2850 0D19  
                       u1890 0EA8                         u2770 0702                         u2690 06BE  
                       u2851 0D17                         u1891 0EA7                         u2771 0701  
                       u2755 06F3                         u2691 06BD                         u2860 0D1A  
                       u2780 0F63                         u2940 0E00                         u2781 0F62  
                       u2941 0DFF                         u2870 07FF                         u2950 0DA8  
                       u2935 0E1A                         u2871 07FE                         u2951 0DA7  
                       u2880 0571                         u2881 0570                         u2890 0414  
                       u2795 0F67                         u2891 0413                         u2980 0DBC  
                       u2981 0DBB                         u2965 0DAD                         u2990 0074  
                       i1l39 0530                         u2975 0DB2                         u2991 0073  
                       _TMR1 0016               ??_eeprom_write 0020       __end_of_lcd_write_data 0DA1  
                       _main 0E50           _flagForButtonPress 0056                         _mode 0069  
            __end_of_MTR_Set 0C62                         fsr0h 0005                         fsr1h 0007  
                       indf0 0000                         fsr0l 0004                         indf1 0001  
                       fsr1l 0006                         btemp 007E                _BTN_IsPressed 0CC1  
             ?_lcd_write_cmd 0070                         start 001D              ?_lcd_print_char 0070  
                      ??_isr 0074               ??_lcd_power_of 0074             __end_of_BTN_Init 0C6D  
                      ?_main 0070              __end_of___awdiv 0609                        _EEADR 0191  
                      STR_10 1055                        STR_11 1022                        STR_12 1066  
                      STR_13 1099                        STR_14 1000                        STR_15 1099  
                      STR_16 1000              __end_of___awmod 070C                        _ANSA0 0C60  
                      _ANSA1 0C61                        _ANSA2 0C62             __end_of_FSM_Init 0C3D  
            __end_of___lldiv 0664              ___awdiv@divisor 0020      __end_of_lcd_write_4bits 0D4C  
            __end_of___llmod 0757              __end_of___lwdiv 07D6                        i1l191 0C34  
                      i1l409 001B              __end_of___lwmod 0F91                        i1l195 0D03  
                      i1l188 0C4F              ___awdiv@counter 0024            ?_lcd_send_command 0070  
                      _PORTA 000C                        _PORTC 000E             __end_of_INT_Init 0C38  
                      _TRISA 008C                        _TRISC 008E             lcd_write_cmd@cmd 0027  
       __end_of_LcdPrintNumS 04A4          ___lmul@multiplicand 0024           ??_lcd_send_command 0074  
           __end_of_TMR1_Isr 0D04                  ?_TMR1_Start 0070  LcdPrintFloatS@decimalPlaces 0032  
            ?_lcd_write_data 0070               ?_BTN_IsPressed 0070                        status 0003  
                      wtemp0 007E             ?_lcd_print_charS 0070             __end_of_SYS_Init 0E50  
            __initialization 001F                 __end_of_main 0E78               _BTN_Reading$37 0072  
    BTN_IsPressed_ms@milisec 002C      __end_of_TMR1_SetTime_ms 0CC1                       ??_main 0076  
            _FSM_ModeControl 004E                    ??_MTR_Set 0074             ___llmod@dividend 0039  
                     _EEDATA 0193                       _EECON1 0195                       _EECON2 0196  
           ___awdiv@dividend 0022           BTN_IsPressed@index 0075               LcdPrintCharS@c 0075  
             LcdPrintCharS@x 0023               LcdPrintCharS@y 0074                       i1l2311 04ED  
                     i1l2303 04A5                       i1l2321 0512                       i1l2313 04F7  
                     i1l2305 04C9                       i1l2323 0514                       i1l2315 04FE  
                     i1l2307 04D3                       i1l2317 04FF                       i1l2309 04DC  
                     i1l2325 0526                       i1l2327 052A                       i1l2319 0509  
                     i1l2297 04A4                       i1l1847 0C32                       i1l2851 0006  
                     i1l2781 0CFC                       i1l2861 0018                       i1l2853 000B  
                     i1l2783 0CFE                       i1l2775 0C49                       i1l2855 0010  
                     i1l2785 0D00                       i1l2777 0C4E                       i1l2857 0013  
                     i1l2779 0CED                       i1l2859 0015                       u240_20 000B  
                     u240_21 000A                       u241_20 0010                       u241_21 000F  
                     u234_20 0CFC                       u234_21 0CFB                       u234_25 0CF8  
                     u180_20 04ED                       u180_21 04EC                       u181_20 0509  
                     u181_21 0508                       u182_20 0512                       u182_21 0511  
                     u183_20 0530                       u183_21 052F                       u178_20 04C9  
                     u178_21 04C8                       u179_20 04DC                       u179_21 04DB  
                     _TMR1IE 0488                       _TMR1IF 0088              ??_lcd_write_cmd 0026  
         lcd_write_4bits@dat 0025        __end_of_LcdPrintCharS 0E29                       ___lmul 0F28  
          __end_of_TMR1_Init 0CAC                       ___wmul 0DA1            __end_of_TMR1_Stop 0C35  
                  ??___awdiv 0074                    ??___awmod 0074                 BTN_Reading@i 0073  
                  ??___lldiv 0075                    ??___llmod 0075                    ??___lwdiv 0028  
                  ??___lwmod 0074                lcd_power_of@A 002C                lcd_power_of@i 0030  
              lcd_power_of@x 002E         _flagForButtonPress_s 0052             __end_of_init_lcd 03FB  
            _buttonInputMask 00C4             ___awdiv@quotient 0026              ___awmod@divisor 0020  
       __end_of_eeprom_write 0F28              ___awmod@counter 0024              _BTN_IsPressed_s 0C7A  
           ?_lcd_write_4bits 0070                 __pdataCOMMON 0078             __end_of_v_timer0 1000  
            ??_BTN_IsPressed 0074         __end_of_lcd_power_of 0799      __end_of__initialization 004A  
            eeprom_read@addr 0074                    ?_BTN_Init 0070                    ?_FSM_Init 0070  
                  ?_INT_Init 0070               __pcstackCOMMON 0070                 __pidataBANK0 0C30  
               __pidataBANK1 0E78      __end_of_FSM_ModeControl 034B                    ?_TMR1_Isr 0070  
               ??_BTN_IsHeld 0074             ?_TMR1_SetTime_ms 002C             ??_lcd_set_cursor 0029  
                  ?_SYS_Init 0070            eeprom_write@value 0074         lcd_set_cursor@column 0028  
                 __countAuto 0064                   __pbssBANK0 004A                   __pbssBANK1 00C8  
           ??_lcd_print_char 0076          TMR1_SetTime_ms@time 002C                   ??_BTN_Init 0074  
         __end_of_BTN_IsHeld 0D1B               _LcdPrintFloatS 0531                   ??_FSM_Init 0074  
               _LcdPrintNumS 03FB                   ??_INT_Init 0074                   __pmaintext 0E50  
                    ?___lmul 0020      __end_of_BTN_IsPressed_s 0C89                      ?___wmul 0020  
                 ??_TMR1_Isr 0074                   __pintentry 0004               ___lmul@product 0028  
           _EEP_ReadCupTotal 0CD7             _EEP_ReadAutoTime 0DE2          BTN_IsPressed@result 0074  
                 ??_SYS_Init 0076             ??_lcd_write_data 0026                 ??_TMR1_Start 0070  
            LcdPrintFloatS@x 0031              LcdPrintFloatS@y 002C                      _MTR_Set 0C57  
            BTN_IsHeld@index 0020           lcd_write_data@data 0027       __end_of_LcdPrintFloatS 05A9  
                  ?_init_lcd 0070        LcdPrintStringS@string 0024              LcdPrintNumS@num 0043  
          __end_of_lcd_delay 0EF8                    ?_v_timer0 0020                      ___awdiv 05A9  
                    ___awmod 06B8             _DisplayLcdScreen 0F91                      ___lldiv 0609  
                    ___llmod 070C             ?_FSM_ModeControl 0070                      ___lwdiv 0799  
                    ___lwmod 0F5C           __end_of_TMR1_Start 0C50                      __ptext1 0E29  
                    __ptext2 034B                      __ptext3 0664                      __ptext4 0FC7  
                    __ptext5 0CAC                      __ptext6 0C98                      __ptext7 0C35  
                    __ptext8 0C38                      __ptext9 0CD7            ??_LcdPrintStringS 0026  
                  _T1CONbits 0018             ___awmod@dividend 0022                      clrloop0 0C3E  
              __counterDelay 0077         end_of_initialization 004A             _BTN_IsPressed_ms 0EA0  
            ?_LcdPrintFloatS 002C        _debounceButtonBuffer1 005A        _debounceButtonBuffer2 00C8  
                    init_ram 0C43                   ??_init_lcd 002D                 _eeprom_write 0EF8  
                    initloop 0C44              ___lldiv@divisor 0035              ___lldiv@counter 0041  
                 ??_v_timer0 0024                   _timer1_MUL 006D                   _timer1_cnt 0062  
           ?_BTN_IsPressed_s 0070                    _TMR1_Init 0C98                    _PORTAbits 000C  
               _lcd_power_of 0757                    _TMR1_Stop 0C32            LcdPrintFloatS@num 002D  
       LcdPrintNumS@num_flag 0048             _EEP_SaveCupTotal 0C89                   lcd_delay@i 0021  
                 lcd_delay@j 0023             _EEP_SaveAutoTime 0C6D               TMR1_Init@count 0074  
              ??_eeprom_read 0020        __end_of_lcd_write_cmd 0D83        BTN_IsPressed_ms@index 0030  
                  _LcdScreen 00A0               __end_of___lmul 0F5C               __end_of___wmul 0DC1  
              __pidataCOMMON 0002                   ?_TMR1_Init 0074                   ?_TMR1_Stop 0070  
        start_initialization 001F                ??_BTN_Reading 0070                  __end_of_isr 001D  
      __end_of_BTN_IsPressed 0CD7             _lcd_send_command 0664              ___llmod@divisor 0035  
   __end_of_EEP_ReadCupTotal 0CED              ___llmod@counter 003D     __end_of_EEP_ReadAutoTime 0E05  
      lcd_set_cursor@address 002C                LcdPrintNumS@i 0049                LcdPrintNumS@x 0047  
              LcdPrintNumS@y 0042    LcdPrintFloatS@integerPart 0033                     ??___lmul 0074  
                   ??___wmul 0074          __end_of_eeprom_read 0D67                  __pdataBANK0 006D  
                __pdataBANK1 00A0            ??_lcd_print_charS 0020                  __pbssCOMMON 0076  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00CC  
           lcd_print_charS@c 0074                     ?_MTR_Set 0070     __end_of_DisplayLcdScreen 0FC7  
           eeprom_write@addr 0075                 _buttonBuffer 00C0                    __cupTotal 0066  
        __end_of_BTN_Reading 0531                    __pnvBANK0 006B                _LcdPrintCharS 0E05  
           ___lwdiv@dividend 0026              _LcdPrintStringS 07D6                    __timeAuto 0078  
                   ?___awdiv 0020                     ?___awmod 0020                     ?___lldiv 0035  
                   ?___llmod 0035                     ?___lwdiv 0024                     ?___lwmod 0020  
   __end_of_BTN_IsPressed_ms 0ECB                    _lcd_delay 0ECB          lcd_send_command@cmd 002C  
                ??_TMR1_Init 0076                  ??_TMR1_Stop 0070             lcd_power_of@temp 0031  
                  _index_lcd 006A             ??_LcdPrintFloatS 002F                  _flag_timer1 0068  
           ___lwdiv@quotient 0029               ___wmul@product 0074                     _BTN_Init 0C62  
             ?_LcdPrintCharS 0074                    clear_ram0 0C3D                  _eeprom_read 0D4C  
                   _FSM_Init 0C38            ??_lcd_write_4bits 0075                     _INT_Init 0C35  
   __end_of_EEP_SaveCupTotal 0C98     __end_of_EEP_SaveAutoTime 0C7A                     _TMR1_Isr 0CED  
                 ?_lcd_delay 0070            ___wmul@multiplier 0020         BTN_IsPressed_s@index 0074  
                   _SYS_Init 0E29                  _BTN_Reading 04A4            ___lmul@multiplier 0020  
    __end_of_LcdPrintStringS 0800            ??_TMR1_SetTime_ms 0076                   _EECON1bits 0195  
            lcd_print_char@c 0028     __end_of_lcd_send_command 06B8             LcdPrintStringS@x 0075  
           LcdPrintStringS@y 0023                  _current_col 005E                  _current_row 0060  
            ___lwdiv@divisor 0024              ___lwdiv@counter 002B                     __ptext10 0DE2  
                   __ptext11 0D4C                     __ptext20 070C                     __ptext12 0C62  
                   __ptext21 0609                     __ptext13 004E                     __ptext30 0EF8  
                   __ptext22 0531                     __ptext14 0DA1                     __ptext31 0C7A  
                   __ptext23 0D1B                     __ptext15 0C57                     __ptext40 0D83  
                   __ptext32 0EA0                     __ptext24 0F5C                     __ptext16 07D6  
                   __ptext41 0D33                     __ptext33 0799                     __ptext25 06B8  
                   __ptext17 03FB                     __ptext42 0ECB                     __ptext34 0CC1  
                   __ptext26 05A9                     __ptext18 0757                     __ptext35 0D04  
                   __ptext27 0E05                     __ptext19 0F28                     __ptext44 0C32  
                   __ptext36 0F91                     __ptext28 0C89                     __ptext45 0C49  
                   __ptext37 0DC1                     __ptext29 0C6D                     __ptext46 0CED  
                   __ptext38 0D67                     __ptext47 04A4                     __ptext39 0C50  
            ??_LcdPrintCharS 0020                     _init_lcd 034B            ?_EEP_ReadCupTotal 0070  
          ?_EEP_ReadAutoTime 0070                ?_LcdPrintNumS 0042                    v_timer0@i 0028  
                  v_timer0@j 002A           ??_EEP_ReadCupTotal 0023              _lcd_print_charS 0D1B  
                   _v_timer0 0FC7           ??_EEP_ReadAutoTime 0023                     int$flags 007E  
                ??_lcd_delay 0074                   _BTN_IsHeld 0D04                 _timer1_value 006B  
                 _INTCONbits 000B               __pstringtext10 1099               __pstringtext11 0000  
          ?_DisplayLcdScreen 0070                     intlevel1 0000               _lcd_set_cursor 0DC1  
          ??_FSM_ModeControl 00CC            lcd_set_cursor@row 002B             ?_LcdPrintStringS 0023  
           ___lwmod@dividend 0022           ??_DisplayLcdScreen 002D             ___lldiv@dividend 0039  
               v_timer0@time 0020               ??_LcdPrintNumS 0045                   _OSCCONbits 0099  
             _lcd_print_char 0C50            ?_BTN_IsPressed_ms 002C            DisplayLcdScreen@i 002E  
              __pstringtext1 1000                __pstringtext2 1011                __pstringtext3 1022  
              __pstringtext4 1033                __pstringtext5 1044                __pstringtext6 1055  
              __pstringtext7 1066                __pstringtext8 1077                __pstringtext9 1088  
         ??_BTN_IsPressed_ms 002E             ___lldiv@quotient 003D              ___lwmod@divisor 0020  
            ___lwmod@counter 0075              _flagPressAdjust 0076       __end_of_lcd_set_cursor 0DE2  
                 _TMR1_Start 0C49              _lcd_write_4bits 0D33            ??_BTN_IsPressed_s 0074  
              ?_eeprom_write 0074      __end_of_lcd_print_charS 0D33                   _STATUSbits 0003  
               ?_eeprom_read 0070               _lcd_write_data 0D83       __end_of_lcd_print_char 0C57  
              _lcd_write_cmd 0D67  
